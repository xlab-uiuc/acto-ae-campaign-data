---------- INPUT DELTA  ----------
{
      "values_changed": {
            "root['spec']['podDisruptionBudgets'][0]['minAvailable']": {
                  "prev": "50%",
                  "curr": "",
                  "path": [
                        "spec",
                        "podDisruptionBudgets",
                        0,
                        "minAvailable"
                  ]
            }
      }
}
---------- SYSTEM DELTA ----------
{
      "pod": {},
      "deployment_pods": {},
      "stateful_set": {},
      "deployment": {},
      "config_map": {},
      "service": {},
      "service_account": {},
      "pvc": {},
      "cronjob": {},
      "ingress": {},
      "network_policy": {},
      "pod_disruption_budget": {},
      "secret": {},
      "endpoints": {},
      "job": {},
      "role": {},
      "role_binding": {},
      "custom_resource_spec": {
            "values_changed": {
                  "root['podDisruptionBudgets'][0]['minAvailable']": {
                        "prev": "50%",
                        "curr": "",
                        "path": [
                              "podDisruptionBudgets",
                              0,
                              "minAvailable"
                        ]
                  }
            }
      },
      "custom_resource_status": {
            "dictionary_item_added": {
                  "root['conditions'][2]['message']": {
                        "prev": "NotPresent",
                        "curr": "Install failed with message: PodDisruptionBudget.policy \"eventing-webhook\" is invalid: spec.minAvailable: Invalid value: intstr.IntOrString{Type:1, IntVal:0, StrVal:\"\"}: a valid percent string must be a numeric string followed by an ending '%' (e.g. '1%',  or '93%', regex used for validation is '[0-9]+%')",
                        "path": [
                              "conditions",
                              2,
                              "message"
                        ]
                  },
                  "root['conditions'][2]['reason']": {
                        "prev": "NotPresent",
                        "curr": "Error",
                        "path": [
                              "conditions",
                              2,
                              "reason"
                        ]
                  },
                  "root['conditions'][3]['message']": {
                        "prev": "NotPresent",
                        "curr": "Install failed with message: PodDisruptionBudget.policy \"eventing-webhook\" is invalid: spec.minAvailable: Invalid value: intstr.IntOrString{Type:1, IntVal:0, StrVal:\"\"}: a valid percent string must be a numeric string followed by an ending '%' (e.g. '1%',  or '93%', regex used for validation is '[0-9]+%')",
                        "path": [
                              "conditions",
                              3,
                              "message"
                        ]
                  },
                  "root['conditions'][3]['reason']": {
                        "prev": "NotPresent",
                        "curr": "Error",
                        "path": [
                              "conditions",
                              3,
                              "reason"
                        ]
                  }
            },
            "values_changed": {
                  "root['conditions'][2]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:14:52Z",
                        "curr": "2023-03-31T20:19:12Z",
                        "path": [
                              "conditions",
                              2,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][2]['status']": {
                        "prev": "True",
                        "curr": "False",
                        "path": [
                              "conditions",
                              2,
                              "status"
                        ]
                  },
                  "root['conditions'][3]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:15:07Z",
                        "curr": "2023-03-31T20:19:12Z",
                        "path": [
                              "conditions",
                              3,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][3]['status']": {
                        "prev": "True",
                        "curr": "False",
                        "path": [
                              "conditions",
                              3,
                              "status"
                        ]
                  }
            }
      }
}