{
      "input_digest": "49a7f72838a8bd13ae96614bd691fe9b",
      "snapshot": {
            "input": {
                  "apiVersion": "mongodbcommunity.mongodb.com/v1",
                  "kind": "MongoDBCommunity",
                  "metadata": {
                        "name": "test-cluster",
                        "namespace": "mongodb"
                  },
                  "spec": {
                        "automationConfig": {
                              "processes": [
                                    {
                                          "disabled": false,
                                          "name": "test-cluster-1"
                                    }
                              ]
                        },
                        "members": 3,
                        "security": {
                              "authentication": {
                                    "modes": [
                                          "SCRAM-SHA-256"
                                    ]
                              }
                        },
                        "statefulSet": {
                              "spec": {
                                    "template": {
                                          "spec": {
                                                "containers": [
                                                      {
                                                            "name": "mongod",
                                                            "resources": {
                                                                  "limits": {
                                                                        "cpu": "1",
                                                                        "memory": "1000M"
                                                                  },
                                                                  "requests": {
                                                                        "cpu": "1",
                                                                        "memory": "1000M"
                                                                  }
                                                            }
                                                      },
                                                      {
                                                            "name": "mongodb-agent",
                                                            "resources": {
                                                                  "limits": {
                                                                        "cpu": "1",
                                                                        "memory": "1000M"
                                                                  },
                                                                  "requests": {
                                                                        "cpu": "1",
                                                                        "memory": "1000M"
                                                                  }
                                                            }
                                                      }
                                                ]
                                          }
                                    }
                              }
                        },
                        "type": "ReplicaSet",
                        "users": [
                              {
                                    "db": "admin",
                                    "name": "my-user",
                                    "passwordSecretRef": {
                                          "name": "my-user-password"
                                    },
                                    "roles": [
                                          {
                                                "db": "admin",
                                                "name": "clusterAdmin"
                                          },
                                          {
                                                "db": "admin",
                                                "name": "userAdminAnyDatabase"
                                          }
                                    ],
                                    "scramCredentialsSecretName": "my-scram"
                              }
                        ],
                        "version": "4.4.0"
                  }
            },
            "cli_result": {
                  "stdout": "mongodbcommunity.mongodbcommunity.mongodb.com/test-cluster created\n",
                  "stderr": ""
            },
            "system_state": {
                  "pod": {
                        "test-cluster-0": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "agent.mongodb.com/version": "1"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:09+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": "test-cluster-",
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc",
                                          "controller-revision-hash": "test-cluster-8656547cd7",
                                          "statefulset.kubernetes.io/pod-name": "test-cluster-0"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:generateName": {},
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {},
                                                                  "f:controller-revision-hash": {},
                                                                  "f:statefulset.kubernetes.io/pod-name": {}
                                                            },
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"0b532353-b23f-4638-a200-22ba3e06bfc4\"}": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:containers": {
                                                                  "k:{\"name\":\"mongod\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:env": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              }
                                                                        },
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:resources": {
                                                                              ".": {},
                                                                              "f:limits": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              },
                                                                              "f:requests": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              }
                                                                        },
                                                                        "f:securityContext": {
                                                                              ".": {},
                                                                              "f:runAsNonRoot": {},
                                                                              "f:runAsUser": {}
                                                                        },
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/data\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/healthstatus\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/hooks\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"mongodb-agent\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:env": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              },
                                                                              "k:{\"name\":\"AUTOMATION_CONFIG_MAP\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              },
                                                                              "k:{\"name\":\"HEADLESS_AGENT\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              },
                                                                              "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:valueFrom": {
                                                                                          ".": {},
                                                                                          "f:fieldRef": {}
                                                                                    }
                                                                              }
                                                                        },
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:readinessProbe": {
                                                                              ".": {},
                                                                              "f:exec": {
                                                                                    ".": {},
                                                                                    "f:command": {}
                                                                              },
                                                                              "f:failureThreshold": {},
                                                                              "f:initialDelaySeconds": {},
                                                                              "f:periodSeconds": {},
                                                                              "f:successThreshold": {},
                                                                              "f:timeoutSeconds": {}
                                                                        },
                                                                        "f:resources": {
                                                                              ".": {},
                                                                              "f:limits": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              },
                                                                              "f:requests": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              }
                                                                        },
                                                                        "f:securityContext": {
                                                                              ".": {},
                                                                              "f:runAsNonRoot": {},
                                                                              "f:runAsUser": {}
                                                                        },
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/data\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/lib/automation/config\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {},
                                                                                    "f:readOnly": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/log/mongodb-mms-automation/healthstatus\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:enableServiceLinks": {},
                                                            "f:hostname": {},
                                                            "f:initContainers": {
                                                                  ".": {},
                                                                  "k:{\"name\":\"mongod-posthook\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:resources": {},
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/hooks\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"mongodb-agent-readinessprobe\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:resources": {},
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  }
                                                            },
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                  ".": {},
                                                                  "f:fsGroup": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:subdomain": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                  ".": {},
                                                                  "k:{\"name\":\"agent-scripts\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  },
                                                                  "k:{\"name\":\"automation-config\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:secret": {
                                                                              ".": {},
                                                                              "f:defaultMode": {},
                                                                              "f:secretName": {}
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"data-volume\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:persistentVolumeClaim": {
                                                                              ".": {},
                                                                              "f:claimName": {}
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"healthstatus\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  },
                                                                  "k:{\"name\":\"hooks\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  },
                                                                  "k:{\"name\":\"logs-volume\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:persistentVolumeClaim": {
                                                                              ".": {},
                                                                              "f:claimName": {}
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"test-cluster-keyfile\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  }
                                                            }
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:09+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:agent.mongodb.com/version": {}
                                                            }
                                                      }
                                                },
                                                "manager": "readinessprobe",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:19+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:conditions": {
                                                                  "k:{\"type\":\"ContainersReady\"}": {
                                                                        ".": {},
                                                                        "f:lastProbeTime": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  },
                                                                  "k:{\"type\":\"Initialized\"}": {
                                                                        ".": {},
                                                                        "f:lastProbeTime": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  },
                                                                  "k:{\"type\":\"Ready\"}": {
                                                                        ".": {},
                                                                        "f:lastProbeTime": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  }
                                                            },
                                                            "f:containerStatuses": {},
                                                            "f:hostIP": {},
                                                            "f:initContainerStatuses": {},
                                                            "f:phase": {},
                                                            "f:podIP": {},
                                                            "f:podIPs": {
                                                                  ".": {},
                                                                  "k:{\"ip\":\"10.244.2.9\"}": {
                                                                        ".": {},
                                                                        "f:ip": {}
                                                                  }
                                                            },
                                                            "f:startTime": {}
                                                      }
                                                },
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:22:29+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-0",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "apps/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "StatefulSet",
                                                "name": "test-cluster",
                                                "uid": "0b532353-b23f-4638-a200-22ba3e06bfc4"
                                          }
                                    ],
                                    "resource_version": "2725",
                                    "self_link": null,
                                    "uid": "dc9e2b7b-6d63-4b6a-a141-738c75e1058c"
                              },
                              "spec": {
                                    "active_deadline_seconds": null,
                                    "affinity": null,
                                    "automount_service_account_token": null,
                                    "containers": [
                                          {
                                                "args": null,
                                                "command": [
                                                      "/bin/sh",
                                                      "-c",
                                                      "\n#run post-start hook to handle version changes\n/hooks/version-upgrade\n\n# wait for config and keyfile to be created by the agent\n while ! [ -f /data/automation-mongod.conf -a -f /var/lib/mongodb-mms-automation/authentication/keyfile ]; do sleep 3 ; done ; sleep 2 ;\n\n# with mongod configured to append logs, we need to provide them to stdout as\n# mongod does not write to stdout and a log file\ntail -F /var/log/mongodb-mms-automation/mongodb.log > /dev/stdout &\n\n# start mongod with this configuration\nexec mongod -f /data/automation-mongod.conf;\n\n"
                                                ],
                                                "env": [
                                                      {
                                                            "name": "AGENT_STATUS_FILEPATH",
                                                            "value": "/healthstatus/agent-health-status.json",
                                                            "value_from": null
                                                      }
                                                ],
                                                "env_from": null,
                                                "image": "docker.io/mongo:4.4.0",
                                                "image_pull_policy": "IfNotPresent",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongod",
                                                "ports": null,
                                                "readiness_probe": null,
                                                "resources": {
                                                      "limits": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      },
                                                      "requests": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      }
                                                },
                                                "security_context": {
                                                      "allow_privilege_escalation": null,
                                                      "capabilities": null,
                                                      "privileged": null,
                                                      "proc_mount": null,
                                                      "read_only_root_filesystem": null,
                                                      "run_as_group": null,
                                                      "run_as_non_root": true,
                                                      "run_as_user": 2000,
                                                      "se_linux_options": null,
                                                      "seccomp_profile": null,
                                                      "windows_options": null
                                                },
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/data",
                                                            "mount_propagation": null,
                                                            "name": "data-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/healthstatus",
                                                            "mount_propagation": null,
                                                            "name": "healthstatus",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/hooks",
                                                            "mount_propagation": null,
                                                            "name": "hooks",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/log/mongodb-mms-automation",
                                                            "mount_propagation": null,
                                                            "name": "logs-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                            "mount_propagation": null,
                                                            "name": "test-cluster-keyfile",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-ntltj",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          },
                                          {
                                                "args": null,
                                                "command": [
                                                      "/bin/bash",
                                                      "-c",
                                                      "current_uid=$(id -u)\nAGENT_API_KEY=\"$(cat /mongodb-automation/agent-api-key/agentApiKey)\"\ndeclare -r current_uid\nif ! grep -q \"${current_uid}\" /etc/passwd ; then\nsed -e \"s/^mongodb:/builder:/\" /etc/passwd > /tmp/passwd\necho \"mongodb:x:$(id -u):$(id -g):,,,:/:/bin/bash\" >> /tmp/passwd\nexport NSS_WRAPPER_PASSWD=/tmp/passwd\nexport LD_PRELOAD=libnss_wrapper.so\nexport NSS_WRAPPER_GROUP=/etc/group\nfi\nagent/mongodb-agent -healthCheckFilePath=/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json -serveStatusPort=5000 -cluster=/var/lib/automation/config/cluster-config.json -skipMongoStart -noDaemonize -useLocalMongoDbTools"
                                                ],
                                                "env": [
                                                      {
                                                            "name": "AGENT_STATUS_FILEPATH",
                                                            "value": "/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json",
                                                            "value_from": null
                                                      },
                                                      {
                                                            "name": "AUTOMATION_CONFIG_MAP",
                                                            "value": "test-cluster-config",
                                                            "value_from": null
                                                      },
                                                      {
                                                            "name": "HEADLESS_AGENT",
                                                            "value": "true",
                                                            "value_from": null
                                                      },
                                                      {
                                                            "name": "POD_NAMESPACE",
                                                            "value": null,
                                                            "value_from": {
                                                                  "config_map_key_ref": null,
                                                                  "field_ref": {
                                                                        "api_version": "v1",
                                                                        "field_path": "metadata.namespace"
                                                                  },
                                                                  "resource_field_ref": null,
                                                                  "secret_key_ref": null
                                                            }
                                                      }
                                                ],
                                                "env_from": null,
                                                "image": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                "image_pull_policy": "Always",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongodb-agent",
                                                "ports": null,
                                                "readiness_probe": {
                                                      "_exec": {
                                                            "command": [
                                                                  "/opt/scripts/readinessprobe"
                                                            ]
                                                      },
                                                      "failure_threshold": 40,
                                                      "http_get": null,
                                                      "initial_delay_seconds": 5,
                                                      "period_seconds": 10,
                                                      "success_threshold": 1,
                                                      "tcp_socket": null,
                                                      "termination_grace_period_seconds": null,
                                                      "timeout_seconds": 1
                                                },
                                                "resources": {
                                                      "limits": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      },
                                                      "requests": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      }
                                                },
                                                "security_context": {
                                                      "allow_privilege_escalation": null,
                                                      "capabilities": null,
                                                      "privileged": null,
                                                      "proc_mount": null,
                                                      "read_only_root_filesystem": null,
                                                      "run_as_group": null,
                                                      "run_as_non_root": true,
                                                      "run_as_user": 2000,
                                                      "se_linux_options": null,
                                                      "seccomp_profile": null,
                                                      "windows_options": null
                                                },
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/opt/scripts",
                                                            "mount_propagation": null,
                                                            "name": "agent-scripts",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/lib/automation/config",
                                                            "mount_propagation": null,
                                                            "name": "automation-config",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/data",
                                                            "mount_propagation": null,
                                                            "name": "data-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/log/mongodb-mms-automation/healthstatus",
                                                            "mount_propagation": null,
                                                            "name": "healthstatus",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/log/mongodb-mms-automation",
                                                            "mount_propagation": null,
                                                            "name": "logs-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                            "mount_propagation": null,
                                                            "name": "test-cluster-keyfile",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-ntltj",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          }
                                    ],
                                    "dns_config": null,
                                    "dns_policy": "ClusterFirst",
                                    "enable_service_links": true,
                                    "ephemeral_containers": null,
                                    "host_aliases": null,
                                    "host_ipc": null,
                                    "host_network": null,
                                    "host_pid": null,
                                    "hostname": "test-cluster-0",
                                    "image_pull_secrets": null,
                                    "init_containers": [
                                          {
                                                "args": null,
                                                "command": [
                                                      "cp",
                                                      "version-upgrade-hook",
                                                      "/hooks/version-upgrade"
                                                ],
                                                "env": null,
                                                "env_from": null,
                                                "image": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                "image_pull_policy": "Always",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongod-posthook",
                                                "ports": null,
                                                "readiness_probe": null,
                                                "resources": {
                                                      "limits": null,
                                                      "requests": null
                                                },
                                                "security_context": null,
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/hooks",
                                                            "mount_propagation": null,
                                                            "name": "hooks",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-ntltj",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          },
                                          {
                                                "args": null,
                                                "command": [
                                                      "cp",
                                                      "/probes/readinessprobe",
                                                      "/opt/scripts/readinessprobe"
                                                ],
                                                "env": null,
                                                "env_from": null,
                                                "image": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                "image_pull_policy": "Always",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongodb-agent-readinessprobe",
                                                "ports": null,
                                                "readiness_probe": null,
                                                "resources": {
                                                      "limits": null,
                                                      "requests": null
                                                },
                                                "security_context": null,
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/opt/scripts",
                                                            "mount_propagation": null,
                                                            "name": "agent-scripts",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-ntltj",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          }
                                    ],
                                    "node_name": "acto-cluster-9-worker",
                                    "node_selector": null,
                                    "overhead": null,
                                    "preemption_policy": "PreemptLowerPriority",
                                    "priority": 0,
                                    "priority_class_name": null,
                                    "readiness_gates": null,
                                    "restart_policy": "Always",
                                    "runtime_class_name": null,
                                    "scheduler_name": "default-scheduler",
                                    "security_context": {
                                          "fs_group": 2000,
                                          "fs_group_change_policy": null,
                                          "run_as_group": null,
                                          "run_as_non_root": null,
                                          "run_as_user": null,
                                          "se_linux_options": null,
                                          "seccomp_profile": null,
                                          "supplemental_groups": null,
                                          "sysctls": null,
                                          "windows_options": null
                                    },
                                    "service_account": "mongodb-database",
                                    "service_account_name": "mongodb-database",
                                    "set_hostname_as_fqdn": null,
                                    "share_process_namespace": null,
                                    "subdomain": "test-cluster-svc",
                                    "termination_grace_period_seconds": 30,
                                    "tolerations": [
                                          {
                                                "effect": "NoExecute",
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "toleration_seconds": 300,
                                                "value": null
                                          },
                                          {
                                                "effect": "NoExecute",
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "toleration_seconds": 300,
                                                "value": null
                                          }
                                    ],
                                    "topology_spread_constraints": null,
                                    "volumes": [
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "data-volume",
                                                "nfs": null,
                                                "persistent_volume_claim": {
                                                      "claim_name": "data-volume-test-cluster-0",
                                                      "read_only": null
                                                },
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "logs-volume",
                                                "nfs": null,
                                                "persistent_volume_claim": {
                                                      "claim_name": "logs-volume-test-cluster-0",
                                                      "read_only": null
                                                },
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "agent-scripts",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "automation-config",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": {
                                                      "default_mode": 416,
                                                      "items": null,
                                                      "optional": null,
                                                      "secret_name": "test-cluster-config"
                                                },
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "healthstatus",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "hooks",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "test-cluster-keyfile",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "kube-api-access-ntltj",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": {
                                                      "default_mode": 420,
                                                      "sources": [
                                                            {
                                                                  "config_map": null,
                                                                  "downward_api": null,
                                                                  "secret": null,
                                                                  "service_account_token": {
                                                                        "audience": null,
                                                                        "expiration_seconds": 3607,
                                                                        "path": "token"
                                                                  }
                                                            },
                                                            {
                                                                  "config_map": {
                                                                        "items": [
                                                                              {
                                                                                    "key": "ca.crt",
                                                                                    "mode": null,
                                                                                    "path": "ca.crt"
                                                                              }
                                                                        ],
                                                                        "name": "kube-root-ca.crt",
                                                                        "optional": null
                                                                  },
                                                                  "downward_api": null,
                                                                  "secret": null,
                                                                  "service_account_token": null
                                                            },
                                                            {
                                                                  "config_map": null,
                                                                  "downward_api": {
                                                                        "items": [
                                                                              {
                                                                                    "field_ref": {
                                                                                          "api_version": "v1",
                                                                                          "field_path": "metadata.namespace"
                                                                                    },
                                                                                    "mode": null,
                                                                                    "path": "namespace",
                                                                                    "resource_field_ref": null
                                                                              }
                                                                        ]
                                                                  },
                                                                  "secret": null,
                                                                  "service_account_token": null
                                                            }
                                                      ]
                                                },
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          }
                                    ]
                              },
                              "status": {
                                    "conditions": [
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:12+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "Initialized"
                                          },
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:29+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "Ready"
                                          },
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:29+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "ContainersReady"
                                          },
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:09+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "PodScheduled"
                                          }
                                    ],
                                    "container_statuses": [
                                          {
                                                "container_id": "containerd://2a2fc6ebdf0fd077ea2fb15d13fdf3ed96199d3189cc1e8b855d5e72d79da5c9",
                                                "image": "docker.io/library/mongo:4.4.0",
                                                "image_id": "docker.io/library/mongo@sha256:77f3d623d475c56ab43d61864bc3aa610953869724dbbea325989a0718741d1c",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongod",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": true,
                                                "state": {
                                                      "running": {
                                                            "started_at": "2023-03-25T22:22:13+00:00"
                                                      },
                                                      "terminated": null,
                                                      "waiting": null
                                                }
                                          },
                                          {
                                                "container_id": "containerd://3fa1d843e1939a37964527005930bcea46d85b24c9dcaa11ecc2957c76219b74",
                                                "image": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                "image_id": "quay.io/mongodb/mongodb-agent@sha256:8f94ce57a3fd65c9bc88a51aefdf4bb7eaa7d15ffc32566330e52eed77882a6c",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongodb-agent",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": true,
                                                "state": {
                                                      "running": {
                                                            "started_at": "2023-03-25T22:22:13+00:00"
                                                      },
                                                      "terminated": null,
                                                      "waiting": null
                                                }
                                          }
                                    ],
                                    "ephemeral_container_statuses": null,
                                    "host_ip": "172.18.0.6",
                                    "init_container_statuses": [
                                          {
                                                "container_id": "containerd://8679039577821300fb47ae7e7a3e45d37990127d3747d4d50a5278ad63ba1fb1",
                                                "image": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                "image_id": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook@sha256:64b27b76e89279664c227c9f6a31fd7c243a40d90b06b79e840d5488b81fd806",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongod-posthook",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": null,
                                                "state": {
                                                      "running": null,
                                                      "terminated": {
                                                            "container_id": "containerd://8679039577821300fb47ae7e7a3e45d37990127d3747d4d50a5278ad63ba1fb1",
                                                            "exit_code": 0,
                                                            "finished_at": "2023-03-25T22:22:11+00:00",
                                                            "message": null,
                                                            "reason": "Completed",
                                                            "signal": null,
                                                            "started_at": "2023-03-25T22:22:11+00:00"
                                                      },
                                                      "waiting": null
                                                }
                                          },
                                          {
                                                "container_id": "containerd://24991317da0bffc6ce927f9cad258e32fef22ad9f10c3ab43e5ca7c232aa1105",
                                                "image": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                "image_id": "quay.io/mongodb/mongodb-kubernetes-readinessprobe@sha256:d24d26ffdfe0776a7318e48454ec2614a39254e82c198727119bba4cb46d4028",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongodb-agent-readinessprobe",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": null,
                                                "state": {
                                                      "running": null,
                                                      "terminated": {
                                                            "container_id": "containerd://24991317da0bffc6ce927f9cad258e32fef22ad9f10c3ab43e5ca7c232aa1105",
                                                            "exit_code": 0,
                                                            "finished_at": "2023-03-25T22:22:12+00:00",
                                                            "message": null,
                                                            "reason": "Completed",
                                                            "signal": null,
                                                            "started_at": "2023-03-25T22:22:12+00:00"
                                                      },
                                                      "waiting": null
                                                }
                                          }
                                    ],
                                    "message": null,
                                    "nominated_node_name": null,
                                    "phase": "Running",
                                    "pod_ip": "10.244.2.9",
                                    "pod_i_ps": [
                                          {
                                                "ip": "10.244.2.9"
                                          }
                                    ],
                                    "qos_class": "Burstable",
                                    "reason": null,
                                    "start_time": "2023-03-25T22:22:09+00:00"
                              }
                        },
                        "test-cluster-1": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "agent.mongodb.com/version": "1"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:29+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": "test-cluster-",
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc",
                                          "controller-revision-hash": "test-cluster-8656547cd7",
                                          "statefulset.kubernetes.io/pod-name": "test-cluster-1"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:generateName": {},
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {},
                                                                  "f:controller-revision-hash": {},
                                                                  "f:statefulset.kubernetes.io/pod-name": {}
                                                            },
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"0b532353-b23f-4638-a200-22ba3e06bfc4\"}": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:containers": {
                                                                  "k:{\"name\":\"mongod\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:env": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              }
                                                                        },
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:resources": {
                                                                              ".": {},
                                                                              "f:limits": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              },
                                                                              "f:requests": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              }
                                                                        },
                                                                        "f:securityContext": {
                                                                              ".": {},
                                                                              "f:runAsNonRoot": {},
                                                                              "f:runAsUser": {}
                                                                        },
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/data\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/healthstatus\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/hooks\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"mongodb-agent\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:env": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              },
                                                                              "k:{\"name\":\"AUTOMATION_CONFIG_MAP\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              },
                                                                              "k:{\"name\":\"HEADLESS_AGENT\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              },
                                                                              "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:valueFrom": {
                                                                                          ".": {},
                                                                                          "f:fieldRef": {}
                                                                                    }
                                                                              }
                                                                        },
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:readinessProbe": {
                                                                              ".": {},
                                                                              "f:exec": {
                                                                                    ".": {},
                                                                                    "f:command": {}
                                                                              },
                                                                              "f:failureThreshold": {},
                                                                              "f:initialDelaySeconds": {},
                                                                              "f:periodSeconds": {},
                                                                              "f:successThreshold": {},
                                                                              "f:timeoutSeconds": {}
                                                                        },
                                                                        "f:resources": {
                                                                              ".": {},
                                                                              "f:limits": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              },
                                                                              "f:requests": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              }
                                                                        },
                                                                        "f:securityContext": {
                                                                              ".": {},
                                                                              "f:runAsNonRoot": {},
                                                                              "f:runAsUser": {}
                                                                        },
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/data\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/lib/automation/config\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {},
                                                                                    "f:readOnly": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/log/mongodb-mms-automation/healthstatus\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:enableServiceLinks": {},
                                                            "f:hostname": {},
                                                            "f:initContainers": {
                                                                  ".": {},
                                                                  "k:{\"name\":\"mongod-posthook\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:resources": {},
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/hooks\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"mongodb-agent-readinessprobe\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:resources": {},
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  }
                                                            },
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                  ".": {},
                                                                  "f:fsGroup": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:subdomain": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                  ".": {},
                                                                  "k:{\"name\":\"agent-scripts\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  },
                                                                  "k:{\"name\":\"automation-config\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:secret": {
                                                                              ".": {},
                                                                              "f:defaultMode": {},
                                                                              "f:secretName": {}
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"data-volume\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:persistentVolumeClaim": {
                                                                              ".": {},
                                                                              "f:claimName": {}
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"healthstatus\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  },
                                                                  "k:{\"name\":\"hooks\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  },
                                                                  "k:{\"name\":\"logs-volume\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:persistentVolumeClaim": {
                                                                              ".": {},
                                                                              "f:claimName": {}
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"test-cluster-keyfile\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  }
                                                            }
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:29+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:conditions": {
                                                                  "k:{\"type\":\"ContainersReady\"}": {
                                                                        ".": {},
                                                                        "f:lastProbeTime": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  },
                                                                  "k:{\"type\":\"Initialized\"}": {
                                                                        ".": {},
                                                                        "f:lastProbeTime": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  },
                                                                  "k:{\"type\":\"Ready\"}": {
                                                                        ".": {},
                                                                        "f:lastProbeTime": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  }
                                                            },
                                                            "f:containerStatuses": {},
                                                            "f:hostIP": {},
                                                            "f:initContainerStatuses": {},
                                                            "f:phase": {},
                                                            "f:podIP": {},
                                                            "f:podIPs": {
                                                                  ".": {},
                                                                  "k:{\"ip\":\"10.244.3.8\"}": {
                                                                        ".": {},
                                                                        "f:ip": {}
                                                                  }
                                                            },
                                                            "f:startTime": {}
                                                      }
                                                },
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:22:50+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:agent.mongodb.com/version": {}
                                                            }
                                                      }
                                                },
                                                "manager": "readinessprobe",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:50+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-1",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "apps/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "StatefulSet",
                                                "name": "test-cluster",
                                                "uid": "0b532353-b23f-4638-a200-22ba3e06bfc4"
                                          }
                                    ],
                                    "resource_version": "2786",
                                    "self_link": null,
                                    "uid": "241fda24-cfec-4427-800d-66fb312ffc55"
                              },
                              "spec": {
                                    "active_deadline_seconds": null,
                                    "affinity": null,
                                    "automount_service_account_token": null,
                                    "containers": [
                                          {
                                                "args": null,
                                                "command": [
                                                      "/bin/sh",
                                                      "-c",
                                                      "\n#run post-start hook to handle version changes\n/hooks/version-upgrade\n\n# wait for config and keyfile to be created by the agent\n while ! [ -f /data/automation-mongod.conf -a -f /var/lib/mongodb-mms-automation/authentication/keyfile ]; do sleep 3 ; done ; sleep 2 ;\n\n# with mongod configured to append logs, we need to provide them to stdout as\n# mongod does not write to stdout and a log file\ntail -F /var/log/mongodb-mms-automation/mongodb.log > /dev/stdout &\n\n# start mongod with this configuration\nexec mongod -f /data/automation-mongod.conf;\n\n"
                                                ],
                                                "env": [
                                                      {
                                                            "name": "AGENT_STATUS_FILEPATH",
                                                            "value": "/healthstatus/agent-health-status.json",
                                                            "value_from": null
                                                      }
                                                ],
                                                "env_from": null,
                                                "image": "docker.io/mongo:4.4.0",
                                                "image_pull_policy": "IfNotPresent",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongod",
                                                "ports": null,
                                                "readiness_probe": null,
                                                "resources": {
                                                      "limits": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      },
                                                      "requests": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      }
                                                },
                                                "security_context": {
                                                      "allow_privilege_escalation": null,
                                                      "capabilities": null,
                                                      "privileged": null,
                                                      "proc_mount": null,
                                                      "read_only_root_filesystem": null,
                                                      "run_as_group": null,
                                                      "run_as_non_root": true,
                                                      "run_as_user": 2000,
                                                      "se_linux_options": null,
                                                      "seccomp_profile": null,
                                                      "windows_options": null
                                                },
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/data",
                                                            "mount_propagation": null,
                                                            "name": "data-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/healthstatus",
                                                            "mount_propagation": null,
                                                            "name": "healthstatus",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/hooks",
                                                            "mount_propagation": null,
                                                            "name": "hooks",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/log/mongodb-mms-automation",
                                                            "mount_propagation": null,
                                                            "name": "logs-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                            "mount_propagation": null,
                                                            "name": "test-cluster-keyfile",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-dkbtl",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          },
                                          {
                                                "args": null,
                                                "command": [
                                                      "/bin/bash",
                                                      "-c",
                                                      "current_uid=$(id -u)\nAGENT_API_KEY=\"$(cat /mongodb-automation/agent-api-key/agentApiKey)\"\ndeclare -r current_uid\nif ! grep -q \"${current_uid}\" /etc/passwd ; then\nsed -e \"s/^mongodb:/builder:/\" /etc/passwd > /tmp/passwd\necho \"mongodb:x:$(id -u):$(id -g):,,,:/:/bin/bash\" >> /tmp/passwd\nexport NSS_WRAPPER_PASSWD=/tmp/passwd\nexport LD_PRELOAD=libnss_wrapper.so\nexport NSS_WRAPPER_GROUP=/etc/group\nfi\nagent/mongodb-agent -healthCheckFilePath=/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json -serveStatusPort=5000 -cluster=/var/lib/automation/config/cluster-config.json -skipMongoStart -noDaemonize -useLocalMongoDbTools"
                                                ],
                                                "env": [
                                                      {
                                                            "name": "AGENT_STATUS_FILEPATH",
                                                            "value": "/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json",
                                                            "value_from": null
                                                      },
                                                      {
                                                            "name": "AUTOMATION_CONFIG_MAP",
                                                            "value": "test-cluster-config",
                                                            "value_from": null
                                                      },
                                                      {
                                                            "name": "HEADLESS_AGENT",
                                                            "value": "true",
                                                            "value_from": null
                                                      },
                                                      {
                                                            "name": "POD_NAMESPACE",
                                                            "value": null,
                                                            "value_from": {
                                                                  "config_map_key_ref": null,
                                                                  "field_ref": {
                                                                        "api_version": "v1",
                                                                        "field_path": "metadata.namespace"
                                                                  },
                                                                  "resource_field_ref": null,
                                                                  "secret_key_ref": null
                                                            }
                                                      }
                                                ],
                                                "env_from": null,
                                                "image": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                "image_pull_policy": "Always",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongodb-agent",
                                                "ports": null,
                                                "readiness_probe": {
                                                      "_exec": {
                                                            "command": [
                                                                  "/opt/scripts/readinessprobe"
                                                            ]
                                                      },
                                                      "failure_threshold": 40,
                                                      "http_get": null,
                                                      "initial_delay_seconds": 5,
                                                      "period_seconds": 10,
                                                      "success_threshold": 1,
                                                      "tcp_socket": null,
                                                      "termination_grace_period_seconds": null,
                                                      "timeout_seconds": 1
                                                },
                                                "resources": {
                                                      "limits": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      },
                                                      "requests": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      }
                                                },
                                                "security_context": {
                                                      "allow_privilege_escalation": null,
                                                      "capabilities": null,
                                                      "privileged": null,
                                                      "proc_mount": null,
                                                      "read_only_root_filesystem": null,
                                                      "run_as_group": null,
                                                      "run_as_non_root": true,
                                                      "run_as_user": 2000,
                                                      "se_linux_options": null,
                                                      "seccomp_profile": null,
                                                      "windows_options": null
                                                },
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/opt/scripts",
                                                            "mount_propagation": null,
                                                            "name": "agent-scripts",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/lib/automation/config",
                                                            "mount_propagation": null,
                                                            "name": "automation-config",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/data",
                                                            "mount_propagation": null,
                                                            "name": "data-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/log/mongodb-mms-automation/healthstatus",
                                                            "mount_propagation": null,
                                                            "name": "healthstatus",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/log/mongodb-mms-automation",
                                                            "mount_propagation": null,
                                                            "name": "logs-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                            "mount_propagation": null,
                                                            "name": "test-cluster-keyfile",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-dkbtl",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          }
                                    ],
                                    "dns_config": null,
                                    "dns_policy": "ClusterFirst",
                                    "enable_service_links": true,
                                    "ephemeral_containers": null,
                                    "host_aliases": null,
                                    "host_ipc": null,
                                    "host_network": null,
                                    "host_pid": null,
                                    "hostname": "test-cluster-1",
                                    "image_pull_secrets": null,
                                    "init_containers": [
                                          {
                                                "args": null,
                                                "command": [
                                                      "cp",
                                                      "version-upgrade-hook",
                                                      "/hooks/version-upgrade"
                                                ],
                                                "env": null,
                                                "env_from": null,
                                                "image": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                "image_pull_policy": "Always",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongod-posthook",
                                                "ports": null,
                                                "readiness_probe": null,
                                                "resources": {
                                                      "limits": null,
                                                      "requests": null
                                                },
                                                "security_context": null,
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/hooks",
                                                            "mount_propagation": null,
                                                            "name": "hooks",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-dkbtl",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          },
                                          {
                                                "args": null,
                                                "command": [
                                                      "cp",
                                                      "/probes/readinessprobe",
                                                      "/opt/scripts/readinessprobe"
                                                ],
                                                "env": null,
                                                "env_from": null,
                                                "image": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                "image_pull_policy": "Always",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongodb-agent-readinessprobe",
                                                "ports": null,
                                                "readiness_probe": null,
                                                "resources": {
                                                      "limits": null,
                                                      "requests": null
                                                },
                                                "security_context": null,
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/opt/scripts",
                                                            "mount_propagation": null,
                                                            "name": "agent-scripts",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-dkbtl",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          }
                                    ],
                                    "node_name": "acto-cluster-9-worker2",
                                    "node_selector": null,
                                    "overhead": null,
                                    "preemption_policy": "PreemptLowerPriority",
                                    "priority": 0,
                                    "priority_class_name": null,
                                    "readiness_gates": null,
                                    "restart_policy": "Always",
                                    "runtime_class_name": null,
                                    "scheduler_name": "default-scheduler",
                                    "security_context": {
                                          "fs_group": 2000,
                                          "fs_group_change_policy": null,
                                          "run_as_group": null,
                                          "run_as_non_root": null,
                                          "run_as_user": null,
                                          "se_linux_options": null,
                                          "seccomp_profile": null,
                                          "supplemental_groups": null,
                                          "sysctls": null,
                                          "windows_options": null
                                    },
                                    "service_account": "mongodb-database",
                                    "service_account_name": "mongodb-database",
                                    "set_hostname_as_fqdn": null,
                                    "share_process_namespace": null,
                                    "subdomain": "test-cluster-svc",
                                    "termination_grace_period_seconds": 30,
                                    "tolerations": [
                                          {
                                                "effect": "NoExecute",
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "toleration_seconds": 300,
                                                "value": null
                                          },
                                          {
                                                "effect": "NoExecute",
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "toleration_seconds": 300,
                                                "value": null
                                          }
                                    ],
                                    "topology_spread_constraints": null,
                                    "volumes": [
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "data-volume",
                                                "nfs": null,
                                                "persistent_volume_claim": {
                                                      "claim_name": "data-volume-test-cluster-1",
                                                      "read_only": null
                                                },
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "logs-volume",
                                                "nfs": null,
                                                "persistent_volume_claim": {
                                                      "claim_name": "logs-volume-test-cluster-1",
                                                      "read_only": null
                                                },
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "agent-scripts",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "automation-config",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": {
                                                      "default_mode": 416,
                                                      "items": null,
                                                      "optional": null,
                                                      "secret_name": "test-cluster-config"
                                                },
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "healthstatus",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "hooks",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "test-cluster-keyfile",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "kube-api-access-dkbtl",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": {
                                                      "default_mode": 420,
                                                      "sources": [
                                                            {
                                                                  "config_map": null,
                                                                  "downward_api": null,
                                                                  "secret": null,
                                                                  "service_account_token": {
                                                                        "audience": null,
                                                                        "expiration_seconds": 3607,
                                                                        "path": "token"
                                                                  }
                                                            },
                                                            {
                                                                  "config_map": {
                                                                        "items": [
                                                                              {
                                                                                    "key": "ca.crt",
                                                                                    "mode": null,
                                                                                    "path": "ca.crt"
                                                                              }
                                                                        ],
                                                                        "name": "kube-root-ca.crt",
                                                                        "optional": null
                                                                  },
                                                                  "downward_api": null,
                                                                  "secret": null,
                                                                  "service_account_token": null
                                                            },
                                                            {
                                                                  "config_map": null,
                                                                  "downward_api": {
                                                                        "items": [
                                                                              {
                                                                                    "field_ref": {
                                                                                          "api_version": "v1",
                                                                                          "field_path": "metadata.namespace"
                                                                                    },
                                                                                    "mode": null,
                                                                                    "path": "namespace",
                                                                                    "resource_field_ref": null
                                                                              }
                                                                        ]
                                                                  },
                                                                  "secret": null,
                                                                  "service_account_token": null
                                                            }
                                                      ]
                                                },
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          }
                                    ]
                              },
                              "status": {
                                    "conditions": [
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:34+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "Initialized"
                                          },
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:50+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "Ready"
                                          },
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:50+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "ContainersReady"
                                          },
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:29+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "PodScheduled"
                                          }
                                    ],
                                    "container_statuses": [
                                          {
                                                "container_id": "containerd://99961d576081702aa7b8e9ca455eb5e723d9b0fc18b96364530d11f8e7fc54df",
                                                "image": "docker.io/library/mongo:4.4.0",
                                                "image_id": "docker.io/library/mongo@sha256:77f3d623d475c56ab43d61864bc3aa610953869724dbbea325989a0718741d1c",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongod",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": true,
                                                "state": {
                                                      "running": {
                                                            "started_at": "2023-03-25T22:22:34+00:00"
                                                      },
                                                      "terminated": null,
                                                      "waiting": null
                                                }
                                          },
                                          {
                                                "container_id": "containerd://60e68fe343fe721cdea4905de33a3685779fa706be22d1a675f65486ba1af06b",
                                                "image": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                "image_id": "quay.io/mongodb/mongodb-agent@sha256:8f94ce57a3fd65c9bc88a51aefdf4bb7eaa7d15ffc32566330e52eed77882a6c",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongodb-agent",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": true,
                                                "state": {
                                                      "running": {
                                                            "started_at": "2023-03-25T22:22:35+00:00"
                                                      },
                                                      "terminated": null,
                                                      "waiting": null
                                                }
                                          }
                                    ],
                                    "ephemeral_container_statuses": null,
                                    "host_ip": "172.18.0.13",
                                    "init_container_statuses": [
                                          {
                                                "container_id": "containerd://165114361f2d692adbb404c7e9158143c2d895d1fc01b01bf0400b6af310ba61",
                                                "image": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                "image_id": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook@sha256:64b27b76e89279664c227c9f6a31fd7c243a40d90b06b79e840d5488b81fd806",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongod-posthook",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": null,
                                                "state": {
                                                      "running": null,
                                                      "terminated": {
                                                            "container_id": "containerd://165114361f2d692adbb404c7e9158143c2d895d1fc01b01bf0400b6af310ba61",
                                                            "exit_code": 0,
                                                            "finished_at": "2023-03-25T22:22:31+00:00",
                                                            "message": null,
                                                            "reason": "Completed",
                                                            "signal": null,
                                                            "started_at": "2023-03-25T22:22:31+00:00"
                                                      },
                                                      "waiting": null
                                                }
                                          },
                                          {
                                                "container_id": "containerd://b15d232cf7fbf4c8593675925a71dbc06a44cc7d022b8df8901309411218f352",
                                                "image": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                "image_id": "quay.io/mongodb/mongodb-kubernetes-readinessprobe@sha256:d24d26ffdfe0776a7318e48454ec2614a39254e82c198727119bba4cb46d4028",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongodb-agent-readinessprobe",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": null,
                                                "state": {
                                                      "running": null,
                                                      "terminated": {
                                                            "container_id": "containerd://b15d232cf7fbf4c8593675925a71dbc06a44cc7d022b8df8901309411218f352",
                                                            "exit_code": 0,
                                                            "finished_at": "2023-03-25T22:22:33+00:00",
                                                            "message": null,
                                                            "reason": "Completed",
                                                            "signal": null,
                                                            "started_at": "2023-03-25T22:22:33+00:00"
                                                      },
                                                      "waiting": null
                                                }
                                          }
                                    ],
                                    "message": null,
                                    "nominated_node_name": null,
                                    "phase": "Running",
                                    "pod_ip": "10.244.3.8",
                                    "pod_i_ps": [
                                          {
                                                "ip": "10.244.3.8"
                                          }
                                    ],
                                    "qos_class": "Burstable",
                                    "reason": null,
                                    "start_time": "2023-03-25T22:22:29+00:00"
                              }
                        },
                        "test-cluster-2": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "agent.mongodb.com/version": "1"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:50+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": "test-cluster-",
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc",
                                          "controller-revision-hash": "test-cluster-8656547cd7",
                                          "statefulset.kubernetes.io/pod-name": "test-cluster-2"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:generateName": {},
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {},
                                                                  "f:controller-revision-hash": {},
                                                                  "f:statefulset.kubernetes.io/pod-name": {}
                                                            },
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"0b532353-b23f-4638-a200-22ba3e06bfc4\"}": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:containers": {
                                                                  "k:{\"name\":\"mongod\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:env": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              }
                                                                        },
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:resources": {
                                                                              ".": {},
                                                                              "f:limits": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              },
                                                                              "f:requests": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              }
                                                                        },
                                                                        "f:securityContext": {
                                                                              ".": {},
                                                                              "f:runAsNonRoot": {},
                                                                              "f:runAsUser": {}
                                                                        },
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/data\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/healthstatus\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/hooks\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"mongodb-agent\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:env": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              },
                                                                              "k:{\"name\":\"AUTOMATION_CONFIG_MAP\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              },
                                                                              "k:{\"name\":\"HEADLESS_AGENT\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:value": {}
                                                                              },
                                                                              "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:valueFrom": {
                                                                                          ".": {},
                                                                                          "f:fieldRef": {}
                                                                                    }
                                                                              }
                                                                        },
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:readinessProbe": {
                                                                              ".": {},
                                                                              "f:exec": {
                                                                                    ".": {},
                                                                                    "f:command": {}
                                                                              },
                                                                              "f:failureThreshold": {},
                                                                              "f:initialDelaySeconds": {},
                                                                              "f:periodSeconds": {},
                                                                              "f:successThreshold": {},
                                                                              "f:timeoutSeconds": {}
                                                                        },
                                                                        "f:resources": {
                                                                              ".": {},
                                                                              "f:limits": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              },
                                                                              "f:requests": {
                                                                                    ".": {},
                                                                                    "f:cpu": {},
                                                                                    "f:memory": {}
                                                                              }
                                                                        },
                                                                        "f:securityContext": {
                                                                              ".": {},
                                                                              "f:runAsNonRoot": {},
                                                                              "f:runAsUser": {}
                                                                        },
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/data\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/lib/automation/config\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {},
                                                                                    "f:readOnly": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"mountPath\":\"/var/log/mongodb-mms-automation/healthstatus\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:enableServiceLinks": {},
                                                            "f:hostname": {},
                                                            "f:initContainers": {
                                                                  ".": {},
                                                                  "k:{\"name\":\"mongod-posthook\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:resources": {},
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/hooks\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"mongodb-agent-readinessprobe\"}": {
                                                                        ".": {},
                                                                        "f:command": {},
                                                                        "f:image": {},
                                                                        "f:imagePullPolicy": {},
                                                                        "f:name": {},
                                                                        "f:resources": {},
                                                                        "f:terminationMessagePath": {},
                                                                        "f:terminationMessagePolicy": {},
                                                                        "f:volumeMounts": {
                                                                              ".": {},
                                                                              "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                    ".": {},
                                                                                    "f:mountPath": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  }
                                                            },
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                  ".": {},
                                                                  "f:fsGroup": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:subdomain": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                  ".": {},
                                                                  "k:{\"name\":\"agent-scripts\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  },
                                                                  "k:{\"name\":\"automation-config\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:secret": {
                                                                              ".": {},
                                                                              "f:defaultMode": {},
                                                                              "f:secretName": {}
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"data-volume\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:persistentVolumeClaim": {
                                                                              ".": {},
                                                                              "f:claimName": {}
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"healthstatus\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  },
                                                                  "k:{\"name\":\"hooks\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  },
                                                                  "k:{\"name\":\"logs-volume\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:persistentVolumeClaim": {
                                                                              ".": {},
                                                                              "f:claimName": {}
                                                                        }
                                                                  },
                                                                  "k:{\"name\":\"test-cluster-keyfile\"}": {
                                                                        ".": {},
                                                                        "f:emptyDir": {},
                                                                        "f:name": {}
                                                                  }
                                                            }
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:50+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:agent.mongodb.com/version": {}
                                                            }
                                                      }
                                                },
                                                "manager": "readinessprobe",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:23:00+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:conditions": {
                                                                  "k:{\"type\":\"ContainersReady\"}": {
                                                                        ".": {},
                                                                        "f:lastProbeTime": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  },
                                                                  "k:{\"type\":\"Initialized\"}": {
                                                                        ".": {},
                                                                        "f:lastProbeTime": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  },
                                                                  "k:{\"type\":\"Ready\"}": {
                                                                        ".": {},
                                                                        "f:lastProbeTime": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  }
                                                            },
                                                            "f:containerStatuses": {},
                                                            "f:hostIP": {},
                                                            "f:initContainerStatuses": {},
                                                            "f:phase": {},
                                                            "f:podIP": {},
                                                            "f:podIPs": {
                                                                  ".": {},
                                                                  "k:{\"ip\":\"10.244.1.9\"}": {
                                                                        ".": {},
                                                                        "f:ip": {}
                                                                  }
                                                            },
                                                            "f:startTime": {}
                                                      }
                                                },
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:23:10+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-2",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "apps/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "StatefulSet",
                                                "name": "test-cluster",
                                                "uid": "0b532353-b23f-4638-a200-22ba3e06bfc4"
                                          }
                                    ],
                                    "resource_version": "2850",
                                    "self_link": null,
                                    "uid": "c3aca22f-f2f0-4428-9010-d2ba1f3b3989"
                              },
                              "spec": {
                                    "active_deadline_seconds": null,
                                    "affinity": null,
                                    "automount_service_account_token": null,
                                    "containers": [
                                          {
                                                "args": null,
                                                "command": [
                                                      "/bin/sh",
                                                      "-c",
                                                      "\n#run post-start hook to handle version changes\n/hooks/version-upgrade\n\n# wait for config and keyfile to be created by the agent\n while ! [ -f /data/automation-mongod.conf -a -f /var/lib/mongodb-mms-automation/authentication/keyfile ]; do sleep 3 ; done ; sleep 2 ;\n\n# with mongod configured to append logs, we need to provide them to stdout as\n# mongod does not write to stdout and a log file\ntail -F /var/log/mongodb-mms-automation/mongodb.log > /dev/stdout &\n\n# start mongod with this configuration\nexec mongod -f /data/automation-mongod.conf;\n\n"
                                                ],
                                                "env": [
                                                      {
                                                            "name": "AGENT_STATUS_FILEPATH",
                                                            "value": "/healthstatus/agent-health-status.json",
                                                            "value_from": null
                                                      }
                                                ],
                                                "env_from": null,
                                                "image": "docker.io/mongo:4.4.0",
                                                "image_pull_policy": "IfNotPresent",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongod",
                                                "ports": null,
                                                "readiness_probe": null,
                                                "resources": {
                                                      "limits": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      },
                                                      "requests": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      }
                                                },
                                                "security_context": {
                                                      "allow_privilege_escalation": null,
                                                      "capabilities": null,
                                                      "privileged": null,
                                                      "proc_mount": null,
                                                      "read_only_root_filesystem": null,
                                                      "run_as_group": null,
                                                      "run_as_non_root": true,
                                                      "run_as_user": 2000,
                                                      "se_linux_options": null,
                                                      "seccomp_profile": null,
                                                      "windows_options": null
                                                },
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/data",
                                                            "mount_propagation": null,
                                                            "name": "data-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/healthstatus",
                                                            "mount_propagation": null,
                                                            "name": "healthstatus",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/hooks",
                                                            "mount_propagation": null,
                                                            "name": "hooks",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/log/mongodb-mms-automation",
                                                            "mount_propagation": null,
                                                            "name": "logs-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                            "mount_propagation": null,
                                                            "name": "test-cluster-keyfile",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-r6pr7",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          },
                                          {
                                                "args": null,
                                                "command": [
                                                      "/bin/bash",
                                                      "-c",
                                                      "current_uid=$(id -u)\nAGENT_API_KEY=\"$(cat /mongodb-automation/agent-api-key/agentApiKey)\"\ndeclare -r current_uid\nif ! grep -q \"${current_uid}\" /etc/passwd ; then\nsed -e \"s/^mongodb:/builder:/\" /etc/passwd > /tmp/passwd\necho \"mongodb:x:$(id -u):$(id -g):,,,:/:/bin/bash\" >> /tmp/passwd\nexport NSS_WRAPPER_PASSWD=/tmp/passwd\nexport LD_PRELOAD=libnss_wrapper.so\nexport NSS_WRAPPER_GROUP=/etc/group\nfi\nagent/mongodb-agent -healthCheckFilePath=/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json -serveStatusPort=5000 -cluster=/var/lib/automation/config/cluster-config.json -skipMongoStart -noDaemonize -useLocalMongoDbTools"
                                                ],
                                                "env": [
                                                      {
                                                            "name": "AGENT_STATUS_FILEPATH",
                                                            "value": "/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json",
                                                            "value_from": null
                                                      },
                                                      {
                                                            "name": "AUTOMATION_CONFIG_MAP",
                                                            "value": "test-cluster-config",
                                                            "value_from": null
                                                      },
                                                      {
                                                            "name": "HEADLESS_AGENT",
                                                            "value": "true",
                                                            "value_from": null
                                                      },
                                                      {
                                                            "name": "POD_NAMESPACE",
                                                            "value": null,
                                                            "value_from": {
                                                                  "config_map_key_ref": null,
                                                                  "field_ref": {
                                                                        "api_version": "v1",
                                                                        "field_path": "metadata.namespace"
                                                                  },
                                                                  "resource_field_ref": null,
                                                                  "secret_key_ref": null
                                                            }
                                                      }
                                                ],
                                                "env_from": null,
                                                "image": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                "image_pull_policy": "Always",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongodb-agent",
                                                "ports": null,
                                                "readiness_probe": {
                                                      "_exec": {
                                                            "command": [
                                                                  "/opt/scripts/readinessprobe"
                                                            ]
                                                      },
                                                      "failure_threshold": 40,
                                                      "http_get": null,
                                                      "initial_delay_seconds": 5,
                                                      "period_seconds": 10,
                                                      "success_threshold": 1,
                                                      "tcp_socket": null,
                                                      "termination_grace_period_seconds": null,
                                                      "timeout_seconds": 1
                                                },
                                                "resources": {
                                                      "limits": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      },
                                                      "requests": {
                                                            "cpu": "1",
                                                            "memory": "1G"
                                                      }
                                                },
                                                "security_context": {
                                                      "allow_privilege_escalation": null,
                                                      "capabilities": null,
                                                      "privileged": null,
                                                      "proc_mount": null,
                                                      "read_only_root_filesystem": null,
                                                      "run_as_group": null,
                                                      "run_as_non_root": true,
                                                      "run_as_user": 2000,
                                                      "se_linux_options": null,
                                                      "seccomp_profile": null,
                                                      "windows_options": null
                                                },
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/opt/scripts",
                                                            "mount_propagation": null,
                                                            "name": "agent-scripts",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/lib/automation/config",
                                                            "mount_propagation": null,
                                                            "name": "automation-config",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/data",
                                                            "mount_propagation": null,
                                                            "name": "data-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/log/mongodb-mms-automation/healthstatus",
                                                            "mount_propagation": null,
                                                            "name": "healthstatus",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/log/mongodb-mms-automation",
                                                            "mount_propagation": null,
                                                            "name": "logs-volume",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                            "mount_propagation": null,
                                                            "name": "test-cluster-keyfile",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-r6pr7",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          }
                                    ],
                                    "dns_config": null,
                                    "dns_policy": "ClusterFirst",
                                    "enable_service_links": true,
                                    "ephemeral_containers": null,
                                    "host_aliases": null,
                                    "host_ipc": null,
                                    "host_network": null,
                                    "host_pid": null,
                                    "hostname": "test-cluster-2",
                                    "image_pull_secrets": null,
                                    "init_containers": [
                                          {
                                                "args": null,
                                                "command": [
                                                      "cp",
                                                      "version-upgrade-hook",
                                                      "/hooks/version-upgrade"
                                                ],
                                                "env": null,
                                                "env_from": null,
                                                "image": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                "image_pull_policy": "Always",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongod-posthook",
                                                "ports": null,
                                                "readiness_probe": null,
                                                "resources": {
                                                      "limits": null,
                                                      "requests": null
                                                },
                                                "security_context": null,
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/hooks",
                                                            "mount_propagation": null,
                                                            "name": "hooks",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-r6pr7",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          },
                                          {
                                                "args": null,
                                                "command": [
                                                      "cp",
                                                      "/probes/readinessprobe",
                                                      "/opt/scripts/readinessprobe"
                                                ],
                                                "env": null,
                                                "env_from": null,
                                                "image": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                "image_pull_policy": "Always",
                                                "lifecycle": null,
                                                "liveness_probe": null,
                                                "name": "mongodb-agent-readinessprobe",
                                                "ports": null,
                                                "readiness_probe": null,
                                                "resources": {
                                                      "limits": null,
                                                      "requests": null
                                                },
                                                "security_context": null,
                                                "startup_probe": null,
                                                "stdin": null,
                                                "stdin_once": null,
                                                "termination_message_path": "/dev/termination-log",
                                                "termination_message_policy": "File",
                                                "tty": null,
                                                "volume_devices": null,
                                                "volume_mounts": [
                                                      {
                                                            "mount_path": "/opt/scripts",
                                                            "mount_propagation": null,
                                                            "name": "agent-scripts",
                                                            "read_only": null,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      },
                                                      {
                                                            "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                            "mount_propagation": null,
                                                            "name": "kube-api-access-r6pr7",
                                                            "read_only": true,
                                                            "sub_path": null,
                                                            "sub_path_expr": null
                                                      }
                                                ],
                                                "working_dir": null
                                          }
                                    ],
                                    "node_name": "acto-cluster-9-worker3",
                                    "node_selector": null,
                                    "overhead": null,
                                    "preemption_policy": "PreemptLowerPriority",
                                    "priority": 0,
                                    "priority_class_name": null,
                                    "readiness_gates": null,
                                    "restart_policy": "Always",
                                    "runtime_class_name": null,
                                    "scheduler_name": "default-scheduler",
                                    "security_context": {
                                          "fs_group": 2000,
                                          "fs_group_change_policy": null,
                                          "run_as_group": null,
                                          "run_as_non_root": null,
                                          "run_as_user": null,
                                          "se_linux_options": null,
                                          "seccomp_profile": null,
                                          "supplemental_groups": null,
                                          "sysctls": null,
                                          "windows_options": null
                                    },
                                    "service_account": "mongodb-database",
                                    "service_account_name": "mongodb-database",
                                    "set_hostname_as_fqdn": null,
                                    "share_process_namespace": null,
                                    "subdomain": "test-cluster-svc",
                                    "termination_grace_period_seconds": 30,
                                    "tolerations": [
                                          {
                                                "effect": "NoExecute",
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "toleration_seconds": 300,
                                                "value": null
                                          },
                                          {
                                                "effect": "NoExecute",
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "toleration_seconds": 300,
                                                "value": null
                                          }
                                    ],
                                    "topology_spread_constraints": null,
                                    "volumes": [
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "data-volume",
                                                "nfs": null,
                                                "persistent_volume_claim": {
                                                      "claim_name": "data-volume-test-cluster-2",
                                                      "read_only": null
                                                },
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "logs-volume",
                                                "nfs": null,
                                                "persistent_volume_claim": {
                                                      "claim_name": "logs-volume-test-cluster-2",
                                                      "read_only": null
                                                },
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "agent-scripts",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "automation-config",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": {
                                                      "default_mode": 416,
                                                      "items": null,
                                                      "optional": null,
                                                      "secret_name": "test-cluster-config"
                                                },
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "healthstatus",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "hooks",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": {
                                                      "medium": null,
                                                      "size_limit": null
                                                },
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "test-cluster-keyfile",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": null,
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          },
                                          {
                                                "aws_elastic_block_store": null,
                                                "azure_disk": null,
                                                "azure_file": null,
                                                "cephfs": null,
                                                "cinder": null,
                                                "config_map": null,
                                                "csi": null,
                                                "downward_api": null,
                                                "empty_dir": null,
                                                "ephemeral": null,
                                                "fc": null,
                                                "flex_volume": null,
                                                "flocker": null,
                                                "gce_persistent_disk": null,
                                                "git_repo": null,
                                                "glusterfs": null,
                                                "host_path": null,
                                                "iscsi": null,
                                                "name": "kube-api-access-r6pr7",
                                                "nfs": null,
                                                "persistent_volume_claim": null,
                                                "photon_persistent_disk": null,
                                                "portworx_volume": null,
                                                "projected": {
                                                      "default_mode": 420,
                                                      "sources": [
                                                            {
                                                                  "config_map": null,
                                                                  "downward_api": null,
                                                                  "secret": null,
                                                                  "service_account_token": {
                                                                        "audience": null,
                                                                        "expiration_seconds": 3607,
                                                                        "path": "token"
                                                                  }
                                                            },
                                                            {
                                                                  "config_map": {
                                                                        "items": [
                                                                              {
                                                                                    "key": "ca.crt",
                                                                                    "mode": null,
                                                                                    "path": "ca.crt"
                                                                              }
                                                                        ],
                                                                        "name": "kube-root-ca.crt",
                                                                        "optional": null
                                                                  },
                                                                  "downward_api": null,
                                                                  "secret": null,
                                                                  "service_account_token": null
                                                            },
                                                            {
                                                                  "config_map": null,
                                                                  "downward_api": {
                                                                        "items": [
                                                                              {
                                                                                    "field_ref": {
                                                                                          "api_version": "v1",
                                                                                          "field_path": "metadata.namespace"
                                                                                    },
                                                                                    "mode": null,
                                                                                    "path": "namespace",
                                                                                    "resource_field_ref": null
                                                                              }
                                                                        ]
                                                                  },
                                                                  "secret": null,
                                                                  "service_account_token": null
                                                            }
                                                      ]
                                                },
                                                "quobyte": null,
                                                "rbd": null,
                                                "scale_io": null,
                                                "secret": null,
                                                "storageos": null,
                                                "vsphere_volume": null
                                          }
                                    ]
                              },
                              "status": {
                                    "conditions": [
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:55+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "Initialized"
                                          },
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:23:10+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "Ready"
                                          },
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:23:10+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "ContainersReady"
                                          },
                                          {
                                                "last_probe_time": null,
                                                "last_transition_time": "2023-03-25T22:22:50+00:00",
                                                "message": null,
                                                "reason": null,
                                                "status": "True",
                                                "type": "PodScheduled"
                                          }
                                    ],
                                    "container_statuses": [
                                          {
                                                "container_id": "containerd://8234b7cb9bec3452e806d5c7993ac27e06f3debc49d7ab5343421b8266bc1005",
                                                "image": "docker.io/library/mongo:4.4.0",
                                                "image_id": "docker.io/library/mongo@sha256:77f3d623d475c56ab43d61864bc3aa610953869724dbbea325989a0718741d1c",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongod",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": true,
                                                "state": {
                                                      "running": {
                                                            "started_at": "2023-03-25T22:22:55+00:00"
                                                      },
                                                      "terminated": null,
                                                      "waiting": null
                                                }
                                          },
                                          {
                                                "container_id": "containerd://d335f68d1c064689920c0cdd7664cf7217cf1400d95730e2012afe224da4e220",
                                                "image": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                "image_id": "quay.io/mongodb/mongodb-agent@sha256:8f94ce57a3fd65c9bc88a51aefdf4bb7eaa7d15ffc32566330e52eed77882a6c",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongodb-agent",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": true,
                                                "state": {
                                                      "running": {
                                                            "started_at": "2023-03-25T22:22:55+00:00"
                                                      },
                                                      "terminated": null,
                                                      "waiting": null
                                                }
                                          }
                                    ],
                                    "ephemeral_container_statuses": null,
                                    "host_ip": "172.18.0.9",
                                    "init_container_statuses": [
                                          {
                                                "container_id": "containerd://d03fc68c19c39379bc35afc0f9c0be4612bba68adaa724b3d481d1d3b57bc3ee",
                                                "image": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                "image_id": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook@sha256:64b27b76e89279664c227c9f6a31fd7c243a40d90b06b79e840d5488b81fd806",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongod-posthook",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": null,
                                                "state": {
                                                      "running": null,
                                                      "terminated": {
                                                            "container_id": "containerd://d03fc68c19c39379bc35afc0f9c0be4612bba68adaa724b3d481d1d3b57bc3ee",
                                                            "exit_code": 0,
                                                            "finished_at": "2023-03-25T22:22:52+00:00",
                                                            "message": null,
                                                            "reason": "Completed",
                                                            "signal": null,
                                                            "started_at": "2023-03-25T22:22:52+00:00"
                                                      },
                                                      "waiting": null
                                                }
                                          },
                                          {
                                                "container_id": "containerd://7e584f3e1ed2351a5ef2b682b8fcf9e0cf49aad098d771e8395a9cf42be2cad6",
                                                "image": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                "image_id": "quay.io/mongodb/mongodb-kubernetes-readinessprobe@sha256:d24d26ffdfe0776a7318e48454ec2614a39254e82c198727119bba4cb46d4028",
                                                "last_state": {
                                                      "running": null,
                                                      "terminated": null,
                                                      "waiting": null
                                                },
                                                "name": "mongodb-agent-readinessprobe",
                                                "ready": true,
                                                "restart_count": 0,
                                                "started": null,
                                                "state": {
                                                      "running": null,
                                                      "terminated": {
                                                            "container_id": "containerd://7e584f3e1ed2351a5ef2b682b8fcf9e0cf49aad098d771e8395a9cf42be2cad6",
                                                            "exit_code": 0,
                                                            "finished_at": "2023-03-25T22:22:54+00:00",
                                                            "message": null,
                                                            "reason": "Completed",
                                                            "signal": null,
                                                            "started_at": "2023-03-25T22:22:54+00:00"
                                                      },
                                                      "waiting": null
                                                }
                                          }
                                    ],
                                    "message": null,
                                    "nominated_node_name": null,
                                    "phase": "Running",
                                    "pod_ip": "10.244.1.9",
                                    "pod_i_ps": [
                                          {
                                                "ip": "10.244.1.9"
                                          }
                                    ],
                                    "qos_class": "Burstable",
                                    "reason": null,
                                    "start_time": "2023-03-25T22:22:50+00:00"
                              }
                        }
                  },
                  "deployment_pods": {
                        "mongodb-kubernetes-operator": [
                              {
                                    "api_version": null,
                                    "kind": null,
                                    "metadata": {
                                          "annotations": {
                                                "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                                          },
                                          "cluster_name": null,
                                          "creation_timestamp": "2023-03-25T22:11:00+00:00",
                                          "deletion_grace_period_seconds": null,
                                          "deletion_timestamp": null,
                                          "finalizers": null,
                                          "generate_name": "mongodb-kubernetes-operator-765485f445-",
                                          "generation": null,
                                          "labels": {
                                                "acto/tag": "operator-pod",
                                                "name": "mongodb-kubernetes-operator",
                                                "pod-template-hash": "765485f445"
                                          },
                                          "managed_fields": [
                                                {
                                                      "api_version": "v1",
                                                      "fields_type": "FieldsV1",
                                                      "fields_v1": {
                                                            "f:metadata": {
                                                                  "f:generateName": {},
                                                                  "f:labels": {
                                                                        ".": {},
                                                                        "f:acto/tag": {},
                                                                        "f:name": {},
                                                                        "f:pod-template-hash": {}
                                                                  },
                                                                  "f:ownerReferences": {
                                                                        ".": {},
                                                                        "k:{\"uid\":\"bae14033-eb3a-45d2-80bc-dd396cdb34bd\"}": {}
                                                                  }
                                                            },
                                                            "f:spec": {
                                                                  "f:affinity": {
                                                                        ".": {},
                                                                        "f:podAntiAffinity": {
                                                                              ".": {},
                                                                              "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                                        }
                                                                  },
                                                                  "f:containers": {
                                                                        "k:{\"name\":\"mongodb-kubernetes-operator\"}": {
                                                                              ".": {},
                                                                              "f:command": {},
                                                                              "f:env": {
                                                                                    ".": {},
                                                                                    "k:{\"name\":\"AGENT_IMAGE\"}": {
                                                                                          ".": {},
                                                                                          "f:name": {},
                                                                                          "f:value": {}
                                                                                    },
                                                                                    "k:{\"name\":\"MONGODB_IMAGE\"}": {
                                                                                          ".": {},
                                                                                          "f:name": {},
                                                                                          "f:value": {}
                                                                                    },
                                                                                    "k:{\"name\":\"MONGODB_REPO_URL\"}": {
                                                                                          ".": {},
                                                                                          "f:name": {},
                                                                                          "f:value": {}
                                                                                    },
                                                                                    "k:{\"name\":\"OPERATOR_NAME\"}": {
                                                                                          ".": {},
                                                                                          "f:name": {},
                                                                                          "f:value": {}
                                                                                    },
                                                                                    "k:{\"name\":\"POD_NAME\"}": {
                                                                                          ".": {},
                                                                                          "f:name": {},
                                                                                          "f:valueFrom": {
                                                                                                ".": {},
                                                                                                "f:fieldRef": {}
                                                                                          }
                                                                                    },
                                                                                    "k:{\"name\":\"READINESS_PROBE_IMAGE\"}": {
                                                                                          ".": {},
                                                                                          "f:name": {},
                                                                                          "f:value": {}
                                                                                    },
                                                                                    "k:{\"name\":\"VERSION_UPGRADE_HOOK_IMAGE\"}": {
                                                                                          ".": {},
                                                                                          "f:name": {},
                                                                                          "f:value": {}
                                                                                    },
                                                                                    "k:{\"name\":\"WATCH_NAMESPACE\"}": {
                                                                                          ".": {},
                                                                                          "f:name": {},
                                                                                          "f:valueFrom": {
                                                                                                ".": {},
                                                                                                "f:fieldRef": {}
                                                                                          }
                                                                                    }
                                                                              },
                                                                              "f:image": {},
                                                                              "f:imagePullPolicy": {},
                                                                              "f:name": {},
                                                                              "f:resources": {
                                                                                    ".": {},
                                                                                    "f:limits": {
                                                                                          ".": {},
                                                                                          "f:cpu": {},
                                                                                          "f:memory": {}
                                                                                    },
                                                                                    "f:requests": {
                                                                                          ".": {},
                                                                                          "f:cpu": {},
                                                                                          "f:memory": {}
                                                                                    }
                                                                              },
                                                                              "f:securityContext": {
                                                                                    ".": {},
                                                                                    "f:allowPrivilegeEscalation": {},
                                                                                    "f:readOnlyRootFilesystem": {},
                                                                                    "f:runAsUser": {}
                                                                              },
                                                                              "f:terminationMessagePath": {},
                                                                              "f:terminationMessagePolicy": {}
                                                                        }
                                                                  },
                                                                  "f:dnsPolicy": {},
                                                                  "f:enableServiceLinks": {},
                                                                  "f:restartPolicy": {},
                                                                  "f:schedulerName": {},
                                                                  "f:securityContext": {
                                                                        ".": {},
                                                                        "f:seccompProfile": {
                                                                              ".": {},
                                                                              "f:type": {}
                                                                        }
                                                                  },
                                                                  "f:serviceAccount": {},
                                                                  "f:serviceAccountName": {},
                                                                  "f:terminationGracePeriodSeconds": {}
                                                            }
                                                      },
                                                      "manager": "kube-controller-manager",
                                                      "operation": "Update",
                                                      "subresource": null,
                                                      "time": "2023-03-25T22:11:00+00:00"
                                                },
                                                {
                                                      "api_version": "v1",
                                                      "fields_type": "FieldsV1",
                                                      "fields_v1": {
                                                            "f:status": {
                                                                  "f:conditions": {
                                                                        "k:{\"type\":\"ContainersReady\"}": {
                                                                              ".": {},
                                                                              "f:lastProbeTime": {},
                                                                              "f:lastTransitionTime": {},
                                                                              "f:status": {},
                                                                              "f:type": {}
                                                                        },
                                                                        "k:{\"type\":\"Initialized\"}": {
                                                                              ".": {},
                                                                              "f:lastProbeTime": {},
                                                                              "f:lastTransitionTime": {},
                                                                              "f:status": {},
                                                                              "f:type": {}
                                                                        },
                                                                        "k:{\"type\":\"Ready\"}": {
                                                                              ".": {},
                                                                              "f:lastProbeTime": {},
                                                                              "f:lastTransitionTime": {},
                                                                              "f:status": {},
                                                                              "f:type": {}
                                                                        }
                                                                  },
                                                                  "f:containerStatuses": {},
                                                                  "f:hostIP": {},
                                                                  "f:phase": {},
                                                                  "f:podIP": {},
                                                                  "f:podIPs": {
                                                                        ".": {},
                                                                        "k:{\"ip\":\"10.244.1.2\"}": {
                                                                              ".": {},
                                                                              "f:ip": {}
                                                                        }
                                                                  },
                                                                  "f:startTime": {}
                                                            }
                                                      },
                                                      "manager": "kubelet",
                                                      "operation": "Update",
                                                      "subresource": "status",
                                                      "time": "2023-03-25T22:11:10+00:00"
                                                }
                                          ],
                                          "name": "mongodb-kubernetes-operator-765485f445-rd64g",
                                          "namespace": "mongodb",
                                          "owner_references": [
                                                {
                                                      "api_version": "apps/v1",
                                                      "block_owner_deletion": true,
                                                      "controller": true,
                                                      "kind": "ReplicaSet",
                                                      "name": "mongodb-kubernetes-operator-765485f445",
                                                      "uid": "bae14033-eb3a-45d2-80bc-dd396cdb34bd"
                                                }
                                          ],
                                          "resource_version": "876",
                                          "self_link": null,
                                          "uid": "e2ccc99a-93de-49d3-a4cb-ebac35a5eb86"
                                    },
                                    "spec": {
                                          "active_deadline_seconds": null,
                                          "affinity": {
                                                "node_affinity": null,
                                                "pod_affinity": null,
                                                "pod_anti_affinity": {
                                                      "preferred_during_scheduling_ignored_during_execution": null,
                                                      "required_during_scheduling_ignored_during_execution": [
                                                            {
                                                                  "label_selector": {
                                                                        "match_expressions": [
                                                                              {
                                                                                    "key": "name",
                                                                                    "operator": "In",
                                                                                    "values": [
                                                                                          "mongodb-kubernetes-operator"
                                                                                    ]
                                                                              }
                                                                        ],
                                                                        "match_labels": null
                                                                  },
                                                                  "namespace_selector": null,
                                                                  "namespaces": null,
                                                                  "topology_key": "kubernetes.io/hostname"
                                                            }
                                                      ]
                                                }
                                          },
                                          "automount_service_account_token": null,
                                          "containers": [
                                                {
                                                      "args": null,
                                                      "command": [
                                                            "/usr/local/bin/entrypoint"
                                                      ],
                                                      "env": [
                                                            {
                                                                  "name": "WATCH_NAMESPACE",
                                                                  "value": null,
                                                                  "value_from": {
                                                                        "config_map_key_ref": null,
                                                                        "field_ref": {
                                                                              "api_version": "v1",
                                                                              "field_path": "metadata.namespace"
                                                                        },
                                                                        "resource_field_ref": null,
                                                                        "secret_key_ref": null
                                                                  }
                                                            },
                                                            {
                                                                  "name": "POD_NAME",
                                                                  "value": null,
                                                                  "value_from": {
                                                                        "config_map_key_ref": null,
                                                                        "field_ref": {
                                                                              "api_version": "v1",
                                                                              "field_path": "metadata.name"
                                                                        },
                                                                        "resource_field_ref": null,
                                                                        "secret_key_ref": null
                                                                  }
                                                            },
                                                            {
                                                                  "name": "OPERATOR_NAME",
                                                                  "value": "mongodb-kubernetes-operator",
                                                                  "value_from": null
                                                            },
                                                            {
                                                                  "name": "AGENT_IMAGE",
                                                                  "value": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                                  "value_from": null
                                                            },
                                                            {
                                                                  "name": "VERSION_UPGRADE_HOOK_IMAGE",
                                                                  "value": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                                  "value_from": null
                                                            },
                                                            {
                                                                  "name": "READINESS_PROBE_IMAGE",
                                                                  "value": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                                  "value_from": null
                                                            },
                                                            {
                                                                  "name": "MONGODB_IMAGE",
                                                                  "value": "mongo",
                                                                  "value_from": null
                                                            },
                                                            {
                                                                  "name": "MONGODB_REPO_URL",
                                                                  "value": "docker.io",
                                                                  "value_from": null
                                                            }
                                                      ],
                                                      "env_from": null,
                                                      "image": "quay.io/mongodb/mongodb-kubernetes-operator:0.7.4",
                                                      "image_pull_policy": "Always",
                                                      "lifecycle": null,
                                                      "liveness_probe": null,
                                                      "name": "mongodb-kubernetes-operator",
                                                      "ports": null,
                                                      "readiness_probe": null,
                                                      "resources": {
                                                            "limits": {
                                                                  "cpu": "1100m",
                                                                  "memory": "1Gi"
                                                            },
                                                            "requests": {
                                                                  "cpu": "500m",
                                                                  "memory": "200Mi"
                                                            }
                                                      },
                                                      "security_context": {
                                                            "allow_privilege_escalation": false,
                                                            "capabilities": null,
                                                            "privileged": null,
                                                            "proc_mount": null,
                                                            "read_only_root_filesystem": true,
                                                            "run_as_group": null,
                                                            "run_as_non_root": null,
                                                            "run_as_user": 2000,
                                                            "se_linux_options": null,
                                                            "seccomp_profile": null,
                                                            "windows_options": null
                                                      },
                                                      "startup_probe": null,
                                                      "stdin": null,
                                                      "stdin_once": null,
                                                      "termination_message_path": "/dev/termination-log",
                                                      "termination_message_policy": "File",
                                                      "tty": null,
                                                      "volume_devices": null,
                                                      "volume_mounts": [
                                                            {
                                                                  "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                                                  "mount_propagation": null,
                                                                  "name": "kube-api-access-dmqqs",
                                                                  "read_only": true,
                                                                  "sub_path": null,
                                                                  "sub_path_expr": null
                                                            }
                                                      ],
                                                      "working_dir": null
                                                }
                                          ],
                                          "dns_config": null,
                                          "dns_policy": "ClusterFirst",
                                          "enable_service_links": true,
                                          "ephemeral_containers": null,
                                          "host_aliases": null,
                                          "host_ipc": null,
                                          "host_network": null,
                                          "host_pid": null,
                                          "hostname": null,
                                          "image_pull_secrets": null,
                                          "init_containers": null,
                                          "node_name": "acto-cluster-9-worker3",
                                          "node_selector": null,
                                          "overhead": null,
                                          "preemption_policy": "PreemptLowerPriority",
                                          "priority": 0,
                                          "priority_class_name": null,
                                          "readiness_gates": null,
                                          "restart_policy": "Always",
                                          "runtime_class_name": null,
                                          "scheduler_name": "default-scheduler",
                                          "security_context": {
                                                "fs_group": null,
                                                "fs_group_change_policy": null,
                                                "run_as_group": null,
                                                "run_as_non_root": null,
                                                "run_as_user": null,
                                                "se_linux_options": null,
                                                "seccomp_profile": {
                                                      "localhost_profile": null,
                                                      "type": "RuntimeDefault"
                                                },
                                                "supplemental_groups": null,
                                                "sysctls": null,
                                                "windows_options": null
                                          },
                                          "service_account": "mongodb-kubernetes-operator",
                                          "service_account_name": "mongodb-kubernetes-operator",
                                          "set_hostname_as_fqdn": null,
                                          "share_process_namespace": null,
                                          "subdomain": null,
                                          "termination_grace_period_seconds": 30,
                                          "tolerations": [
                                                {
                                                      "effect": "NoExecute",
                                                      "key": "node.kubernetes.io/not-ready",
                                                      "operator": "Exists",
                                                      "toleration_seconds": 300,
                                                      "value": null
                                                },
                                                {
                                                      "effect": "NoExecute",
                                                      "key": "node.kubernetes.io/unreachable",
                                                      "operator": "Exists",
                                                      "toleration_seconds": 300,
                                                      "value": null
                                                }
                                          ],
                                          "topology_spread_constraints": null,
                                          "volumes": [
                                                {
                                                      "aws_elastic_block_store": null,
                                                      "azure_disk": null,
                                                      "azure_file": null,
                                                      "cephfs": null,
                                                      "cinder": null,
                                                      "config_map": null,
                                                      "csi": null,
                                                      "downward_api": null,
                                                      "empty_dir": null,
                                                      "ephemeral": null,
                                                      "fc": null,
                                                      "flex_volume": null,
                                                      "flocker": null,
                                                      "gce_persistent_disk": null,
                                                      "git_repo": null,
                                                      "glusterfs": null,
                                                      "host_path": null,
                                                      "iscsi": null,
                                                      "name": "kube-api-access-dmqqs",
                                                      "nfs": null,
                                                      "persistent_volume_claim": null,
                                                      "photon_persistent_disk": null,
                                                      "portworx_volume": null,
                                                      "projected": {
                                                            "default_mode": 420,
                                                            "sources": [
                                                                  {
                                                                        "config_map": null,
                                                                        "downward_api": null,
                                                                        "secret": null,
                                                                        "service_account_token": {
                                                                              "audience": null,
                                                                              "expiration_seconds": 3607,
                                                                              "path": "token"
                                                                        }
                                                                  },
                                                                  {
                                                                        "config_map": {
                                                                              "items": [
                                                                                    {
                                                                                          "key": "ca.crt",
                                                                                          "mode": null,
                                                                                          "path": "ca.crt"
                                                                                    }
                                                                              ],
                                                                              "name": "kube-root-ca.crt",
                                                                              "optional": null
                                                                        },
                                                                        "downward_api": null,
                                                                        "secret": null,
                                                                        "service_account_token": null
                                                                  },
                                                                  {
                                                                        "config_map": null,
                                                                        "downward_api": {
                                                                              "items": [
                                                                                    {
                                                                                          "field_ref": {
                                                                                                "api_version": "v1",
                                                                                                "field_path": "metadata.namespace"
                                                                                          },
                                                                                          "mode": null,
                                                                                          "path": "namespace",
                                                                                          "resource_field_ref": null
                                                                                    }
                                                                              ]
                                                                        },
                                                                        "secret": null,
                                                                        "service_account_token": null
                                                                  }
                                                            ]
                                                      },
                                                      "quobyte": null,
                                                      "rbd": null,
                                                      "scale_io": null,
                                                      "secret": null,
                                                      "storageos": null,
                                                      "vsphere_volume": null
                                                }
                                          ]
                                    },
                                    "status": {
                                          "conditions": [
                                                {
                                                      "last_probe_time": null,
                                                      "last_transition_time": "2023-03-25T22:11:00+00:00",
                                                      "message": null,
                                                      "reason": null,
                                                      "status": "True",
                                                      "type": "Initialized"
                                                },
                                                {
                                                      "last_probe_time": null,
                                                      "last_transition_time": "2023-03-25T22:11:10+00:00",
                                                      "message": null,
                                                      "reason": null,
                                                      "status": "True",
                                                      "type": "Ready"
                                                },
                                                {
                                                      "last_probe_time": null,
                                                      "last_transition_time": "2023-03-25T22:11:10+00:00",
                                                      "message": null,
                                                      "reason": null,
                                                      "status": "True",
                                                      "type": "ContainersReady"
                                                },
                                                {
                                                      "last_probe_time": null,
                                                      "last_transition_time": "2023-03-25T22:11:00+00:00",
                                                      "message": null,
                                                      "reason": null,
                                                      "status": "True",
                                                      "type": "PodScheduled"
                                                }
                                          ],
                                          "container_statuses": [
                                                {
                                                      "container_id": "containerd://8aaa0baad1374378ed5378aa6452fdc8658bd7ccd35f2dd6ab3c340d7640a640",
                                                      "image": "quay.io/mongodb/mongodb-kubernetes-operator:0.7.4",
                                                      "image_id": "quay.io/mongodb/mongodb-kubernetes-operator@sha256:968d58e270605bbcb6c5295eb3f69a967aa31a8671c0fc2fd28b8cefd6cb05e7",
                                                      "last_state": {
                                                            "running": null,
                                                            "terminated": null,
                                                            "waiting": null
                                                      },
                                                      "name": "mongodb-kubernetes-operator",
                                                      "ready": true,
                                                      "restart_count": 0,
                                                      "started": true,
                                                      "state": {
                                                            "running": {
                                                                  "started_at": "2023-03-25T22:11:10+00:00"
                                                            },
                                                            "terminated": null,
                                                            "waiting": null
                                                      }
                                                }
                                          ],
                                          "ephemeral_container_statuses": null,
                                          "host_ip": "172.18.0.9",
                                          "init_container_statuses": null,
                                          "message": null,
                                          "nominated_node_name": null,
                                          "phase": "Running",
                                          "pod_ip": "10.244.1.2",
                                          "pod_i_ps": [
                                                {
                                                      "ip": "10.244.1.2"
                                                }
                                          ],
                                          "qos_class": "Burstable",
                                          "reason": null,
                                          "start_time": "2023-03-25T22:11:00+00:00"
                                    }
                              }
                        ]
                  },
                  "stateful_set": {
                        "test-cluster": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:06+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": 1,
                                    "labels": {
                                          "app": "test-cluster-svc"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "apps/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {}
                                                            },
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"7edff82e-9821-452f-9f00-6b0248cbf466\"}": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:podManagementPolicy": {},
                                                            "f:replicas": {},
                                                            "f:revisionHistoryLimit": {},
                                                            "f:selector": {},
                                                            "f:serviceName": {},
                                                            "f:template": {
                                                                  "f:metadata": {
                                                                        "f:labels": {
                                                                              ".": {},
                                                                              "f:app": {}
                                                                        }
                                                                  },
                                                                  "f:spec": {
                                                                        "f:containers": {
                                                                              "k:{\"name\":\"mongod\"}": {
                                                                                    ".": {},
                                                                                    "f:command": {},
                                                                                    "f:env": {
                                                                                          ".": {},
                                                                                          "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          }
                                                                                    },
                                                                                    "f:image": {},
                                                                                    "f:imagePullPolicy": {},
                                                                                    "f:name": {},
                                                                                    "f:resources": {
                                                                                          ".": {},
                                                                                          "f:limits": {
                                                                                                ".": {},
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          },
                                                                                          "f:requests": {
                                                                                                ".": {},
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          }
                                                                                    },
                                                                                    "f:securityContext": {
                                                                                          ".": {},
                                                                                          "f:runAsNonRoot": {},
                                                                                          "f:runAsUser": {}
                                                                                    },
                                                                                    "f:terminationMessagePath": {},
                                                                                    "f:terminationMessagePolicy": {},
                                                                                    "f:volumeMounts": {
                                                                                          ".": {},
                                                                                          "k:{\"mountPath\":\"/data\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/healthstatus\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/hooks\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          }
                                                                                    }
                                                                              },
                                                                              "k:{\"name\":\"mongodb-agent\"}": {
                                                                                    ".": {},
                                                                                    "f:command": {},
                                                                                    "f:env": {
                                                                                          ".": {},
                                                                                          "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"AUTOMATION_CONFIG_MAP\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"HEADLESS_AGENT\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:valueFrom": {
                                                                                                      ".": {},
                                                                                                      "f:fieldRef": {}
                                                                                                }
                                                                                          }
                                                                                    },
                                                                                    "f:image": {},
                                                                                    "f:imagePullPolicy": {},
                                                                                    "f:name": {},
                                                                                    "f:readinessProbe": {
                                                                                          ".": {},
                                                                                          "f:exec": {
                                                                                                ".": {},
                                                                                                "f:command": {}
                                                                                          },
                                                                                          "f:failureThreshold": {},
                                                                                          "f:initialDelaySeconds": {},
                                                                                          "f:periodSeconds": {},
                                                                                          "f:successThreshold": {},
                                                                                          "f:timeoutSeconds": {}
                                                                                    },
                                                                                    "f:resources": {
                                                                                          ".": {},
                                                                                          "f:limits": {
                                                                                                ".": {},
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          },
                                                                                          "f:requests": {
                                                                                                ".": {},
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          }
                                                                                    },
                                                                                    "f:securityContext": {
                                                                                          ".": {},
                                                                                          "f:runAsNonRoot": {},
                                                                                          "f:runAsUser": {}
                                                                                    },
                                                                                    "f:terminationMessagePath": {},
                                                                                    "f:terminationMessagePolicy": {},
                                                                                    "f:volumeMounts": {
                                                                                          ".": {},
                                                                                          "k:{\"mountPath\":\"/data\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/lib/automation/config\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {},
                                                                                                "f:readOnly": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/log/mongodb-mms-automation/healthstatus\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          }
                                                                                    }
                                                                              }
                                                                        },
                                                                        "f:dnsPolicy": {},
                                                                        "f:initContainers": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"mongod-posthook\"}": {
                                                                                    ".": {},
                                                                                    "f:command": {},
                                                                                    "f:image": {},
                                                                                    "f:imagePullPolicy": {},
                                                                                    "f:name": {},
                                                                                    "f:resources": {},
                                                                                    "f:terminationMessagePath": {},
                                                                                    "f:terminationMessagePolicy": {},
                                                                                    "f:volumeMounts": {
                                                                                          ".": {},
                                                                                          "k:{\"mountPath\":\"/hooks\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          }
                                                                                    }
                                                                              },
                                                                              "k:{\"name\":\"mongodb-agent-readinessprobe\"}": {
                                                                                    ".": {},
                                                                                    "f:command": {},
                                                                                    "f:image": {},
                                                                                    "f:imagePullPolicy": {},
                                                                                    "f:name": {},
                                                                                    "f:resources": {},
                                                                                    "f:terminationMessagePath": {},
                                                                                    "f:terminationMessagePolicy": {},
                                                                                    "f:volumeMounts": {
                                                                                          ".": {},
                                                                                          "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          }
                                                                                    }
                                                                              }
                                                                        },
                                                                        "f:restartPolicy": {},
                                                                        "f:schedulerName": {},
                                                                        "f:securityContext": {
                                                                              ".": {},
                                                                              "f:fsGroup": {}
                                                                        },
                                                                        "f:serviceAccount": {},
                                                                        "f:serviceAccountName": {},
                                                                        "f:terminationGracePeriodSeconds": {},
                                                                        "f:volumes": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"agent-scripts\"}": {
                                                                                    ".": {},
                                                                                    "f:emptyDir": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"name\":\"automation-config\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:secret": {
                                                                                          ".": {},
                                                                                          "f:defaultMode": {},
                                                                                          "f:secretName": {}
                                                                                    }
                                                                              },
                                                                              "k:{\"name\":\"healthstatus\"}": {
                                                                                    ".": {},
                                                                                    "f:emptyDir": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"name\":\"hooks\"}": {
                                                                                    ".": {},
                                                                                    "f:emptyDir": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"name\":\"test-cluster-keyfile\"}": {
                                                                                    ".": {},
                                                                                    "f:emptyDir": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  }
                                                            },
                                                            "f:updateStrategy": {
                                                                  "f:type": {}
                                                            },
                                                            "f:volumeClaimTemplates": {}
                                                      }
                                                },
                                                "manager": "manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:06+00:00"
                                          },
                                          {
                                                "api_version": "apps/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:availableReplicas": {},
                                                            "f:collisionCount": {},
                                                            "f:currentReplicas": {},
                                                            "f:currentRevision": {},
                                                            "f:observedGeneration": {},
                                                            "f:readyReplicas": {},
                                                            "f:replicas": {},
                                                            "f:updateRevision": {},
                                                            "f:updatedReplicas": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:22:29+00:00"
                                          }
                                    ],
                                    "name": "test-cluster",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "mongodbcommunity.mongodb.com/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "MongoDBCommunity",
                                                "name": "test-cluster",
                                                "uid": "7edff82e-9821-452f-9f00-6b0248cbf466"
                                          }
                                    ],
                                    "resource_version": "2853",
                                    "self_link": null,
                                    "uid": "0b532353-b23f-4638-a200-22ba3e06bfc4"
                              },
                              "spec": {
                                    "min_ready_seconds": null,
                                    "pod_management_policy": "OrderedReady",
                                    "replicas": 3,
                                    "revision_history_limit": 10,
                                    "selector": {
                                          "match_expressions": null,
                                          "match_labels": {
                                                "app": "test-cluster-svc"
                                          }
                                    },
                                    "service_name": "test-cluster-svc",
                                    "template": {
                                          "metadata": {
                                                "annotations": null,
                                                "cluster_name": null,
                                                "creation_timestamp": null,
                                                "deletion_grace_period_seconds": null,
                                                "deletion_timestamp": null,
                                                "finalizers": null,
                                                "generate_name": null,
                                                "generation": null,
                                                "labels": {
                                                      "app": "test-cluster-svc"
                                                },
                                                "managed_fields": null,
                                                "name": null,
                                                "namespace": null,
                                                "owner_references": null,
                                                "resource_version": null,
                                                "self_link": null,
                                                "uid": null
                                          },
                                          "spec": {
                                                "active_deadline_seconds": null,
                                                "affinity": null,
                                                "automount_service_account_token": null,
                                                "containers": [
                                                      {
                                                            "args": null,
                                                            "command": [
                                                                  "/bin/sh",
                                                                  "-c",
                                                                  "\n#run post-start hook to handle version changes\n/hooks/version-upgrade\n\n# wait for config and keyfile to be created by the agent\n while ! [ -f /data/automation-mongod.conf -a -f /var/lib/mongodb-mms-automation/authentication/keyfile ]; do sleep 3 ; done ; sleep 2 ;\n\n# with mongod configured to append logs, we need to provide them to stdout as\n# mongod does not write to stdout and a log file\ntail -F /var/log/mongodb-mms-automation/mongodb.log > /dev/stdout &\n\n# start mongod with this configuration\nexec mongod -f /data/automation-mongod.conf;\n\n"
                                                            ],
                                                            "env": [
                                                                  {
                                                                        "name": "AGENT_STATUS_FILEPATH",
                                                                        "value": "/healthstatus/agent-health-status.json",
                                                                        "value_from": null
                                                                  }
                                                            ],
                                                            "env_from": null,
                                                            "image": "docker.io/mongo:4.4.0",
                                                            "image_pull_policy": "IfNotPresent",
                                                            "lifecycle": null,
                                                            "liveness_probe": null,
                                                            "name": "mongod",
                                                            "ports": null,
                                                            "readiness_probe": null,
                                                            "resources": {
                                                                  "limits": {
                                                                        "cpu": "1",
                                                                        "memory": "1G"
                                                                  },
                                                                  "requests": {
                                                                        "cpu": "1",
                                                                        "memory": "1G"
                                                                  }
                                                            },
                                                            "security_context": {
                                                                  "allow_privilege_escalation": null,
                                                                  "capabilities": null,
                                                                  "privileged": null,
                                                                  "proc_mount": null,
                                                                  "read_only_root_filesystem": null,
                                                                  "run_as_group": null,
                                                                  "run_as_non_root": true,
                                                                  "run_as_user": 2000,
                                                                  "se_linux_options": null,
                                                                  "seccomp_profile": null,
                                                                  "windows_options": null
                                                            },
                                                            "startup_probe": null,
                                                            "stdin": null,
                                                            "stdin_once": null,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": null,
                                                            "volume_devices": null,
                                                            "volume_mounts": [
                                                                  {
                                                                        "mount_path": "/data",
                                                                        "mount_propagation": null,
                                                                        "name": "data-volume",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/healthstatus",
                                                                        "mount_propagation": null,
                                                                        "name": "healthstatus",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/hooks",
                                                                        "mount_propagation": null,
                                                                        "name": "hooks",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/log/mongodb-mms-automation",
                                                                        "mount_propagation": null,
                                                                        "name": "logs-volume",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                                        "mount_propagation": null,
                                                                        "name": "test-cluster-keyfile",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  }
                                                            ],
                                                            "working_dir": null
                                                      },
                                                      {
                                                            "args": null,
                                                            "command": [
                                                                  "/bin/bash",
                                                                  "-c",
                                                                  "current_uid=$(id -u)\nAGENT_API_KEY=\"$(cat /mongodb-automation/agent-api-key/agentApiKey)\"\ndeclare -r current_uid\nif ! grep -q \"${current_uid}\" /etc/passwd ; then\nsed -e \"s/^mongodb:/builder:/\" /etc/passwd > /tmp/passwd\necho \"mongodb:x:$(id -u):$(id -g):,,,:/:/bin/bash\" >> /tmp/passwd\nexport NSS_WRAPPER_PASSWD=/tmp/passwd\nexport LD_PRELOAD=libnss_wrapper.so\nexport NSS_WRAPPER_GROUP=/etc/group\nfi\nagent/mongodb-agent -healthCheckFilePath=/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json -serveStatusPort=5000 -cluster=/var/lib/automation/config/cluster-config.json -skipMongoStart -noDaemonize -useLocalMongoDbTools"
                                                            ],
                                                            "env": [
                                                                  {
                                                                        "name": "AGENT_STATUS_FILEPATH",
                                                                        "value": "/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "AUTOMATION_CONFIG_MAP",
                                                                        "value": "test-cluster-config",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "HEADLESS_AGENT",
                                                                        "value": "true",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "POD_NAMESPACE",
                                                                        "value": null,
                                                                        "value_from": {
                                                                              "config_map_key_ref": null,
                                                                              "field_ref": {
                                                                                    "api_version": "v1",
                                                                                    "field_path": "metadata.namespace"
                                                                              },
                                                                              "resource_field_ref": null,
                                                                              "secret_key_ref": null
                                                                        }
                                                                  }
                                                            ],
                                                            "env_from": null,
                                                            "image": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                            "image_pull_policy": "Always",
                                                            "lifecycle": null,
                                                            "liveness_probe": null,
                                                            "name": "mongodb-agent",
                                                            "ports": null,
                                                            "readiness_probe": {
                                                                  "_exec": {
                                                                        "command": [
                                                                              "/opt/scripts/readinessprobe"
                                                                        ]
                                                                  },
                                                                  "failure_threshold": 40,
                                                                  "http_get": null,
                                                                  "initial_delay_seconds": 5,
                                                                  "period_seconds": 10,
                                                                  "success_threshold": 1,
                                                                  "tcp_socket": null,
                                                                  "termination_grace_period_seconds": null,
                                                                  "timeout_seconds": 1
                                                            },
                                                            "resources": {
                                                                  "limits": {
                                                                        "cpu": "1",
                                                                        "memory": "1G"
                                                                  },
                                                                  "requests": {
                                                                        "cpu": "1",
                                                                        "memory": "1G"
                                                                  }
                                                            },
                                                            "security_context": {
                                                                  "allow_privilege_escalation": null,
                                                                  "capabilities": null,
                                                                  "privileged": null,
                                                                  "proc_mount": null,
                                                                  "read_only_root_filesystem": null,
                                                                  "run_as_group": null,
                                                                  "run_as_non_root": true,
                                                                  "run_as_user": 2000,
                                                                  "se_linux_options": null,
                                                                  "seccomp_profile": null,
                                                                  "windows_options": null
                                                            },
                                                            "startup_probe": null,
                                                            "stdin": null,
                                                            "stdin_once": null,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": null,
                                                            "volume_devices": null,
                                                            "volume_mounts": [
                                                                  {
                                                                        "mount_path": "/opt/scripts",
                                                                        "mount_propagation": null,
                                                                        "name": "agent-scripts",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/lib/automation/config",
                                                                        "mount_propagation": null,
                                                                        "name": "automation-config",
                                                                        "read_only": true,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/data",
                                                                        "mount_propagation": null,
                                                                        "name": "data-volume",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/log/mongodb-mms-automation/healthstatus",
                                                                        "mount_propagation": null,
                                                                        "name": "healthstatus",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/log/mongodb-mms-automation",
                                                                        "mount_propagation": null,
                                                                        "name": "logs-volume",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                                        "mount_propagation": null,
                                                                        "name": "test-cluster-keyfile",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  }
                                                            ],
                                                            "working_dir": null
                                                      }
                                                ],
                                                "dns_config": null,
                                                "dns_policy": "ClusterFirst",
                                                "enable_service_links": null,
                                                "ephemeral_containers": null,
                                                "host_aliases": null,
                                                "host_ipc": null,
                                                "host_network": null,
                                                "host_pid": null,
                                                "hostname": null,
                                                "image_pull_secrets": null,
                                                "init_containers": [
                                                      {
                                                            "args": null,
                                                            "command": [
                                                                  "cp",
                                                                  "version-upgrade-hook",
                                                                  "/hooks/version-upgrade"
                                                            ],
                                                            "env": null,
                                                            "env_from": null,
                                                            "image": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                            "image_pull_policy": "Always",
                                                            "lifecycle": null,
                                                            "liveness_probe": null,
                                                            "name": "mongod-posthook",
                                                            "ports": null,
                                                            "readiness_probe": null,
                                                            "resources": {
                                                                  "limits": null,
                                                                  "requests": null
                                                            },
                                                            "security_context": null,
                                                            "startup_probe": null,
                                                            "stdin": null,
                                                            "stdin_once": null,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": null,
                                                            "volume_devices": null,
                                                            "volume_mounts": [
                                                                  {
                                                                        "mount_path": "/hooks",
                                                                        "mount_propagation": null,
                                                                        "name": "hooks",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  }
                                                            ],
                                                            "working_dir": null
                                                      },
                                                      {
                                                            "args": null,
                                                            "command": [
                                                                  "cp",
                                                                  "/probes/readinessprobe",
                                                                  "/opt/scripts/readinessprobe"
                                                            ],
                                                            "env": null,
                                                            "env_from": null,
                                                            "image": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                            "image_pull_policy": "Always",
                                                            "lifecycle": null,
                                                            "liveness_probe": null,
                                                            "name": "mongodb-agent-readinessprobe",
                                                            "ports": null,
                                                            "readiness_probe": null,
                                                            "resources": {
                                                                  "limits": null,
                                                                  "requests": null
                                                            },
                                                            "security_context": null,
                                                            "startup_probe": null,
                                                            "stdin": null,
                                                            "stdin_once": null,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": null,
                                                            "volume_devices": null,
                                                            "volume_mounts": [
                                                                  {
                                                                        "mount_path": "/opt/scripts",
                                                                        "mount_propagation": null,
                                                                        "name": "agent-scripts",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  }
                                                            ],
                                                            "working_dir": null
                                                      }
                                                ],
                                                "node_name": null,
                                                "node_selector": null,
                                                "overhead": null,
                                                "preemption_policy": null,
                                                "priority": null,
                                                "priority_class_name": null,
                                                "readiness_gates": null,
                                                "restart_policy": "Always",
                                                "runtime_class_name": null,
                                                "scheduler_name": "default-scheduler",
                                                "security_context": {
                                                      "fs_group": 2000,
                                                      "fs_group_change_policy": null,
                                                      "run_as_group": null,
                                                      "run_as_non_root": null,
                                                      "run_as_user": null,
                                                      "se_linux_options": null,
                                                      "seccomp_profile": null,
                                                      "supplemental_groups": null,
                                                      "sysctls": null,
                                                      "windows_options": null
                                                },
                                                "service_account": "mongodb-database",
                                                "service_account_name": "mongodb-database",
                                                "set_hostname_as_fqdn": null,
                                                "share_process_namespace": null,
                                                "subdomain": null,
                                                "termination_grace_period_seconds": 30,
                                                "tolerations": null,
                                                "topology_spread_constraints": null,
                                                "volumes": [
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": {
                                                                  "medium": null,
                                                                  "size_limit": null
                                                            },
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "agent-scripts",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": null,
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      },
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": null,
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "automation-config",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": {
                                                                  "default_mode": 416,
                                                                  "items": null,
                                                                  "optional": null,
                                                                  "secret_name": "test-cluster-config"
                                                            },
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      },
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": {
                                                                  "medium": null,
                                                                  "size_limit": null
                                                            },
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "healthstatus",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": null,
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      },
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": {
                                                                  "medium": null,
                                                                  "size_limit": null
                                                            },
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "hooks",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": null,
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      },
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": {
                                                                  "medium": null,
                                                                  "size_limit": null
                                                            },
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "test-cluster-keyfile",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": null,
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      }
                                                ]
                                          }
                                    },
                                    "update_strategy": {
                                          "rolling_update": null,
                                          "type": "RollingUpdate"
                                    },
                                    "volume_claim_templates": [
                                          {
                                                "api_version": "v1",
                                                "kind": "PersistentVolumeClaim",
                                                "metadata": {
                                                      "annotations": null,
                                                      "cluster_name": null,
                                                      "creation_timestamp": null,
                                                      "deletion_grace_period_seconds": null,
                                                      "deletion_timestamp": null,
                                                      "finalizers": null,
                                                      "generate_name": null,
                                                      "generation": null,
                                                      "labels": null,
                                                      "managed_fields": null,
                                                      "name": "data-volume",
                                                      "namespace": null,
                                                      "owner_references": null,
                                                      "resource_version": null,
                                                      "self_link": null,
                                                      "uid": null
                                                },
                                                "spec": {
                                                      "access_modes": [
                                                            "ReadWriteOnce"
                                                      ],
                                                      "data_source": null,
                                                      "data_source_ref": null,
                                                      "resources": {
                                                            "limits": null,
                                                            "requests": {
                                                                  "storage": "10G"
                                                            }
                                                      },
                                                      "selector": null,
                                                      "storage_class_name": null,
                                                      "volume_mode": "Filesystem",
                                                      "volume_name": null
                                                },
                                                "status": {
                                                      "access_modes": null,
                                                      "capacity": null,
                                                      "conditions": null,
                                                      "phase": "Pending"
                                                }
                                          },
                                          {
                                                "api_version": "v1",
                                                "kind": "PersistentVolumeClaim",
                                                "metadata": {
                                                      "annotations": null,
                                                      "cluster_name": null,
                                                      "creation_timestamp": null,
                                                      "deletion_grace_period_seconds": null,
                                                      "deletion_timestamp": null,
                                                      "finalizers": null,
                                                      "generate_name": null,
                                                      "generation": null,
                                                      "labels": null,
                                                      "managed_fields": null,
                                                      "name": "logs-volume",
                                                      "namespace": null,
                                                      "owner_references": null,
                                                      "resource_version": null,
                                                      "self_link": null,
                                                      "uid": null
                                                },
                                                "spec": {
                                                      "access_modes": [
                                                            "ReadWriteOnce"
                                                      ],
                                                      "data_source": null,
                                                      "data_source_ref": null,
                                                      "resources": {
                                                            "limits": null,
                                                            "requests": {
                                                                  "storage": "2G"
                                                            }
                                                      },
                                                      "selector": null,
                                                      "storage_class_name": null,
                                                      "volume_mode": "Filesystem",
                                                      "volume_name": null
                                                },
                                                "status": {
                                                      "access_modes": null,
                                                      "capacity": null,
                                                      "conditions": null,
                                                      "phase": "Pending"
                                                }
                                          }
                                    ]
                              },
                              "status": {
                                    "available_replicas": 3,
                                    "collision_count": 0,
                                    "conditions": null,
                                    "current_replicas": 3,
                                    "current_revision": "test-cluster-8656547cd7",
                                    "observed_generation": 1,
                                    "ready_replicas": 3,
                                    "replicas": 3,
                                    "update_revision": "test-cluster-8656547cd7",
                                    "updated_replicas": 3
                              }
                        },
                        "test-cluster-arb": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:06+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": 1,
                                    "labels": {
                                          "app": "test-cluster-svc"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "apps/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:collisionCount": {},
                                                            "f:currentRevision": {},
                                                            "f:observedGeneration": {},
                                                            "f:updateRevision": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:22:06+00:00"
                                          },
                                          {
                                                "api_version": "apps/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {}
                                                            },
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"7edff82e-9821-452f-9f00-6b0248cbf466\"}": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:podManagementPolicy": {},
                                                            "f:replicas": {},
                                                            "f:revisionHistoryLimit": {},
                                                            "f:selector": {},
                                                            "f:serviceName": {},
                                                            "f:template": {
                                                                  "f:metadata": {
                                                                        "f:labels": {
                                                                              ".": {},
                                                                              "f:app": {}
                                                                        }
                                                                  },
                                                                  "f:spec": {
                                                                        "f:containers": {
                                                                              "k:{\"name\":\"mongod\"}": {
                                                                                    ".": {},
                                                                                    "f:command": {},
                                                                                    "f:env": {
                                                                                          ".": {},
                                                                                          "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          }
                                                                                    },
                                                                                    "f:image": {},
                                                                                    "f:imagePullPolicy": {},
                                                                                    "f:name": {},
                                                                                    "f:resources": {
                                                                                          ".": {},
                                                                                          "f:limits": {
                                                                                                ".": {},
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          },
                                                                                          "f:requests": {
                                                                                                ".": {},
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          }
                                                                                    },
                                                                                    "f:securityContext": {
                                                                                          ".": {},
                                                                                          "f:runAsNonRoot": {},
                                                                                          "f:runAsUser": {}
                                                                                    },
                                                                                    "f:terminationMessagePath": {},
                                                                                    "f:terminationMessagePolicy": {},
                                                                                    "f:volumeMounts": {
                                                                                          ".": {},
                                                                                          "k:{\"mountPath\":\"/data\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/healthstatus\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/hooks\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          }
                                                                                    }
                                                                              },
                                                                              "k:{\"name\":\"mongodb-agent\"}": {
                                                                                    ".": {},
                                                                                    "f:command": {},
                                                                                    "f:env": {
                                                                                          ".": {},
                                                                                          "k:{\"name\":\"AGENT_STATUS_FILEPATH\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"AUTOMATION_CONFIG_MAP\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"HEADLESS_AGENT\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:valueFrom": {
                                                                                                      ".": {},
                                                                                                      "f:fieldRef": {}
                                                                                                }
                                                                                          }
                                                                                    },
                                                                                    "f:image": {},
                                                                                    "f:imagePullPolicy": {},
                                                                                    "f:name": {},
                                                                                    "f:readinessProbe": {
                                                                                          ".": {},
                                                                                          "f:exec": {
                                                                                                ".": {},
                                                                                                "f:command": {}
                                                                                          },
                                                                                          "f:failureThreshold": {},
                                                                                          "f:initialDelaySeconds": {},
                                                                                          "f:periodSeconds": {},
                                                                                          "f:successThreshold": {},
                                                                                          "f:timeoutSeconds": {}
                                                                                    },
                                                                                    "f:resources": {
                                                                                          ".": {},
                                                                                          "f:limits": {
                                                                                                ".": {},
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          },
                                                                                          "f:requests": {
                                                                                                ".": {},
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          }
                                                                                    },
                                                                                    "f:securityContext": {
                                                                                          ".": {},
                                                                                          "f:runAsNonRoot": {},
                                                                                          "f:runAsUser": {}
                                                                                    },
                                                                                    "f:terminationMessagePath": {},
                                                                                    "f:terminationMessagePolicy": {},
                                                                                    "f:volumeMounts": {
                                                                                          ".": {},
                                                                                          "k:{\"mountPath\":\"/data\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/lib/automation/config\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {},
                                                                                                "f:readOnly": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/lib/mongodb-mms-automation/authentication\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/log/mongodb-mms-automation\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          },
                                                                                          "k:{\"mountPath\":\"/var/log/mongodb-mms-automation/healthstatus\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          }
                                                                                    }
                                                                              }
                                                                        },
                                                                        "f:dnsPolicy": {},
                                                                        "f:initContainers": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"mongod-posthook\"}": {
                                                                                    ".": {},
                                                                                    "f:command": {},
                                                                                    "f:image": {},
                                                                                    "f:imagePullPolicy": {},
                                                                                    "f:name": {},
                                                                                    "f:resources": {},
                                                                                    "f:terminationMessagePath": {},
                                                                                    "f:terminationMessagePolicy": {},
                                                                                    "f:volumeMounts": {
                                                                                          ".": {},
                                                                                          "k:{\"mountPath\":\"/hooks\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          }
                                                                                    }
                                                                              },
                                                                              "k:{\"name\":\"mongodb-agent-readinessprobe\"}": {
                                                                                    ".": {},
                                                                                    "f:command": {},
                                                                                    "f:image": {},
                                                                                    "f:imagePullPolicy": {},
                                                                                    "f:name": {},
                                                                                    "f:resources": {},
                                                                                    "f:terminationMessagePath": {},
                                                                                    "f:terminationMessagePolicy": {},
                                                                                    "f:volumeMounts": {
                                                                                          ".": {},
                                                                                          "k:{\"mountPath\":\"/opt/scripts\"}": {
                                                                                                ".": {},
                                                                                                "f:mountPath": {},
                                                                                                "f:name": {}
                                                                                          }
                                                                                    }
                                                                              }
                                                                        },
                                                                        "f:restartPolicy": {},
                                                                        "f:schedulerName": {},
                                                                        "f:securityContext": {
                                                                              ".": {},
                                                                              "f:fsGroup": {}
                                                                        },
                                                                        "f:serviceAccount": {},
                                                                        "f:serviceAccountName": {},
                                                                        "f:terminationGracePeriodSeconds": {},
                                                                        "f:volumes": {
                                                                              ".": {},
                                                                              "k:{\"name\":\"agent-scripts\"}": {
                                                                                    ".": {},
                                                                                    "f:emptyDir": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"name\":\"automation-config\"}": {
                                                                                    ".": {},
                                                                                    "f:name": {},
                                                                                    "f:secret": {
                                                                                          ".": {},
                                                                                          "f:defaultMode": {},
                                                                                          "f:secretName": {}
                                                                                    }
                                                                              },
                                                                              "k:{\"name\":\"healthstatus\"}": {
                                                                                    ".": {},
                                                                                    "f:emptyDir": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"name\":\"hooks\"}": {
                                                                                    ".": {},
                                                                                    "f:emptyDir": {},
                                                                                    "f:name": {}
                                                                              },
                                                                              "k:{\"name\":\"test-cluster-keyfile\"}": {
                                                                                    ".": {},
                                                                                    "f:emptyDir": {},
                                                                                    "f:name": {}
                                                                              }
                                                                        }
                                                                  }
                                                            },
                                                            "f:updateStrategy": {
                                                                  "f:type": {}
                                                            },
                                                            "f:volumeClaimTemplates": {}
                                                      }
                                                },
                                                "manager": "manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:06+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-arb",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "mongodbcommunity.mongodb.com/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "MongoDBCommunity",
                                                "name": "test-cluster",
                                                "uid": "7edff82e-9821-452f-9f00-6b0248cbf466"
                                          }
                                    ],
                                    "resource_version": "2623",
                                    "self_link": null,
                                    "uid": "2abecccc-6afb-4668-8137-31f4a55ea222"
                              },
                              "spec": {
                                    "min_ready_seconds": null,
                                    "pod_management_policy": "OrderedReady",
                                    "replicas": 0,
                                    "revision_history_limit": 10,
                                    "selector": {
                                          "match_expressions": null,
                                          "match_labels": {
                                                "app": "test-cluster-svc"
                                          }
                                    },
                                    "service_name": "test-cluster-svc",
                                    "template": {
                                          "metadata": {
                                                "annotations": null,
                                                "cluster_name": null,
                                                "creation_timestamp": null,
                                                "deletion_grace_period_seconds": null,
                                                "deletion_timestamp": null,
                                                "finalizers": null,
                                                "generate_name": null,
                                                "generation": null,
                                                "labels": {
                                                      "app": "test-cluster-svc"
                                                },
                                                "managed_fields": null,
                                                "name": null,
                                                "namespace": null,
                                                "owner_references": null,
                                                "resource_version": null,
                                                "self_link": null,
                                                "uid": null
                                          },
                                          "spec": {
                                                "active_deadline_seconds": null,
                                                "affinity": null,
                                                "automount_service_account_token": null,
                                                "containers": [
                                                      {
                                                            "args": null,
                                                            "command": [
                                                                  "/bin/sh",
                                                                  "-c",
                                                                  "\n#run post-start hook to handle version changes\n/hooks/version-upgrade\n\n# wait for config and keyfile to be created by the agent\n while ! [ -f /data/automation-mongod.conf -a -f /var/lib/mongodb-mms-automation/authentication/keyfile ]; do sleep 3 ; done ; sleep 2 ;\n\n# with mongod configured to append logs, we need to provide them to stdout as\n# mongod does not write to stdout and a log file\ntail -F /var/log/mongodb-mms-automation/mongodb.log > /dev/stdout &\n\n# start mongod with this configuration\nexec mongod -f /data/automation-mongod.conf;\n\n"
                                                            ],
                                                            "env": [
                                                                  {
                                                                        "name": "AGENT_STATUS_FILEPATH",
                                                                        "value": "/healthstatus/agent-health-status.json",
                                                                        "value_from": null
                                                                  }
                                                            ],
                                                            "env_from": null,
                                                            "image": "docker.io/mongo:4.4.0",
                                                            "image_pull_policy": "IfNotPresent",
                                                            "lifecycle": null,
                                                            "liveness_probe": null,
                                                            "name": "mongod",
                                                            "ports": null,
                                                            "readiness_probe": null,
                                                            "resources": {
                                                                  "limits": {
                                                                        "cpu": "1",
                                                                        "memory": "1G"
                                                                  },
                                                                  "requests": {
                                                                        "cpu": "1",
                                                                        "memory": "1G"
                                                                  }
                                                            },
                                                            "security_context": {
                                                                  "allow_privilege_escalation": null,
                                                                  "capabilities": null,
                                                                  "privileged": null,
                                                                  "proc_mount": null,
                                                                  "read_only_root_filesystem": null,
                                                                  "run_as_group": null,
                                                                  "run_as_non_root": true,
                                                                  "run_as_user": 2000,
                                                                  "se_linux_options": null,
                                                                  "seccomp_profile": null,
                                                                  "windows_options": null
                                                            },
                                                            "startup_probe": null,
                                                            "stdin": null,
                                                            "stdin_once": null,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": null,
                                                            "volume_devices": null,
                                                            "volume_mounts": [
                                                                  {
                                                                        "mount_path": "/data",
                                                                        "mount_propagation": null,
                                                                        "name": "data-volume",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/healthstatus",
                                                                        "mount_propagation": null,
                                                                        "name": "healthstatus",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/hooks",
                                                                        "mount_propagation": null,
                                                                        "name": "hooks",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/log/mongodb-mms-automation",
                                                                        "mount_propagation": null,
                                                                        "name": "logs-volume",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                                        "mount_propagation": null,
                                                                        "name": "test-cluster-keyfile",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  }
                                                            ],
                                                            "working_dir": null
                                                      },
                                                      {
                                                            "args": null,
                                                            "command": [
                                                                  "/bin/bash",
                                                                  "-c",
                                                                  "current_uid=$(id -u)\nAGENT_API_KEY=\"$(cat /mongodb-automation/agent-api-key/agentApiKey)\"\ndeclare -r current_uid\nif ! grep -q \"${current_uid}\" /etc/passwd ; then\nsed -e \"s/^mongodb:/builder:/\" /etc/passwd > /tmp/passwd\necho \"mongodb:x:$(id -u):$(id -g):,,,:/:/bin/bash\" >> /tmp/passwd\nexport NSS_WRAPPER_PASSWD=/tmp/passwd\nexport LD_PRELOAD=libnss_wrapper.so\nexport NSS_WRAPPER_GROUP=/etc/group\nfi\nagent/mongodb-agent -healthCheckFilePath=/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json -serveStatusPort=5000 -cluster=/var/lib/automation/config/cluster-config.json -skipMongoStart -noDaemonize -useLocalMongoDbTools"
                                                            ],
                                                            "env": [
                                                                  {
                                                                        "name": "AGENT_STATUS_FILEPATH",
                                                                        "value": "/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "AUTOMATION_CONFIG_MAP",
                                                                        "value": "test-cluster-config",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "HEADLESS_AGENT",
                                                                        "value": "true",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "POD_NAMESPACE",
                                                                        "value": null,
                                                                        "value_from": {
                                                                              "config_map_key_ref": null,
                                                                              "field_ref": {
                                                                                    "api_version": "v1",
                                                                                    "field_path": "metadata.namespace"
                                                                              },
                                                                              "resource_field_ref": null,
                                                                              "secret_key_ref": null
                                                                        }
                                                                  }
                                                            ],
                                                            "env_from": null,
                                                            "image": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                            "image_pull_policy": "Always",
                                                            "lifecycle": null,
                                                            "liveness_probe": null,
                                                            "name": "mongodb-agent",
                                                            "ports": null,
                                                            "readiness_probe": {
                                                                  "_exec": {
                                                                        "command": [
                                                                              "/opt/scripts/readinessprobe"
                                                                        ]
                                                                  },
                                                                  "failure_threshold": 40,
                                                                  "http_get": null,
                                                                  "initial_delay_seconds": 5,
                                                                  "period_seconds": 10,
                                                                  "success_threshold": 1,
                                                                  "tcp_socket": null,
                                                                  "termination_grace_period_seconds": null,
                                                                  "timeout_seconds": 1
                                                            },
                                                            "resources": {
                                                                  "limits": {
                                                                        "cpu": "1",
                                                                        "memory": "1G"
                                                                  },
                                                                  "requests": {
                                                                        "cpu": "1",
                                                                        "memory": "1G"
                                                                  }
                                                            },
                                                            "security_context": {
                                                                  "allow_privilege_escalation": null,
                                                                  "capabilities": null,
                                                                  "privileged": null,
                                                                  "proc_mount": null,
                                                                  "read_only_root_filesystem": null,
                                                                  "run_as_group": null,
                                                                  "run_as_non_root": true,
                                                                  "run_as_user": 2000,
                                                                  "se_linux_options": null,
                                                                  "seccomp_profile": null,
                                                                  "windows_options": null
                                                            },
                                                            "startup_probe": null,
                                                            "stdin": null,
                                                            "stdin_once": null,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": null,
                                                            "volume_devices": null,
                                                            "volume_mounts": [
                                                                  {
                                                                        "mount_path": "/opt/scripts",
                                                                        "mount_propagation": null,
                                                                        "name": "agent-scripts",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/lib/automation/config",
                                                                        "mount_propagation": null,
                                                                        "name": "automation-config",
                                                                        "read_only": true,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/data",
                                                                        "mount_propagation": null,
                                                                        "name": "data-volume",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/log/mongodb-mms-automation/healthstatus",
                                                                        "mount_propagation": null,
                                                                        "name": "healthstatus",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/log/mongodb-mms-automation",
                                                                        "mount_propagation": null,
                                                                        "name": "logs-volume",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  },
                                                                  {
                                                                        "mount_path": "/var/lib/mongodb-mms-automation/authentication",
                                                                        "mount_propagation": null,
                                                                        "name": "test-cluster-keyfile",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  }
                                                            ],
                                                            "working_dir": null
                                                      }
                                                ],
                                                "dns_config": null,
                                                "dns_policy": "ClusterFirst",
                                                "enable_service_links": null,
                                                "ephemeral_containers": null,
                                                "host_aliases": null,
                                                "host_ipc": null,
                                                "host_network": null,
                                                "host_pid": null,
                                                "hostname": null,
                                                "image_pull_secrets": null,
                                                "init_containers": [
                                                      {
                                                            "args": null,
                                                            "command": [
                                                                  "cp",
                                                                  "version-upgrade-hook",
                                                                  "/hooks/version-upgrade"
                                                            ],
                                                            "env": null,
                                                            "env_from": null,
                                                            "image": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                            "image_pull_policy": "Always",
                                                            "lifecycle": null,
                                                            "liveness_probe": null,
                                                            "name": "mongod-posthook",
                                                            "ports": null,
                                                            "readiness_probe": null,
                                                            "resources": {
                                                                  "limits": null,
                                                                  "requests": null
                                                            },
                                                            "security_context": null,
                                                            "startup_probe": null,
                                                            "stdin": null,
                                                            "stdin_once": null,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": null,
                                                            "volume_devices": null,
                                                            "volume_mounts": [
                                                                  {
                                                                        "mount_path": "/hooks",
                                                                        "mount_propagation": null,
                                                                        "name": "hooks",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  }
                                                            ],
                                                            "working_dir": null
                                                      },
                                                      {
                                                            "args": null,
                                                            "command": [
                                                                  "cp",
                                                                  "/probes/readinessprobe",
                                                                  "/opt/scripts/readinessprobe"
                                                            ],
                                                            "env": null,
                                                            "env_from": null,
                                                            "image": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                            "image_pull_policy": "Always",
                                                            "lifecycle": null,
                                                            "liveness_probe": null,
                                                            "name": "mongodb-agent-readinessprobe",
                                                            "ports": null,
                                                            "readiness_probe": null,
                                                            "resources": {
                                                                  "limits": null,
                                                                  "requests": null
                                                            },
                                                            "security_context": null,
                                                            "startup_probe": null,
                                                            "stdin": null,
                                                            "stdin_once": null,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": null,
                                                            "volume_devices": null,
                                                            "volume_mounts": [
                                                                  {
                                                                        "mount_path": "/opt/scripts",
                                                                        "mount_propagation": null,
                                                                        "name": "agent-scripts",
                                                                        "read_only": null,
                                                                        "sub_path": null,
                                                                        "sub_path_expr": null
                                                                  }
                                                            ],
                                                            "working_dir": null
                                                      }
                                                ],
                                                "node_name": null,
                                                "node_selector": null,
                                                "overhead": null,
                                                "preemption_policy": null,
                                                "priority": null,
                                                "priority_class_name": null,
                                                "readiness_gates": null,
                                                "restart_policy": "Always",
                                                "runtime_class_name": null,
                                                "scheduler_name": "default-scheduler",
                                                "security_context": {
                                                      "fs_group": 2000,
                                                      "fs_group_change_policy": null,
                                                      "run_as_group": null,
                                                      "run_as_non_root": null,
                                                      "run_as_user": null,
                                                      "se_linux_options": null,
                                                      "seccomp_profile": null,
                                                      "supplemental_groups": null,
                                                      "sysctls": null,
                                                      "windows_options": null
                                                },
                                                "service_account": "mongodb-database",
                                                "service_account_name": "mongodb-database",
                                                "set_hostname_as_fqdn": null,
                                                "share_process_namespace": null,
                                                "subdomain": null,
                                                "termination_grace_period_seconds": 30,
                                                "tolerations": null,
                                                "topology_spread_constraints": null,
                                                "volumes": [
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": {
                                                                  "medium": null,
                                                                  "size_limit": null
                                                            },
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "agent-scripts",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": null,
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      },
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": null,
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "automation-config",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": {
                                                                  "default_mode": 416,
                                                                  "items": null,
                                                                  "optional": null,
                                                                  "secret_name": "test-cluster-config"
                                                            },
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      },
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": {
                                                                  "medium": null,
                                                                  "size_limit": null
                                                            },
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "healthstatus",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": null,
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      },
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": {
                                                                  "medium": null,
                                                                  "size_limit": null
                                                            },
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "hooks",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": null,
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      },
                                                      {
                                                            "aws_elastic_block_store": null,
                                                            "azure_disk": null,
                                                            "azure_file": null,
                                                            "cephfs": null,
                                                            "cinder": null,
                                                            "config_map": null,
                                                            "csi": null,
                                                            "downward_api": null,
                                                            "empty_dir": {
                                                                  "medium": null,
                                                                  "size_limit": null
                                                            },
                                                            "ephemeral": null,
                                                            "fc": null,
                                                            "flex_volume": null,
                                                            "flocker": null,
                                                            "gce_persistent_disk": null,
                                                            "git_repo": null,
                                                            "glusterfs": null,
                                                            "host_path": null,
                                                            "iscsi": null,
                                                            "name": "test-cluster-keyfile",
                                                            "nfs": null,
                                                            "persistent_volume_claim": null,
                                                            "photon_persistent_disk": null,
                                                            "portworx_volume": null,
                                                            "projected": null,
                                                            "quobyte": null,
                                                            "rbd": null,
                                                            "scale_io": null,
                                                            "secret": null,
                                                            "storageos": null,
                                                            "vsphere_volume": null
                                                      }
                                                ]
                                          }
                                    },
                                    "update_strategy": {
                                          "rolling_update": null,
                                          "type": "RollingUpdate"
                                    },
                                    "volume_claim_templates": [
                                          {
                                                "api_version": "v1",
                                                "kind": "PersistentVolumeClaim",
                                                "metadata": {
                                                      "annotations": null,
                                                      "cluster_name": null,
                                                      "creation_timestamp": null,
                                                      "deletion_grace_period_seconds": null,
                                                      "deletion_timestamp": null,
                                                      "finalizers": null,
                                                      "generate_name": null,
                                                      "generation": null,
                                                      "labels": null,
                                                      "managed_fields": null,
                                                      "name": "data-volume",
                                                      "namespace": null,
                                                      "owner_references": null,
                                                      "resource_version": null,
                                                      "self_link": null,
                                                      "uid": null
                                                },
                                                "spec": {
                                                      "access_modes": [
                                                            "ReadWriteOnce"
                                                      ],
                                                      "data_source": null,
                                                      "data_source_ref": null,
                                                      "resources": {
                                                            "limits": null,
                                                            "requests": {
                                                                  "storage": "10G"
                                                            }
                                                      },
                                                      "selector": null,
                                                      "storage_class_name": null,
                                                      "volume_mode": "Filesystem",
                                                      "volume_name": null
                                                },
                                                "status": {
                                                      "access_modes": null,
                                                      "capacity": null,
                                                      "conditions": null,
                                                      "phase": "Pending"
                                                }
                                          },
                                          {
                                                "api_version": "v1",
                                                "kind": "PersistentVolumeClaim",
                                                "metadata": {
                                                      "annotations": null,
                                                      "cluster_name": null,
                                                      "creation_timestamp": null,
                                                      "deletion_grace_period_seconds": null,
                                                      "deletion_timestamp": null,
                                                      "finalizers": null,
                                                      "generate_name": null,
                                                      "generation": null,
                                                      "labels": null,
                                                      "managed_fields": null,
                                                      "name": "logs-volume",
                                                      "namespace": null,
                                                      "owner_references": null,
                                                      "resource_version": null,
                                                      "self_link": null,
                                                      "uid": null
                                                },
                                                "spec": {
                                                      "access_modes": [
                                                            "ReadWriteOnce"
                                                      ],
                                                      "data_source": null,
                                                      "data_source_ref": null,
                                                      "resources": {
                                                            "limits": null,
                                                            "requests": {
                                                                  "storage": "2G"
                                                            }
                                                      },
                                                      "selector": null,
                                                      "storage_class_name": null,
                                                      "volume_mode": "Filesystem",
                                                      "volume_name": null
                                                },
                                                "status": {
                                                      "access_modes": null,
                                                      "capacity": null,
                                                      "conditions": null,
                                                      "phase": "Pending"
                                                }
                                          }
                                    ]
                              },
                              "status": {
                                    "available_replicas": null,
                                    "collision_count": 0,
                                    "conditions": null,
                                    "current_replicas": null,
                                    "current_revision": "test-cluster-arb-8656547cd7",
                                    "observed_generation": 1,
                                    "ready_replicas": null,
                                    "replicas": 0,
                                    "update_revision": "test-cluster-arb-8656547cd7",
                                    "updated_replicas": null
                              }
                        }
                  },
                  "deployment": {
                        "mongodb-kubernetes-operator": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "deployment.kubernetes.io/revision": "2",
                                          "email": "support@mongodb.com"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:48+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": 2,
                                    "labels": {
                                          "acto/tag": "operator-deployment",
                                          "owner": "mongodb"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "apps/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  "f:email": {}
                                                            },
                                                            "f:labels": {
                                                                  "f:owner": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:replicas": {},
                                                            "f:selector": {},
                                                            "f:strategy": {
                                                                  "f:rollingUpdate": {
                                                                        "f:maxUnavailable": {}
                                                                  },
                                                                  "f:type": {}
                                                            },
                                                            "f:template": {
                                                                  "f:metadata": {
                                                                        "f:labels": {
                                                                              "f:name": {}
                                                                        }
                                                                  },
                                                                  "f:spec": {
                                                                        "f:affinity": {
                                                                              "f:podAntiAffinity": {
                                                                                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                                              }
                                                                        },
                                                                        "f:containers": {
                                                                              "k:{\"name\":\"mongodb-kubernetes-operator\"}": {
                                                                                    ".": {},
                                                                                    "f:command": {},
                                                                                    "f:env": {
                                                                                          "k:{\"name\":\"AGENT_IMAGE\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"MONGODB_IMAGE\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"MONGODB_REPO_URL\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"OPERATOR_NAME\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"POD_NAME\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:valueFrom": {
                                                                                                      "f:fieldRef": {}
                                                                                                }
                                                                                          },
                                                                                          "k:{\"name\":\"READINESS_PROBE_IMAGE\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"VERSION_UPGRADE_HOOK_IMAGE\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:value": {}
                                                                                          },
                                                                                          "k:{\"name\":\"WATCH_NAMESPACE\"}": {
                                                                                                ".": {},
                                                                                                "f:name": {},
                                                                                                "f:valueFrom": {
                                                                                                      "f:fieldRef": {}
                                                                                                }
                                                                                          }
                                                                                    },
                                                                                    "f:image": {},
                                                                                    "f:imagePullPolicy": {},
                                                                                    "f:name": {},
                                                                                    "f:resources": {
                                                                                          "f:limits": {
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          },
                                                                                          "f:requests": {
                                                                                                "f:cpu": {},
                                                                                                "f:memory": {}
                                                                                          }
                                                                                    },
                                                                                    "f:securityContext": {
                                                                                          "f:allowPrivilegeEscalation": {},
                                                                                          "f:readOnlyRootFilesystem": {},
                                                                                          "f:runAsUser": {}
                                                                                    }
                                                                              }
                                                                        },
                                                                        "f:securityContext": {
                                                                              "f:seccompProfile": {
                                                                                    "f:type": {}
                                                                              }
                                                                        },
                                                                        "f:serviceAccountName": {}
                                                                  }
                                                            }
                                                      }
                                                },
                                                "manager": "kubectl",
                                                "operation": "Apply",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:48+00:00"
                                          },
                                          {
                                                "api_version": "apps/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:labels": {
                                                                  "f:acto/tag": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:template": {
                                                                  "f:metadata": {
                                                                        "f:labels": {
                                                                              "f:acto/tag": {}
                                                                        }
                                                                  }
                                                            }
                                                      }
                                                },
                                                "manager": "OpenAPI-Generator",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:11:00+00:00"
                                          },
                                          {
                                                "api_version": "apps/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  "f:deployment.kubernetes.io/revision": {}
                                                            }
                                                      },
                                                      "f:status": {
                                                            "f:availableReplicas": {},
                                                            "f:conditions": {
                                                                  ".": {},
                                                                  "k:{\"type\":\"Available\"}": {
                                                                        ".": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:lastUpdateTime": {},
                                                                        "f:message": {},
                                                                        "f:reason": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  },
                                                                  "k:{\"type\":\"Progressing\"}": {
                                                                        ".": {},
                                                                        "f:lastTransitionTime": {},
                                                                        "f:lastUpdateTime": {},
                                                                        "f:message": {},
                                                                        "f:reason": {},
                                                                        "f:status": {},
                                                                        "f:type": {}
                                                                  }
                                                            },
                                                            "f:observedGeneration": {},
                                                            "f:readyReplicas": {},
                                                            "f:replicas": {},
                                                            "f:updatedReplicas": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:11:10+00:00"
                                          }
                                    ],
                                    "name": "mongodb-kubernetes-operator",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "878",
                                    "self_link": null,
                                    "uid": "9ae68ab4-0d8f-4db0-9cd4-184cadc19ff4"
                              },
                              "spec": {
                                    "min_ready_seconds": null,
                                    "paused": null,
                                    "progress_deadline_seconds": 600,
                                    "replicas": 1,
                                    "revision_history_limit": 10,
                                    "selector": {
                                          "match_expressions": null,
                                          "match_labels": {
                                                "name": "mongodb-kubernetes-operator"
                                          }
                                    },
                                    "strategy": {
                                          "rolling_update": {
                                                "max_surge": "25%",
                                                "max_unavailable": 1
                                          },
                                          "type": "RollingUpdate"
                                    },
                                    "template": {
                                          "metadata": {
                                                "annotations": null,
                                                "cluster_name": null,
                                                "creation_timestamp": null,
                                                "deletion_grace_period_seconds": null,
                                                "deletion_timestamp": null,
                                                "finalizers": null,
                                                "generate_name": null,
                                                "generation": null,
                                                "labels": {
                                                      "acto/tag": "operator-pod",
                                                      "name": "mongodb-kubernetes-operator"
                                                },
                                                "managed_fields": null,
                                                "name": null,
                                                "namespace": null,
                                                "owner_references": null,
                                                "resource_version": null,
                                                "self_link": null,
                                                "uid": null
                                          },
                                          "spec": {
                                                "active_deadline_seconds": null,
                                                "affinity": {
                                                      "node_affinity": null,
                                                      "pod_affinity": null,
                                                      "pod_anti_affinity": {
                                                            "preferred_during_scheduling_ignored_during_execution": null,
                                                            "required_during_scheduling_ignored_during_execution": [
                                                                  {
                                                                        "label_selector": {
                                                                              "match_expressions": [
                                                                                    {
                                                                                          "key": "name",
                                                                                          "operator": "In",
                                                                                          "values": [
                                                                                                "mongodb-kubernetes-operator"
                                                                                          ]
                                                                                    }
                                                                              ],
                                                                              "match_labels": null
                                                                        },
                                                                        "namespace_selector": null,
                                                                        "namespaces": null,
                                                                        "topology_key": "kubernetes.io/hostname"
                                                                  }
                                                            ]
                                                      }
                                                },
                                                "automount_service_account_token": null,
                                                "containers": [
                                                      {
                                                            "args": null,
                                                            "command": [
                                                                  "/usr/local/bin/entrypoint"
                                                            ],
                                                            "env": [
                                                                  {
                                                                        "name": "WATCH_NAMESPACE",
                                                                        "value": null,
                                                                        "value_from": {
                                                                              "config_map_key_ref": null,
                                                                              "field_ref": {
                                                                                    "api_version": "v1",
                                                                                    "field_path": "metadata.namespace"
                                                                              },
                                                                              "resource_field_ref": null,
                                                                              "secret_key_ref": null
                                                                        }
                                                                  },
                                                                  {
                                                                        "name": "POD_NAME",
                                                                        "value": null,
                                                                        "value_from": {
                                                                              "config_map_key_ref": null,
                                                                              "field_ref": {
                                                                                    "api_version": "v1",
                                                                                    "field_path": "metadata.name"
                                                                              },
                                                                              "resource_field_ref": null,
                                                                              "secret_key_ref": null
                                                                        }
                                                                  },
                                                                  {
                                                                        "name": "OPERATOR_NAME",
                                                                        "value": "mongodb-kubernetes-operator",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "AGENT_IMAGE",
                                                                        "value": "quay.io/mongodb/mongodb-agent:11.12.0.7388-1",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "VERSION_UPGRADE_HOOK_IMAGE",
                                                                        "value": "quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.4",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "READINESS_PROBE_IMAGE",
                                                                        "value": "quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.9",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "MONGODB_IMAGE",
                                                                        "value": "mongo",
                                                                        "value_from": null
                                                                  },
                                                                  {
                                                                        "name": "MONGODB_REPO_URL",
                                                                        "value": "docker.io",
                                                                        "value_from": null
                                                                  }
                                                            ],
                                                            "env_from": null,
                                                            "image": "quay.io/mongodb/mongodb-kubernetes-operator:0.7.4",
                                                            "image_pull_policy": "Always",
                                                            "lifecycle": null,
                                                            "liveness_probe": null,
                                                            "name": "mongodb-kubernetes-operator",
                                                            "ports": null,
                                                            "readiness_probe": null,
                                                            "resources": {
                                                                  "limits": {
                                                                        "cpu": "1100m",
                                                                        "memory": "1Gi"
                                                                  },
                                                                  "requests": {
                                                                        "cpu": "500m",
                                                                        "memory": "200Mi"
                                                                  }
                                                            },
                                                            "security_context": {
                                                                  "allow_privilege_escalation": false,
                                                                  "capabilities": null,
                                                                  "privileged": null,
                                                                  "proc_mount": null,
                                                                  "read_only_root_filesystem": true,
                                                                  "run_as_group": null,
                                                                  "run_as_non_root": null,
                                                                  "run_as_user": 2000,
                                                                  "se_linux_options": null,
                                                                  "seccomp_profile": null,
                                                                  "windows_options": null
                                                            },
                                                            "startup_probe": null,
                                                            "stdin": null,
                                                            "stdin_once": null,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": null,
                                                            "volume_devices": null,
                                                            "volume_mounts": null,
                                                            "working_dir": null
                                                      }
                                                ],
                                                "dns_config": null,
                                                "dns_policy": "ClusterFirst",
                                                "enable_service_links": null,
                                                "ephemeral_containers": null,
                                                "host_aliases": null,
                                                "host_ipc": null,
                                                "host_network": null,
                                                "host_pid": null,
                                                "hostname": null,
                                                "image_pull_secrets": null,
                                                "init_containers": null,
                                                "node_name": null,
                                                "node_selector": null,
                                                "overhead": null,
                                                "preemption_policy": null,
                                                "priority": null,
                                                "priority_class_name": null,
                                                "readiness_gates": null,
                                                "restart_policy": "Always",
                                                "runtime_class_name": null,
                                                "scheduler_name": "default-scheduler",
                                                "security_context": {
                                                      "fs_group": null,
                                                      "fs_group_change_policy": null,
                                                      "run_as_group": null,
                                                      "run_as_non_root": null,
                                                      "run_as_user": null,
                                                      "se_linux_options": null,
                                                      "seccomp_profile": {
                                                            "localhost_profile": null,
                                                            "type": "RuntimeDefault"
                                                      },
                                                      "supplemental_groups": null,
                                                      "sysctls": null,
                                                      "windows_options": null
                                                },
                                                "service_account": "mongodb-kubernetes-operator",
                                                "service_account_name": "mongodb-kubernetes-operator",
                                                "set_hostname_as_fqdn": null,
                                                "share_process_namespace": null,
                                                "subdomain": null,
                                                "termination_grace_period_seconds": 30,
                                                "tolerations": null,
                                                "topology_spread_constraints": null,
                                                "volumes": null
                                          }
                                    }
                              },
                              "status": {
                                    "available_replicas": 1,
                                    "collision_count": null,
                                    "conditions": [
                                          {
                                                "last_transition_time": "2023-03-25T22:10:48+00:00",
                                                "last_update_time": "2023-03-25T22:10:48+00:00",
                                                "message": "Deployment has minimum availability.",
                                                "reason": "MinimumReplicasAvailable",
                                                "status": "True",
                                                "type": "Available"
                                          },
                                          {
                                                "last_transition_time": "2023-03-25T22:10:48+00:00",
                                                "last_update_time": "2023-03-25T22:11:10+00:00",
                                                "message": "ReplicaSet \"mongodb-kubernetes-operator-765485f445\" has successfully progressed.",
                                                "reason": "NewReplicaSetAvailable",
                                                "status": "True",
                                                "type": "Progressing"
                                          }
                                    ],
                                    "observed_generation": 2,
                                    "ready_replicas": 1,
                                    "replicas": 1,
                                    "unavailable_replicas": null,
                                    "updated_replicas": 1
                              }
                        }
                  },
                  "config_map": {
                        "kube-root-ca.crt": {
                              "api_version": null,
                              "binary_data": null,
                              "data": {
                                    "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIzMDMyNTIyMDgzNloXDTMzMDMyMjIyMDgzNlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALZr\niPNvV2hNDmTLvxSq/w80v0XGmyUDuPD79RUKLgTW/Hz3Pchzu9jP2Sjzn0LxMhwv\ngaxnJlLjN4XFmNWr1JgxoczZGViO5+ebZingt/A4edZu60RwSPCIRLnZMt/uVvUu\n+VyghiPrd2S7llyhU/RAlPfnxdSVOdwSl2QfvtgVkdtDT54NloTXMeiq1h9Iy6ST\nAo/pLdZ4V/mA+RiNZdv5bh+mXW+ak4s/OoKjEVJPNvQwLZ+LzdSAiLaZLsQpOn7T\nqFc7lFLW0Do4Oy6eA9wzlhzIeYFjnguUvPxIMPHZ7xiF/rXKT0GQv5RfttF9q/UV\npjoBsI2l0BJ2M8bG8yMCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFLtVQZjUCq05ahgf6C7qxA/YIt9MMBUGA1UdEQQO\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAIcY/aXmU0WlpKk4jF+f\nfLBj6U2fN47y1Px0A2GzUdHq7F2YL6xPynPP62NfOxQXVbimwhaxT7Qb7lYVymlQ\nwMJc/6EtQZXEsZYzJRLMa4nKczkWujTIQqmt4gxuYmHZz87UE1yFhs9CUAuLYyv1\nFMv2DCP/mN/VnvMZDmT5sHGyQVXt1WCg2IgM1mJSavpbSQYBw1dn37rb+g1M8n/e\ntH8XeBuuj+mKTvKb69r0N9LxaHgK5j5Ruf0VXW5kWy5QrsMIT6rn9gak0jYPgUtE\nkNmYQrNcdeKdviHFGZVBauwHbJJmppo1d1WE4oHDqofAmUsv0qsls5t+oTdVjJ8D\n0ss=\n-----END CERTIFICATE-----\n"
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:34+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:data": {
                                                            ".": {},
                                                            "f:ca.crt": {}
                                                      },
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:kubernetes.io/description": {}
                                                            }
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:34+00:00"
                                          }
                                    ],
                                    "name": "kube-root-ca.crt",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "674",
                                    "self_link": null,
                                    "uid": "e830a04f-392a-4bdb-a903-8fdb2c11dd7c"
                              }
                        }
                  },
                  "service": {
                        "test-cluster-svc": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:06+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {}
                                                            },
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"7edff82e-9821-452f-9f00-6b0248cbf466\"}": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:clusterIP": {},
                                                            "f:internalTrafficPolicy": {},
                                                            "f:ports": {
                                                                  ".": {},
                                                                  "k:{\"port\":27017,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:port": {},
                                                                        "f:protocol": {},
                                                                        "f:targetPort": {}
                                                                  }
                                                            },
                                                            "f:publishNotReadyAddresses": {},
                                                            "f:selector": {},
                                                            "f:sessionAffinity": {},
                                                            "f:type": {}
                                                      }
                                                },
                                                "manager": "manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:06+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-svc",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "mongodbcommunity.mongodb.com/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "MongoDBCommunity",
                                                "name": "test-cluster",
                                                "uid": "7edff82e-9821-452f-9f00-6b0248cbf466"
                                          }
                                    ],
                                    "resource_version": "2612",
                                    "self_link": null,
                                    "uid": "88d61646-b626-414b-b54a-cf74b701d787"
                              },
                              "spec": {
                                    "allocate_load_balancer_node_ports": null,
                                    "cluster_ip": "None",
                                    "cluster_i_ps": [
                                          "None"
                                    ],
                                    "external_i_ps": null,
                                    "external_name": null,
                                    "external_traffic_policy": null,
                                    "health_check_node_port": null,
                                    "internal_traffic_policy": "Cluster",
                                    "ip_families": [
                                          "IPv4"
                                    ],
                                    "ip_family_policy": "SingleStack",
                                    "load_balancer_class": null,
                                    "load_balancer_ip": null,
                                    "load_balancer_source_ranges": null,
                                    "ports": [
                                          {
                                                "app_protocol": null,
                                                "name": "mongodb",
                                                "node_port": null,
                                                "port": 27017,
                                                "protocol": "TCP",
                                                "target_port": 27017
                                          }
                                    ],
                                    "publish_not_ready_addresses": true,
                                    "selector": {
                                          "app": "test-cluster-svc"
                                    },
                                    "session_affinity": "None",
                                    "session_affinity_config": null,
                                    "type": "ClusterIP"
                              },
                              "status": {
                                    "conditions": null,
                                    "load_balancer": {
                                          "ingress": null
                                    }
                              }
                        }
                  },
                  "service_account": {
                        "default": {
                              "api_version": null,
                              "automount_service_account_token": null,
                              "image_pull_secrets": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:34+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": null,
                                    "name": "default",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "676",
                                    "self_link": null,
                                    "uid": "345f8c39-dbd0-41a2-a385-f560374ae6ed"
                              },
                              "secrets": [
                                    {
                                          "api_version": null,
                                          "field_path": null,
                                          "kind": null,
                                          "name": "default-token-q88jp",
                                          "namespace": null,
                                          "resource_version": null,
                                          "uid": null
                                    }
                              ]
                        },
                        "mongodb-database": {
                              "api_version": null,
                              "automount_service_account_token": null,
                              "image_pull_secrets": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:49+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": null,
                                    "name": "mongodb-database",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "744",
                                    "self_link": null,
                                    "uid": "28bcf647-56f3-4439-bff5-850cea389e8c"
                              },
                              "secrets": [
                                    {
                                          "api_version": null,
                                          "field_path": null,
                                          "kind": null,
                                          "name": "mongodb-database-token-9jwtv",
                                          "namespace": null,
                                          "resource_version": null,
                                          "uid": null
                                    }
                              ]
                        },
                        "mongodb-kubernetes-operator": {
                              "api_version": null,
                              "automount_service_account_token": null,
                              "image_pull_secrets": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:48+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": null,
                                    "name": "mongodb-kubernetes-operator",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "730",
                                    "self_link": null,
                                    "uid": "caee7313-19a1-4608-a934-7d276a8d9c59"
                              },
                              "secrets": [
                                    {
                                          "api_version": null,
                                          "field_path": null,
                                          "kind": null,
                                          "name": "mongodb-kubernetes-operator-token-s8ct6",
                                          "namespace": null,
                                          "resource_version": null,
                                          "uid": null
                                    }
                              ]
                        }
                  },
                  "pvc": {
                        "data-volume-test-cluster-0": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "pv.kubernetes.io/bind-completed": "yes",
                                          "pv.kubernetes.io/bound-by-controller": "yes",
                                          "volume.beta.kubernetes.io/storage-provisioner": "rancher.io/local-path",
                                          "volume.kubernetes.io/selected-node": "acto-cluster-9-worker"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:11:04+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": [
                                          "kubernetes.io/pvc-protection"
                                    ],
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:volume.kubernetes.io/selected-node": {}
                                                            }
                                                      }
                                                },
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:11:04+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  "f:pv.kubernetes.io/bind-completed": {},
                                                                  "f:pv.kubernetes.io/bound-by-controller": {},
                                                                  "f:volume.beta.kubernetes.io/storage-provisioner": {}
                                                            },
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:accessModes": {},
                                                            "f:resources": {
                                                                  "f:requests": {
                                                                        ".": {},
                                                                        "f:storage": {}
                                                                  }
                                                            },
                                                            "f:volumeMode": {},
                                                            "f:volumeName": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:11:10+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:accessModes": {},
                                                            "f:capacity": {
                                                                  ".": {},
                                                                  "f:storage": {}
                                                            },
                                                            "f:phase": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:11:10+00:00"
                                          }
                                    ],
                                    "name": "data-volume-test-cluster-0",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "874",
                                    "self_link": null,
                                    "uid": "94c3765e-ef3d-4cb6-acc4-7d154f78b339"
                              },
                              "spec": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "data_source": null,
                                    "data_source_ref": null,
                                    "resources": {
                                          "limits": null,
                                          "requests": {
                                                "storage": "10G"
                                          }
                                    },
                                    "selector": null,
                                    "storage_class_name": "standard",
                                    "volume_mode": "Filesystem",
                                    "volume_name": "pvc-94c3765e-ef3d-4cb6-acc4-7d154f78b339"
                              },
                              "status": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "capacity": {
                                          "storage": "10G"
                                    },
                                    "conditions": null,
                                    "phase": "Bound"
                              }
                        },
                        "data-volume-test-cluster-1": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "pv.kubernetes.io/bind-completed": "yes",
                                          "pv.kubernetes.io/bound-by-controller": "yes",
                                          "volume.beta.kubernetes.io/storage-provisioner": "rancher.io/local-path",
                                          "volume.kubernetes.io/selected-node": "acto-cluster-9-worker2"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:12:51+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": [
                                          "kubernetes.io/pvc-protection"
                                    ],
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:volume.kubernetes.io/selected-node": {}
                                                            }
                                                      }
                                                },
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:12:51+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  "f:pv.kubernetes.io/bind-completed": {},
                                                                  "f:pv.kubernetes.io/bound-by-controller": {},
                                                                  "f:volume.beta.kubernetes.io/storage-provisioner": {}
                                                            },
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:accessModes": {},
                                                            "f:resources": {
                                                                  "f:requests": {
                                                                        ".": {},
                                                                        "f:storage": {}
                                                                  }
                                                            },
                                                            "f:volumeMode": {},
                                                            "f:volumeName": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:12:56+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:accessModes": {},
                                                            "f:capacity": {
                                                                  ".": {},
                                                                  "f:storage": {}
                                                            },
                                                            "f:phase": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:12:56+00:00"
                                          }
                                    ],
                                    "name": "data-volume-test-cluster-1",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "1116",
                                    "self_link": null,
                                    "uid": "2d0392b0-f1b4-4b9c-a4fd-d4702ceff223"
                              },
                              "spec": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "data_source": null,
                                    "data_source_ref": null,
                                    "resources": {
                                          "limits": null,
                                          "requests": {
                                                "storage": "10G"
                                          }
                                    },
                                    "selector": null,
                                    "storage_class_name": "standard",
                                    "volume_mode": "Filesystem",
                                    "volume_name": "pvc-2d0392b0-f1b4-4b9c-a4fd-d4702ceff223"
                              },
                              "status": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "capacity": {
                                          "storage": "10G"
                                    },
                                    "conditions": null,
                                    "phase": "Bound"
                              }
                        },
                        "data-volume-test-cluster-2": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "pv.kubernetes.io/bind-completed": "yes",
                                          "pv.kubernetes.io/bound-by-controller": "yes",
                                          "volume.beta.kubernetes.io/storage-provisioner": "rancher.io/local-path",
                                          "volume.kubernetes.io/selected-node": "acto-cluster-9-worker3"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:14:38+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": [
                                          "kubernetes.io/pvc-protection"
                                    ],
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:volume.kubernetes.io/selected-node": {}
                                                            }
                                                      }
                                                },
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:14:38+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  "f:pv.kubernetes.io/bind-completed": {},
                                                                  "f:pv.kubernetes.io/bound-by-controller": {},
                                                                  "f:volume.beta.kubernetes.io/storage-provisioner": {}
                                                            },
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:accessModes": {},
                                                            "f:resources": {
                                                                  "f:requests": {
                                                                        ".": {},
                                                                        "f:storage": {}
                                                                  }
                                                            },
                                                            "f:volumeMode": {},
                                                            "f:volumeName": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:14:45+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:accessModes": {},
                                                            "f:capacity": {
                                                                  ".": {},
                                                                  "f:storage": {}
                                                            },
                                                            "f:phase": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:14:45+00:00"
                                          }
                                    ],
                                    "name": "data-volume-test-cluster-2",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "1365",
                                    "self_link": null,
                                    "uid": "3959b7f5-81fb-48ce-9f1c-ff11aab3c048"
                              },
                              "spec": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "data_source": null,
                                    "data_source_ref": null,
                                    "resources": {
                                          "limits": null,
                                          "requests": {
                                                "storage": "10G"
                                          }
                                    },
                                    "selector": null,
                                    "storage_class_name": "standard",
                                    "volume_mode": "Filesystem",
                                    "volume_name": "pvc-3959b7f5-81fb-48ce-9f1c-ff11aab3c048"
                              },
                              "status": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "capacity": {
                                          "storage": "10G"
                                    },
                                    "conditions": null,
                                    "phase": "Bound"
                              }
                        },
                        "logs-volume-test-cluster-0": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "pv.kubernetes.io/bind-completed": "yes",
                                          "pv.kubernetes.io/bound-by-controller": "yes",
                                          "volume.beta.kubernetes.io/storage-provisioner": "rancher.io/local-path",
                                          "volume.kubernetes.io/selected-node": "acto-cluster-9-worker"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:11:04+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": [
                                          "kubernetes.io/pvc-protection"
                                    ],
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:volume.kubernetes.io/selected-node": {}
                                                            }
                                                      }
                                                },
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:11:04+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  "f:pv.kubernetes.io/bind-completed": {},
                                                                  "f:pv.kubernetes.io/bound-by-controller": {},
                                                                  "f:volume.beta.kubernetes.io/storage-provisioner": {}
                                                            },
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:accessModes": {},
                                                            "f:resources": {
                                                                  "f:requests": {
                                                                        ".": {},
                                                                        "f:storage": {}
                                                                  }
                                                            },
                                                            "f:volumeMode": {},
                                                            "f:volumeName": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:11:10+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:accessModes": {},
                                                            "f:capacity": {
                                                                  ".": {},
                                                                  "f:storage": {}
                                                            },
                                                            "f:phase": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:11:10+00:00"
                                          }
                                    ],
                                    "name": "logs-volume-test-cluster-0",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "871",
                                    "self_link": null,
                                    "uid": "4b7f7995-8cb4-4a8f-a55e-26a2e153360b"
                              },
                              "spec": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "data_source": null,
                                    "data_source_ref": null,
                                    "resources": {
                                          "limits": null,
                                          "requests": {
                                                "storage": "2G"
                                          }
                                    },
                                    "selector": null,
                                    "storage_class_name": "standard",
                                    "volume_mode": "Filesystem",
                                    "volume_name": "pvc-4b7f7995-8cb4-4a8f-a55e-26a2e153360b"
                              },
                              "status": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "capacity": {
                                          "storage": "2G"
                                    },
                                    "conditions": null,
                                    "phase": "Bound"
                              }
                        },
                        "logs-volume-test-cluster-1": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "pv.kubernetes.io/bind-completed": "yes",
                                          "pv.kubernetes.io/bound-by-controller": "yes",
                                          "volume.beta.kubernetes.io/storage-provisioner": "rancher.io/local-path",
                                          "volume.kubernetes.io/selected-node": "acto-cluster-9-worker2"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:12:51+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": [
                                          "kubernetes.io/pvc-protection"
                                    ],
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:volume.kubernetes.io/selected-node": {}
                                                            }
                                                      }
                                                },
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:12:51+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  "f:pv.kubernetes.io/bind-completed": {},
                                                                  "f:pv.kubernetes.io/bound-by-controller": {},
                                                                  "f:volume.beta.kubernetes.io/storage-provisioner": {}
                                                            },
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:accessModes": {},
                                                            "f:resources": {
                                                                  "f:requests": {
                                                                        ".": {},
                                                                        "f:storage": {}
                                                                  }
                                                            },
                                                            "f:volumeMode": {},
                                                            "f:volumeName": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:12:57+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:accessModes": {},
                                                            "f:capacity": {
                                                                  ".": {},
                                                                  "f:storage": {}
                                                            },
                                                            "f:phase": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:12:57+00:00"
                                          }
                                    ],
                                    "name": "logs-volume-test-cluster-1",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "1125",
                                    "self_link": null,
                                    "uid": "206be2a1-a711-4fb7-9769-958ea14dc5bb"
                              },
                              "spec": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "data_source": null,
                                    "data_source_ref": null,
                                    "resources": {
                                          "limits": null,
                                          "requests": {
                                                "storage": "2G"
                                          }
                                    },
                                    "selector": null,
                                    "storage_class_name": "standard",
                                    "volume_mode": "Filesystem",
                                    "volume_name": "pvc-206be2a1-a711-4fb7-9769-958ea14dc5bb"
                              },
                              "status": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "capacity": {
                                          "storage": "2G"
                                    },
                                    "conditions": null,
                                    "phase": "Bound"
                              }
                        },
                        "logs-volume-test-cluster-2": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "pv.kubernetes.io/bind-completed": "yes",
                                          "pv.kubernetes.io/bound-by-controller": "yes",
                                          "volume.beta.kubernetes.io/storage-provisioner": "rancher.io/local-path",
                                          "volume.kubernetes.io/selected-node": "acto-cluster-9-worker3"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:14:38+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": [
                                          "kubernetes.io/pvc-protection"
                                    ],
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc"
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:volume.kubernetes.io/selected-node": {}
                                                            }
                                                      }
                                                },
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:14:38+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  "f:pv.kubernetes.io/bind-completed": {},
                                                                  "f:pv.kubernetes.io/bound-by-controller": {},
                                                                  "f:volume.beta.kubernetes.io/storage-provisioner": {}
                                                            },
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {}
                                                            }
                                                      },
                                                      "f:spec": {
                                                            "f:accessModes": {},
                                                            "f:resources": {
                                                                  "f:requests": {
                                                                        ".": {},
                                                                        "f:storage": {}
                                                                  }
                                                            },
                                                            "f:volumeMode": {},
                                                            "f:volumeName": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:14:45+00:00"
                                          },
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:status": {
                                                            "f:accessModes": {},
                                                            "f:capacity": {
                                                                  ".": {},
                                                                  "f:storage": {}
                                                            },
                                                            "f:phase": {}
                                                      }
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": "status",
                                                "time": "2023-03-25T22:14:45+00:00"
                                          }
                                    ],
                                    "name": "logs-volume-test-cluster-2",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "1368",
                                    "self_link": null,
                                    "uid": "af3f0323-ba79-4fcf-88f4-a76a2dd01a50"
                              },
                              "spec": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "data_source": null,
                                    "data_source_ref": null,
                                    "resources": {
                                          "limits": null,
                                          "requests": {
                                                "storage": "2G"
                                          }
                                    },
                                    "selector": null,
                                    "storage_class_name": "standard",
                                    "volume_mode": "Filesystem",
                                    "volume_name": "pvc-af3f0323-ba79-4fcf-88f4-a76a2dd01a50"
                              },
                              "status": {
                                    "access_modes": [
                                          "ReadWriteOnce"
                                    ],
                                    "capacity": {
                                          "storage": "2G"
                                    },
                                    "conditions": null,
                                    "phase": "Bound"
                              }
                        }
                  },
                  "cronjob": {},
                  "ingress": {},
                  "network_policy": {},
                  "pod_disruption_budget": {},
                  "secret": {
                        "default-token-q88jp": {
                              "api_version": null,
                              "data": {
                                    "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIzMDMyNTIyMDgzNloXDTMzMDMyMjIyMDgzNlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALZr\niPNvV2hNDmTLvxSq/w80v0XGmyUDuPD79RUKLgTW/Hz3Pchzu9jP2Sjzn0LxMhwv\ngaxnJlLjN4XFmNWr1JgxoczZGViO5+ebZingt/A4edZu60RwSPCIRLnZMt/uVvUu\n+VyghiPrd2S7llyhU/RAlPfnxdSVOdwSl2QfvtgVkdtDT54NloTXMeiq1h9Iy6ST\nAo/pLdZ4V/mA+RiNZdv5bh+mXW+ak4s/OoKjEVJPNvQwLZ+LzdSAiLaZLsQpOn7T\nqFc7lFLW0Do4Oy6eA9wzlhzIeYFjnguUvPxIMPHZ7xiF/rXKT0GQv5RfttF9q/UV\npjoBsI2l0BJ2M8bG8yMCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFLtVQZjUCq05ahgf6C7qxA/YIt9MMBUGA1UdEQQO\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAIcY/aXmU0WlpKk4jF+f\nfLBj6U2fN47y1Px0A2GzUdHq7F2YL6xPynPP62NfOxQXVbimwhaxT7Qb7lYVymlQ\nwMJc/6EtQZXEsZYzJRLMa4nKczkWujTIQqmt4gxuYmHZz87UE1yFhs9CUAuLYyv1\nFMv2DCP/mN/VnvMZDmT5sHGyQVXt1WCg2IgM1mJSavpbSQYBw1dn37rb+g1M8n/e\ntH8XeBuuj+mKTvKb69r0N9LxaHgK5j5Ruf0VXW5kWy5QrsMIT6rn9gak0jYPgUtE\nkNmYQrNcdeKdviHFGZVBauwHbJJmppo1d1WE4oHDqofAmUsv0qsls5t+oTdVjJ8D\n0ss=\n-----END CERTIFICATE-----\n",
                                    "namespace": "mongodb",
                                    "token": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImVoQTRhQmJyMkI4c1VYVEEzcEhEU2Y1bC1RSENUZVA3VmZKZGRld0tueXMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtb25nb2RiIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tcTg4anAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjM0NWY4YzM5LWRiZDAtNDFhMi1hMzg1LWY1NjAzNzRhZTZlZCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptb25nb2RiOmRlZmF1bHQifQ.Kj7FKiyti07ErQemWuK6k8I6cF1shA6Lc1ougaLEz14TlXlsW1AboEdb8bkEElAvLxKRWko_B25QSUwH9-zflfYSekLayLNI4s0r6pwD9Fc_kBP6gIHFXXEr3s4GmAXGhcy0iZ8LPpmL6vmvvrqZJPNFGvMqwsLqwuJb1sUePuuWlCmzsV_YHAxZYg-jYGsoR_0WpKV6L_e1kV6DS4biLU1RstqxurateWTX5MiDG9foHzgcjEGYa5l1KhuO66OU77XyPRPos1O5FycFRZPE60hL6L6CLQA130yGGUNaXtnu-LIRh4w5W1Ec-9NlREoImz61fGkvHhWJuPhgNt2VTA"
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "kubernetes.io/service-account.name": "default",
                                          "kubernetes.io/service-account.uid": "345f8c39-dbd0-41a2-a385-f560374ae6ed"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:34+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:data": {
                                                            ".": {},
                                                            "f:ca.crt": {},
                                                            "f:namespace": {},
                                                            "f:token": {}
                                                      },
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:kubernetes.io/service-account.name": {},
                                                                  "f:kubernetes.io/service-account.uid": {}
                                                            }
                                                      },
                                                      "f:type": {}
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:34+00:00"
                                          }
                                    ],
                                    "name": "default-token-q88jp",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "675",
                                    "self_link": null,
                                    "uid": "14321481-34ca-44c1-9965-c631b69ebc7b"
                              },
                              "string_data": null,
                              "type": "kubernetes.io/service-account-token"
                        },
                        "mongodb-database-token-9jwtv": {
                              "api_version": null,
                              "data": {
                                    "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIzMDMyNTIyMDgzNloXDTMzMDMyMjIyMDgzNlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALZr\niPNvV2hNDmTLvxSq/w80v0XGmyUDuPD79RUKLgTW/Hz3Pchzu9jP2Sjzn0LxMhwv\ngaxnJlLjN4XFmNWr1JgxoczZGViO5+ebZingt/A4edZu60RwSPCIRLnZMt/uVvUu\n+VyghiPrd2S7llyhU/RAlPfnxdSVOdwSl2QfvtgVkdtDT54NloTXMeiq1h9Iy6ST\nAo/pLdZ4V/mA+RiNZdv5bh+mXW+ak4s/OoKjEVJPNvQwLZ+LzdSAiLaZLsQpOn7T\nqFc7lFLW0Do4Oy6eA9wzlhzIeYFjnguUvPxIMPHZ7xiF/rXKT0GQv5RfttF9q/UV\npjoBsI2l0BJ2M8bG8yMCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFLtVQZjUCq05ahgf6C7qxA/YIt9MMBUGA1UdEQQO\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAIcY/aXmU0WlpKk4jF+f\nfLBj6U2fN47y1Px0A2GzUdHq7F2YL6xPynPP62NfOxQXVbimwhaxT7Qb7lYVymlQ\nwMJc/6EtQZXEsZYzJRLMa4nKczkWujTIQqmt4gxuYmHZz87UE1yFhs9CUAuLYyv1\nFMv2DCP/mN/VnvMZDmT5sHGyQVXt1WCg2IgM1mJSavpbSQYBw1dn37rb+g1M8n/e\ntH8XeBuuj+mKTvKb69r0N9LxaHgK5j5Ruf0VXW5kWy5QrsMIT6rn9gak0jYPgUtE\nkNmYQrNcdeKdviHFGZVBauwHbJJmppo1d1WE4oHDqofAmUsv0qsls5t+oTdVjJ8D\n0ss=\n-----END CERTIFICATE-----\n",
                                    "namespace": "mongodb",
                                    "token": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImVoQTRhQmJyMkI4c1VYVEEzcEhEU2Y1bC1RSENUZVA3VmZKZGRld0tueXMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtb25nb2RiIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1vbmdvZGItZGF0YWJhc2UtdG9rZW4tOWp3dHYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibW9uZ29kYi1kYXRhYmFzZSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjI4YmNmNjQ3LTU2ZjMtNDQzOS1iZmY1LTg1MGNlYTM4OWU4YyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptb25nb2RiOm1vbmdvZGItZGF0YWJhc2UifQ.tbB254Ld5_Htqg7VwTnTXqdviDnc2xFhJNFn02XyBoj_wVSF2lw5FonubrhAaqrwrYPACmLTfpMhjH5Nb8C1HPvxVEBXtV7D5STjIEN03h5NxvU1mnajlSijQmW-O5-wFgr061U7D5gZRTAYj3u--iS0ossnbdOgq0l7g_PP7Pe9RcyqW4c62nF3Tf5rAZQHhyWgK9zvw--4ZmR2LVHbor-VnyxMH7gE9ECjRPkOkQo1BfRJP7e4vBaK-MU2IJHlAg5vBX6pjKhiAQhenrOQ6_xygTz-BuvzoRvA_PMnDcbp1R2OcnPVm69Jk5F_YPRqApV05BBOlCtr7F9uslE6oA"
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "kubernetes.io/service-account.name": "mongodb-database",
                                          "kubernetes.io/service-account.uid": "28bcf647-56f3-4439-bff5-850cea389e8c"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:49+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:data": {
                                                            ".": {},
                                                            "f:ca.crt": {},
                                                            "f:namespace": {},
                                                            "f:token": {}
                                                      },
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:kubernetes.io/service-account.name": {},
                                                                  "f:kubernetes.io/service-account.uid": {}
                                                            }
                                                      },
                                                      "f:type": {}
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:49+00:00"
                                          }
                                    ],
                                    "name": "mongodb-database-token-9jwtv",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "742",
                                    "self_link": null,
                                    "uid": "6f1a8c8d-d1ea-4981-8aa8-d9c00c971bc1"
                              },
                              "string_data": null,
                              "type": "kubernetes.io/service-account-token"
                        },
                        "mongodb-kubernetes-operator-token-s8ct6": {
                              "api_version": null,
                              "data": {
                                    "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIzMDMyNTIyMDgzNloXDTMzMDMyMjIyMDgzNlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALZr\niPNvV2hNDmTLvxSq/w80v0XGmyUDuPD79RUKLgTW/Hz3Pchzu9jP2Sjzn0LxMhwv\ngaxnJlLjN4XFmNWr1JgxoczZGViO5+ebZingt/A4edZu60RwSPCIRLnZMt/uVvUu\n+VyghiPrd2S7llyhU/RAlPfnxdSVOdwSl2QfvtgVkdtDT54NloTXMeiq1h9Iy6ST\nAo/pLdZ4V/mA+RiNZdv5bh+mXW+ak4s/OoKjEVJPNvQwLZ+LzdSAiLaZLsQpOn7T\nqFc7lFLW0Do4Oy6eA9wzlhzIeYFjnguUvPxIMPHZ7xiF/rXKT0GQv5RfttF9q/UV\npjoBsI2l0BJ2M8bG8yMCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFLtVQZjUCq05ahgf6C7qxA/YIt9MMBUGA1UdEQQO\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAIcY/aXmU0WlpKk4jF+f\nfLBj6U2fN47y1Px0A2GzUdHq7F2YL6xPynPP62NfOxQXVbimwhaxT7Qb7lYVymlQ\nwMJc/6EtQZXEsZYzJRLMa4nKczkWujTIQqmt4gxuYmHZz87UE1yFhs9CUAuLYyv1\nFMv2DCP/mN/VnvMZDmT5sHGyQVXt1WCg2IgM1mJSavpbSQYBw1dn37rb+g1M8n/e\ntH8XeBuuj+mKTvKb69r0N9LxaHgK5j5Ruf0VXW5kWy5QrsMIT6rn9gak0jYPgUtE\nkNmYQrNcdeKdviHFGZVBauwHbJJmppo1d1WE4oHDqofAmUsv0qsls5t+oTdVjJ8D\n0ss=\n-----END CERTIFICATE-----\n",
                                    "namespace": "mongodb",
                                    "token": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImVoQTRhQmJyMkI4c1VYVEEzcEhEU2Y1bC1RSENUZVA3VmZKZGRld0tueXMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtb25nb2RiIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1vbmdvZGIta3ViZXJuZXRlcy1vcGVyYXRvci10b2tlbi1zOGN0NiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJtb25nb2RiLWt1YmVybmV0ZXMtb3BlcmF0b3IiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJjYWVlNzMxMy0xOWExLTQ2MDgtYTkzNC03ZDI3NmE4ZDljNTkiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6bW9uZ29kYjptb25nb2RiLWt1YmVybmV0ZXMtb3BlcmF0b3IifQ.iqQKO2RL7uouPiD-46E0FQZkIYrUN3zkq0Zd5XpEgpaAYa9UtUWt9B9H4h8OarpIH07DUOOD52Qwp-sY9oEiq9weVVB4NGCIx68Ue55z2M8zK02Famr-sm5dSIeAqYiSWye2RmrXe_FBoxcRkUoSFJLhtWP2-BDkMHTDts3FtvYZgBb8bmKhlSdon-HNXc-wqxKu1p01_HtuzyPwTfkQFflaVNkJT30lsdwU_Q0-WRCPOsn3LE-EQ6IjiMpcWRKWf5rbXwaTWuuFQlYg29aOeBGmLHJZeMHsrf6DXxsiMZzF00zMejNgljOa2qUeyiW0aXaKYPIq_6Zfx_cQUsosYA"
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "kubernetes.io/service-account.name": "mongodb-kubernetes-operator",
                                          "kubernetes.io/service-account.uid": "caee7313-19a1-4608-a934-7d276a8d9c59"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:48+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:data": {
                                                            ".": {},
                                                            "f:ca.crt": {},
                                                            "f:namespace": {},
                                                            "f:token": {}
                                                      },
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:kubernetes.io/service-account.name": {},
                                                                  "f:kubernetes.io/service-account.uid": {}
                                                            }
                                                      },
                                                      "f:type": {}
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:48+00:00"
                                          }
                                    ],
                                    "name": "mongodb-kubernetes-operator-token-s8ct6",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "728",
                                    "self_link": null,
                                    "uid": "8f290558-a757-4ef0-870f-d4a903e4288c"
                              },
                              "string_data": null,
                              "type": "kubernetes.io/service-account-token"
                        },
                        "my-scram-scram-credentials": {
                              "api_version": null,
                              "data": {
                                    "sha-1-server-key": "hLphtJIAPI18TuYBf8kq0QtBv6o=",
                                    "sha-1-stored-key": "IMfYa+I63RdY62g5X2FIgNe4XHU=",
                                    "sha-256-server-key": "tGJHZbHWGZognIehgwu2NlOcjkgloM8Bac+SJXSHZ7c=",
                                    "sha-256-stored-key": "dKZge2hOOBIbR2w0pU+iu4WUhRe+X4IgTFxU4HP7Xlc=",
                                    "sha1-salt": "F0dO56r+spGOxF6m3veHVQ==",
                                    "sha256-salt": "Y332Vyp9LofUPjyXpiiRUxCWEOqloJue3MJmIg=="
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:11:03+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:data": {
                                                            ".": {},
                                                            "f:sha-1-server-key": {},
                                                            "f:sha-1-stored-key": {},
                                                            "f:sha-256-server-key": {},
                                                            "f:sha-256-stored-key": {},
                                                            "f:sha1-salt": {},
                                                            "f:sha256-salt": {}
                                                      },
                                                      "f:type": {}
                                                },
                                                "manager": "manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:11:03+00:00"
                                          }
                                    ],
                                    "name": "my-scram-scram-credentials",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "805",
                                    "self_link": null,
                                    "uid": "feea013d-09d6-482b-83ba-b28b565752f7"
                              },
                              "string_data": null,
                              "type": "Opaque"
                        },
                        "my-user-password": {
                              "api_version": null,
                              "data": {
                                    "password": "<your-password-here>"
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:49+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:stringData": {
                                                            "f:password": {}
                                                      },
                                                      "f:type": {}
                                                },
                                                "manager": "kubectl",
                                                "operation": "Apply",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:49+00:00"
                                          }
                                    ],
                                    "name": "my-user-password",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "743",
                                    "self_link": null,
                                    "uid": "f7b5c12f-e11a-464f-9798-7c6af46c938f"
                              },
                              "string_data": null,
                              "type": "Opaque"
                        },
                        "test-cluster-admin-my-user": {
                              "api_version": null,
                              "data": {
                                    "connectionString.standard": "mongodb://my-user:%3Cyour-password-here%3E@test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/admin?replicaSet=test-cluster&ssl=false",
                                    "connectionString.standardSrv": "mongodb+srv://my-user:%3Cyour-password-here%3E@test-cluster-svc.mongodb.svc.cluster.local/admin?replicaSet=test-cluster&ssl=false",
                                    "password": "<your-password-here>",
                                    "username": "my-user"
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:23:10+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:data": {
                                                            ".": {},
                                                            "f:connectionString.standard": {},
                                                            "f:connectionString.standardSrv": {},
                                                            "f:password": {},
                                                            "f:username": {}
                                                      },
                                                      "f:metadata": {
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"7edff82e-9821-452f-9f00-6b0248cbf466\"}": {}
                                                            }
                                                      },
                                                      "f:type": {}
                                                },
                                                "manager": "manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:23:10+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-admin-my-user",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "mongodbcommunity.mongodb.com/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "MongoDBCommunity",
                                                "name": "test-cluster",
                                                "uid": "7edff82e-9821-452f-9f00-6b0248cbf466"
                                          }
                                    ],
                                    "resource_version": "2855",
                                    "self_link": null,
                                    "uid": "8aa03b00-6fbd-48b5-afe7-12dde6551bfe"
                              },
                              "string_data": null,
                              "type": "Opaque"
                        },
                        "test-cluster-agent-password": {
                              "api_version": null,
                              "data": {
                                    "password": "9GNdr7wwyX0Rg4nS-Dfr"
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:06+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:data": {
                                                            ".": {},
                                                            "f:password": {}
                                                      },
                                                      "f:metadata": {
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"7edff82e-9821-452f-9f00-6b0248cbf466\"}": {}
                                                            }
                                                      },
                                                      "f:type": {}
                                                },
                                                "manager": "manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:06+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-agent-password",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "mongodbcommunity.mongodb.com/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "MongoDBCommunity",
                                                "name": "test-cluster",
                                                "uid": "7edff82e-9821-452f-9f00-6b0248cbf466"
                                          }
                                    ],
                                    "resource_version": "2615",
                                    "self_link": null,
                                    "uid": "1f3ca8ee-0d0d-4719-b937-c5d35f836d72"
                              },
                              "string_data": null,
                              "type": "Opaque"
                        },
                        "test-cluster-config": {
                              "api_version": null,
                              "data": {
                                    "cluster-config.json": "{\"version\":1,\"processes\":[{\"name\":\"test-cluster-0\",\"disabled\":false,\"hostname\":\"test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local\",\"args2_6\":{\"net\":{\"port\":27017},\"replication\":{\"replSetName\":\"test-cluster\"},\"storage\":{\"dbPath\":\"/data\"}},\"featureCompatibilityVersion\":\"4.4\",\"processType\":\"mongod\",\"version\":\"4.4.0\",\"authSchemaVersion\":5},{\"name\":\"test-cluster-1\",\"disabled\":false,\"hostname\":\"test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local\",\"args2_6\":{\"net\":{\"port\":27017},\"replication\":{\"replSetName\":\"test-cluster\"},\"storage\":{\"dbPath\":\"/data\"}},\"featureCompatibilityVersion\":\"4.4\",\"processType\":\"mongod\",\"version\":\"4.4.0\",\"authSchemaVersion\":5},{\"name\":\"test-cluster-2\",\"disabled\":false,\"hostname\":\"test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local\",\"args2_6\":{\"net\":{\"port\":27017},\"replication\":{\"replSetName\":\"test-cluster\"},\"storage\":{\"dbPath\":\"/data\"}},\"featureCompatibilityVersion\":\"4.4\",\"processType\":\"mongod\",\"version\":\"4.4.0\",\"authSchemaVersion\":5}],\"replicaSets\":[{\"_id\":\"test-cluster\",\"members\":[{\"_id\":0,\"host\":\"test-cluster-0\",\"priority\":1,\"arbiterOnly\":false,\"votes\":1},{\"_id\":1,\"host\":\"test-cluster-1\",\"priority\":1,\"arbiterOnly\":false,\"votes\":1},{\"_id\":2,\"host\":\"test-cluster-2\",\"priority\":1,\"arbiterOnly\":false,\"votes\":1}],\"protocolVersion\":\"1\",\"numberArbiters\":0}],\"auth\":{\"usersWanted\":[{\"mechanisms\":[],\"roles\":[{\"role\":\"clusterAdmin\",\"db\":\"admin\"},{\"role\":\"userAdminAnyDatabase\",\"db\":\"admin\"}],\"user\":\"my-user\",\"db\":\"admin\",\"authenticationRestrictions\":[],\"scramSha256Creds\":{\"iterationCount\":15000,\"salt\":\"Y332Vyp9LofUPjyXpiiRUxCWEOqloJue3MJmIg==\",\"serverKey\":\"tGJHZbHWGZognIehgwu2NlOcjkgloM8Bac+SJXSHZ7c=\",\"storedKey\":\"dKZge2hOOBIbR2w0pU+iu4WUhRe+X4IgTFxU4HP7Xlc=\"},\"scramSha1Creds\":{\"iterationCount\":10000,\"salt\":\"F0dO56r+spGOxF6m3veHVQ==\",\"serverKey\":\"hLphtJIAPI18TuYBf8kq0QtBv6o=\",\"storedKey\":\"IMfYa+I63RdY62g5X2FIgNe4XHU=\"}}],\"disabled\":false,\"authoritativeSet\":false,\"autoAuthMechanisms\":[\"SCRAM-SHA-256\"],\"autoAuthMechanism\":\"SCRAM-SHA-256\",\"deploymentAuthMechanisms\":[\"SCRAM-SHA-256\"],\"autoUser\":\"mms-automation\",\"key\":\"y08B4IFvCbzvuFHMafkbc4GwQN2L95+vPs8B5YxpH4TjOxw7WIdeHk1iKLnzicXp03Zf17IFiMGIiqg+KDA1Iz6rRmRHULaqav0Lo2oB3gJwt9ZKeo0pPmQENCxt3SxIBT8Rvi47aLFCKu3vxJAGdyrD5pARAJmou/TlZEdpfOFPvnpkYHgkl00kAMFbZOj91iNhuPl+Ra5/+XWjIEOvtm/rou/UACpXHuijgn2+4hSXlXVguTklPWypMxovmFmUYNHHlqhjtK5EDF9JMR+IQNubpiSfILIsIbmEInco6lUDp+LsqcZdPuUqLL7gLMd3TwJO/IBuoZcd0iuvy6KeD6LFctHkl5sslbNu/cWi5/Ng9kTfUGzt1YlIjwV4qAY6L4blB1XBEA9u/FegKoz5Lxa482GGnCyv22Px9fJvffL5pxxE1mVwyZ4DE545/Ot/fi2mS2VHWjeghQ+fwC2zWlpXQFb7Z7EaVE3841bRkZ9lUfAp41oAYj6osYSuOeGCjF7YCfEC4otMiZbRv/ehXpO/uHnYOYoc9LZols8gqtzqmMn/u6pdP49J+Qv4pawWwEqskqWZ4f0qZd7FelS2z/YF+4XcjZIBQyTgmWZ8ovAo4vDULDNiXR6PaSXzq5rA6ND1e/O4G0HEWjELk7w05xT3i6E=\",\"keyfile\":\"/var/lib/mongodb-mms-automation/authentication/keyfile\",\"keyfileWindows\":\"%SystemDrive%\\\\MMSAutomation\\\\versions\\\\keyfile\",\"autoPwd\":\"9GNdr7wwyX0Rg4nS-Dfr\"},\"tls\":{\"CAFilePath\":\"\",\"clientCertificateMode\":\"OPTIONAL\"},\"mongoDbVersions\":[{\"name\":\"4.4.0\",\"builds\":[{\"platform\":\"linux\",\"url\":\"\",\"gitVersion\":\"\",\"architecture\":\"amd64\",\"flavor\":\"rhel\",\"minOsVersion\":\"\",\"maxOsVersion\":\"\",\"modules\":[]},{\"platform\":\"linux\",\"url\":\"\",\"gitVersion\":\"\",\"architecture\":\"amd64\",\"flavor\":\"ubuntu\",\"minOsVersion\":\"\",\"maxOsVersion\":\"\",\"modules\":[]}]}],\"backupVersions\":[],\"monitoringVersions\":[],\"options\":{\"downloadBase\":\"/var/lib/mongodb-mms-automation\"}}"
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:06+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:data": {
                                                            ".": {},
                                                            "f:cluster-config.json": {}
                                                      },
                                                      "f:metadata": {
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"7edff82e-9821-452f-9f00-6b0248cbf466\"}": {}
                                                            }
                                                      },
                                                      "f:type": {}
                                                },
                                                "manager": "manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:06+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-config",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "mongodbcommunity.mongodb.com/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "MongoDBCommunity",
                                                "name": "test-cluster",
                                                "uid": "7edff82e-9821-452f-9f00-6b0248cbf466"
                                          }
                                    ],
                                    "resource_version": "2617",
                                    "self_link": null,
                                    "uid": "f34bb5aa-e68f-4633-8913-1342685d9f7c"
                              },
                              "string_data": null,
                              "type": "Opaque"
                        },
                        "test-cluster-keyfile": {
                              "api_version": null,
                              "data": {
                                    "keyfile": "y08B4IFvCbzvuFHMafkbc4GwQN2L95+vPs8B5YxpH4TjOxw7WIdeHk1iKLnzicXp03Zf17IFiMGIiqg+KDA1Iz6rRmRHULaqav0Lo2oB3gJwt9ZKeo0pPmQENCxt3SxIBT8Rvi47aLFCKu3vxJAGdyrD5pARAJmou/TlZEdpfOFPvnpkYHgkl00kAMFbZOj91iNhuPl+Ra5/+XWjIEOvtm/rou/UACpXHuijgn2+4hSXlXVguTklPWypMxovmFmUYNHHlqhjtK5EDF9JMR+IQNubpiSfILIsIbmEInco6lUDp+LsqcZdPuUqLL7gLMd3TwJO/IBuoZcd0iuvy6KeD6LFctHkl5sslbNu/cWi5/Ng9kTfUGzt1YlIjwV4qAY6L4blB1XBEA9u/FegKoz5Lxa482GGnCyv22Px9fJvffL5pxxE1mVwyZ4DE545/Ot/fi2mS2VHWjeghQ+fwC2zWlpXQFb7Z7EaVE3841bRkZ9lUfAp41oAYj6osYSuOeGCjF7YCfEC4otMiZbRv/ehXpO/uHnYOYoc9LZols8gqtzqmMn/u6pdP49J+Qv4pawWwEqskqWZ4f0qZd7FelS2z/YF+4XcjZIBQyTgmWZ8ovAo4vDULDNiXR6PaSXzq5rA6ND1e/O4G0HEWjELk7w05xT3i6E="
                              },
                              "immutable": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:06+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:data": {
                                                            ".": {},
                                                            "f:keyfile": {}
                                                      },
                                                      "f:metadata": {
                                                            "f:ownerReferences": {
                                                                  ".": {},
                                                                  "k:{\"uid\":\"7edff82e-9821-452f-9f00-6b0248cbf466\"}": {}
                                                            }
                                                      },
                                                      "f:type": {}
                                                },
                                                "manager": "manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:06+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-keyfile",
                                    "namespace": "mongodb",
                                    "owner_references": [
                                          {
                                                "api_version": "mongodbcommunity.mongodb.com/v1",
                                                "block_owner_deletion": true,
                                                "controller": true,
                                                "kind": "MongoDBCommunity",
                                                "name": "test-cluster",
                                                "uid": "7edff82e-9821-452f-9f00-6b0248cbf466"
                                          }
                                    ],
                                    "resource_version": "2616",
                                    "self_link": null,
                                    "uid": "46d2c9c9-95b1-4a74-a967-cba270750fdb"
                              },
                              "string_data": null,
                              "type": "Opaque"
                        }
                  },
                  "endpoints": {
                        "test-cluster-svc": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": {
                                          "endpoints.kubernetes.io/last-change-trigger-time": "2023-03-25T22:23:10Z"
                                    },
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:22:06+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": {
                                          "app": "test-cluster-svc",
                                          "service.kubernetes.io/headless": ""
                                    },
                                    "managed_fields": [
                                          {
                                                "api_version": "v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:metadata": {
                                                            "f:annotations": {
                                                                  ".": {},
                                                                  "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                                            },
                                                            "f:labels": {
                                                                  ".": {},
                                                                  "f:app": {},
                                                                  "f:service.kubernetes.io/headless": {}
                                                            }
                                                      },
                                                      "f:subsets": {}
                                                },
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "subresource": null,
                                                "time": "2023-03-25T22:22:11+00:00"
                                          }
                                    ],
                                    "name": "test-cluster-svc",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "2851",
                                    "self_link": null,
                                    "uid": "2daf9b92-eb5f-472a-80c3-90730292e8f1"
                              },
                              "subsets": [
                                    {
                                          "addresses": [
                                                {
                                                      "hostname": "test-cluster-2",
                                                      "ip": "10.244.1.9",
                                                      "node_name": "acto-cluster-9-worker3",
                                                      "target_ref": {
                                                            "api_version": null,
                                                            "field_path": null,
                                                            "kind": "Pod",
                                                            "name": "test-cluster-2",
                                                            "namespace": "mongodb",
                                                            "resource_version": "2850",
                                                            "uid": "c3aca22f-f2f0-4428-9010-d2ba1f3b3989"
                                                      }
                                                },
                                                {
                                                      "hostname": "test-cluster-0",
                                                      "ip": "10.244.2.9",
                                                      "node_name": "acto-cluster-9-worker",
                                                      "target_ref": {
                                                            "api_version": null,
                                                            "field_path": null,
                                                            "kind": "Pod",
                                                            "name": "test-cluster-0",
                                                            "namespace": "mongodb",
                                                            "resource_version": "2725",
                                                            "uid": "dc9e2b7b-6d63-4b6a-a141-738c75e1058c"
                                                      }
                                                },
                                                {
                                                      "hostname": "test-cluster-1",
                                                      "ip": "10.244.3.8",
                                                      "node_name": "acto-cluster-9-worker2",
                                                      "target_ref": {
                                                            "api_version": null,
                                                            "field_path": null,
                                                            "kind": "Pod",
                                                            "name": "test-cluster-1",
                                                            "namespace": "mongodb",
                                                            "resource_version": "2786",
                                                            "uid": "241fda24-cfec-4427-800d-66fb312ffc55"
                                                      }
                                                }
                                          ],
                                          "not_ready_addresses": null,
                                          "ports": [
                                                {
                                                      "app_protocol": null,
                                                      "name": "mongodb",
                                                      "port": 27017,
                                                      "protocol": "TCP"
                                                }
                                          ]
                                    }
                              ]
                        }
                  },
                  "job": {},
                  "role": {
                        "mongodb-database": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:49+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "rbac.authorization.k8s.io/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:rules": {}
                                                },
                                                "manager": "kubectl",
                                                "operation": "Apply",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:49+00:00"
                                          }
                                    ],
                                    "name": "mongodb-database",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "739",
                                    "self_link": null,
                                    "uid": "82ce2f60-4c41-401f-81eb-4a38dc6a2880"
                              },
                              "rules": [
                                    {
                                          "api_groups": [
                                                ""
                                          ],
                                          "non_resource_ur_ls": null,
                                          "resource_names": null,
                                          "resources": [
                                                "secrets"
                                          ],
                                          "verbs": [
                                                "get"
                                          ]
                                    },
                                    {
                                          "api_groups": [
                                                ""
                                          ],
                                          "non_resource_ur_ls": null,
                                          "resource_names": null,
                                          "resources": [
                                                "pods"
                                          ],
                                          "verbs": [
                                                "patch",
                                                "delete",
                                                "get"
                                          ]
                                    }
                              ]
                        },
                        "mongodb-kubernetes-operator": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:48+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "rbac.authorization.k8s.io/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:rules": {}
                                                },
                                                "manager": "kubectl",
                                                "operation": "Apply",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:48+00:00"
                                          }
                                    ],
                                    "name": "mongodb-kubernetes-operator",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "729",
                                    "self_link": null,
                                    "uid": "868664cd-3545-4fb5-b601-e247a48fcaf4"
                              },
                              "rules": [
                                    {
                                          "api_groups": [
                                                ""
                                          ],
                                          "non_resource_ur_ls": null,
                                          "resource_names": null,
                                          "resources": [
                                                "pods",
                                                "services",
                                                "configmaps",
                                                "secrets"
                                          ],
                                          "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                          ]
                                    },
                                    {
                                          "api_groups": [
                                                "apps"
                                          ],
                                          "non_resource_ur_ls": null,
                                          "resource_names": null,
                                          "resources": [
                                                "statefulsets"
                                          ],
                                          "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                          ]
                                    },
                                    {
                                          "api_groups": [
                                                "mongodbcommunity.mongodb.com"
                                          ],
                                          "non_resource_ur_ls": null,
                                          "resource_names": null,
                                          "resources": [
                                                "mongodbcommunity",
                                                "mongodbcommunity/status",
                                                "mongodbcommunity/spec",
                                                "mongodbcommunity/finalizers"
                                          ],
                                          "verbs": [
                                                "get",
                                                "patch",
                                                "list",
                                                "update",
                                                "watch"
                                          ]
                                    }
                              ]
                        }
                  },
                  "role_binding": {
                        "mongodb-database": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:48+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "rbac.authorization.k8s.io/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:roleRef": {},
                                                      "f:subjects": {}
                                                },
                                                "manager": "kubectl",
                                                "operation": "Apply",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:48+00:00"
                                          }
                                    ],
                                    "name": "mongodb-database",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "732",
                                    "self_link": null,
                                    "uid": "4a833579-9dd0-4f30-9d68-15ea22401842"
                              },
                              "role_ref": {
                                    "api_group": "rbac.authorization.k8s.io",
                                    "kind": "Role",
                                    "name": "mongodb-database"
                              },
                              "subjects": [
                                    {
                                          "api_group": null,
                                          "kind": "ServiceAccount",
                                          "name": "mongodb-database",
                                          "namespace": null
                                    }
                              ]
                        },
                        "mongodb-kubernetes-operator": {
                              "api_version": null,
                              "kind": null,
                              "metadata": {
                                    "annotations": null,
                                    "cluster_name": null,
                                    "creation_timestamp": "2023-03-25T22:10:48+00:00",
                                    "deletion_grace_period_seconds": null,
                                    "deletion_timestamp": null,
                                    "finalizers": null,
                                    "generate_name": null,
                                    "generation": null,
                                    "labels": null,
                                    "managed_fields": [
                                          {
                                                "api_version": "rbac.authorization.k8s.io/v1",
                                                "fields_type": "FieldsV1",
                                                "fields_v1": {
                                                      "f:roleRef": {},
                                                      "f:subjects": {}
                                                },
                                                "manager": "kubectl",
                                                "operation": "Apply",
                                                "subresource": null,
                                                "time": "2023-03-25T22:10:48+00:00"
                                          }
                                    ],
                                    "name": "mongodb-kubernetes-operator",
                                    "namespace": "mongodb",
                                    "owner_references": null,
                                    "resource_version": "721",
                                    "self_link": null,
                                    "uid": "5e33bc4b-4498-48c1-8b7c-4378fb1bdb22"
                              },
                              "role_ref": {
                                    "api_group": "rbac.authorization.k8s.io",
                                    "kind": "Role",
                                    "name": "mongodb-kubernetes-operator"
                              },
                              "subjects": [
                                    {
                                          "api_group": null,
                                          "kind": "ServiceAccount",
                                          "name": "mongodb-kubernetes-operator",
                                          "namespace": null
                                    }
                              ]
                        }
                  },
                  "custom_resource_spec": {
                        "automationConfig": {
                              "processes": [
                                    {
                                          "disabled": false,
                                          "name": "test-cluster-1"
                                    }
                              ]
                        },
                        "members": 3,
                        "security": {
                              "authentication": {
                                    "ignoreUnknownUsers": true,
                                    "modes": [
                                          "SCRAM-SHA-256"
                                    ]
                              }
                        },
                        "statefulSet": {
                              "spec": {
                                    "template": {
                                          "spec": {
                                                "containers": [
                                                      {
                                                            "name": "mongod",
                                                            "resources": {
                                                                  "limits": {
                                                                        "cpu": "1",
                                                                        "memory": "1000M"
                                                                  },
                                                                  "requests": {
                                                                        "cpu": "1",
                                                                        "memory": "1000M"
                                                                  }
                                                            }
                                                      },
                                                      {
                                                            "name": "mongodb-agent",
                                                            "resources": {
                                                                  "limits": {
                                                                        "cpu": "1",
                                                                        "memory": "1000M"
                                                                  },
                                                                  "requests": {
                                                                        "cpu": "1",
                                                                        "memory": "1000M"
                                                                  }
                                                            }
                                                      }
                                                ]
                                          }
                                    }
                              }
                        },
                        "type": "ReplicaSet",
                        "users": [
                              {
                                    "db": "admin",
                                    "name": "my-user",
                                    "passwordSecretRef": {
                                          "name": "my-user-password"
                                    },
                                    "roles": [
                                          {
                                                "db": "admin",
                                                "name": "clusterAdmin"
                                          },
                                          {
                                                "db": "admin",
                                                "name": "userAdminAnyDatabase"
                                          }
                                    ],
                                    "scramCredentialsSecretName": "my-scram"
                              }
                        ],
                        "version": "4.4.0"
                  },
                  "custom_resource_status": {
                        "currentMongoDBMembers": 3,
                        "currentStatefulSetReplicas": 3,
                        "mongoUri": "mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster",
                        "phase": "Running",
                        "version": "4.4.0"
                  }
            },
            "operator_log": [
                  "Running ./manager",
                  "2023-03-25T22:11:10.594Z\tINFO\tmanager/main.go:74\tWatching namespace: mongodb",
                  "2023-03-25T22:11:10.702Z\tINFO\tmanager/main.go:91\tRegistering Components.",
                  "2023-03-25T22:11:10.703Z\tINFO\tmanager/main.go:104\tStarting the Cmd.",
                  "2023-03-25T22:11:10.852Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:10.852Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:10.852Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:10.956Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:10.957Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:10.958Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.060Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.068Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:11:11.068Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.094Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:11:11.094Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.094Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.094Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.094Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.094Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.094Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:11:11.095Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.095Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.095Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.095Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:11.095Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:11:21.111Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.111Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.111Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.112Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.112Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.112Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.112Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.138Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:11:21.138Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.162Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:11:21.162Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.162Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.162Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.162Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.162Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.163Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:11:21.163Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.163Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.163Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.163Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:21.163Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:11:31.179Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.179Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.179Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.179Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.179Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.179Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.180Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.203Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:11:31.203Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.231Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.232Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:31.232Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:11:41.247Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.247Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.247Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.248Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.248Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.248Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.248Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.279Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:11:41.280Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.304Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.305Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:41.305Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:11:51.321Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.321Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.321Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.321Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.321Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.321Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.321Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.345Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:11:51.345Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.376Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:11:51.376Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.376Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.376Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.376Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.376Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.376Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:11:51.377Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.377Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.377Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.377Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:11:51.377Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:12:01.393Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.393Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.393Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.393Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.393Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.393Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.394Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.417Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:12:01.418Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.440Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:12:01.440Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.440Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.440Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.440Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.440Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.441Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:12:01.441Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.441Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.441Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.441Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:01.441Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:12:11.454Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.454Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.454Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.455Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.455Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.455Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.455Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.489Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:12:11.489Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.518Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:12:11.519Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.519Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.519Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.519Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.519Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.519Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:12:11.520Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.520Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.520Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.520Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:11.520Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:12:21.535Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.536Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.536Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.536Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.536Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.536Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.536Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.567Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:12:21.567Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.611Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:12:21.612Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.612Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.612Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.612Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.612Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.612Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:12:21.613Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.613Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.613Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.613Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:21.613Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:12:31.630Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.631Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.631Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.633Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.634Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.634Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.634Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.662Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:12:31.663Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.863Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:12:31.865Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.866Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.866Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.866Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.866Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.866Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:12:31.870Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.870Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.871Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.871Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:31.871Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:12:41.905Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.906Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.906Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.909Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.909Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.909Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.910Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.924Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:12:41.925Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.952Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:12:41.952Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.952Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.952Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.952Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.952Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.952Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:12:41.953Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.953Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.953Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.953Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:41.953Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:12:51.591Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.592Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.592Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.594Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.594Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.594Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.595Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.606Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:12:51.606Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.813Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:12:51.815Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.816Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.816Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.816Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.816Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.817Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:12:51.820Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.820Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.821Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.821Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.821Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:12:51.972Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.972Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.972Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.973Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.973Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.973Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.973Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:51.983Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:12:51.983Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.011Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:12:52.012Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.012Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.012Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.012Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.012Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.012Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:12:52.012Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.012Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.013Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.013Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:12:52.013Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:13:02.025Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.026Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.026Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.026Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.026Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.026Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.027Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.039Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:13:02.039Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.076Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:13:02.077Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.077Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.078Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.078Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.078Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.078Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:13:02.078Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.078Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.078Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.078Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:02.078Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:13:12.094Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.094Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.095Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.096Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.096Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.096Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.096Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.114Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:13:12.116Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.148Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:13:12.149Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.149Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.149Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.149Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.149Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.149Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:13:12.150Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.150Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.150Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.150Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:12.150Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:13:22.169Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.169Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.169Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.170Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.170Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.170Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.170Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.186Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:13:22.186Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.217Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:13:22.218Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.221Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.221Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.221Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.221Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.221Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:13:22.222Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.222Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.223Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.223Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:22.223Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:13:32.257Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.257Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.258Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.261Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.261Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.261Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.262Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.276Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:13:32.277Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.486Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:13:32.488Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.489Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.489Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.489Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.489Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.490Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:13:32.493Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.493Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.494Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.494Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:32.494Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:13:42.514Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.514Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.514Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.516Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.516Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.516Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.516Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.542Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:13:42.543Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.578Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:13:42.579Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.580Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.580Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.580Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.580Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.580Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:13:42.581Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.581Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.581Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.581Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:42.581Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:13:52.641Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.641Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.641Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.642Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.642Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.642Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.642Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.657Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:13:52.657Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.837Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:13:52.839Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.840Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.840Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.840Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.840Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.840Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:13:52.848Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.848Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.849Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.851Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:13:52.851Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:14:02.868Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.868Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.868Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.868Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.868Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.868Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.868Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.884Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:14:02.884Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.911Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.912Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:02.912Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:14:12.925Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.925Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.925Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.925Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.925Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.926Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.926Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.944Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:14:12.944Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.978Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:14:12.979Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.979Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.980Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.980Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.980Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.980Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:14:12.981Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.981Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.981Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.981Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:12.981Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:14:23.013Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.013Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.013Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.013Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.014Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.014Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.014Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.032Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:14:23.032Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.065Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:14:23.065Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.065Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.065Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.065Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.065Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.065Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:14:23.066Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.066Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.066Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.066Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:23.066Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:14:33.085Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.085Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.085Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.086Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.086Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.086Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.086Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.100Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:14:33.100Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.129Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:14:33.129Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.130Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.130Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.130Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.130Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.130Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:14:33.130Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.130Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.130Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.131Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:33.131Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:14:38.826Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.826Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.826Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.826Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.826Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.827Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.827Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.837Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:14:38.837Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.877Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:14:38.878Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.878Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.879Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.879Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.879Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.879Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:14:38.881Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.881Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.881Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.881Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:38.881Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:14:43.146Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.147Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.147Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.147Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.147Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.147Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.148Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.162Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:14:43.162Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.309Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:14:43.312Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.312Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.313Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.313Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.313Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.313Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:14:43.318Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.318Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.319Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.319Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:43.319Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:14:53.344Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.345Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.345Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.347Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.348Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.348Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.348Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.369Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:14:53.369Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.396Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:14:53.396Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.396Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.396Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.396Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.396Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.396Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:14:53.397Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.397Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.397Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.397Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:14:53.397Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:15:03.416Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.416Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.416Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.417Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.417Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.417Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.417Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.437Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:15:03.437Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.473Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:15:03.473Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.474Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.474Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.474Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.474Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.474Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:15:03.474Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.474Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.474Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.475Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:03.475Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:15:13.490Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.490Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.490Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.490Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.490Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.490Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.490Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.514Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:15:13.514Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.542Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:15:13.542Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.542Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.542Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.542Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.542Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.542Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:15:13.543Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.543Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.543Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.543Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:13.543Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:15:23.569Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.569Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.569Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.569Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.569Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.569Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.570Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.596Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:15:23.596Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.632Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:15:23.632Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.632Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.632Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.632Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.633Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.633Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:15:23.633Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.633Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.633Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.633Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:23.634Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:15:33.653Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.653Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.654Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.656Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.657Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.657Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.658Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.676Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:15:33.677Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.858Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:15:33.861Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.861Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.862Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.862Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.862Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.862Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:15:33.866Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.867Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.867Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.868Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:33.868Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:15:43.882Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.882Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.882Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.883Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.883Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.883Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.883Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.902Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:15:43.902Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.926Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:15:43.927Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.927Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.927Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.927Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.927Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.927Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:15:43.928Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.928Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.928Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.928Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:43.928Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:15:53.940Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.940Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.940Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.940Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.940Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.941Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.941Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.953Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:15:53.953Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.980Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:15:53.980Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.980Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.980Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.980Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.980Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.981Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:15:53.981Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.981Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.981Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.981Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:15:53.981Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:16:03.996Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:03.996Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:03.997Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:03.997Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:03.997Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:03.997Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:03.997Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.014Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:16:04.014Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.042Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:16:04.043Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.043Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.043Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.043Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.043Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.043Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:16:04.043Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.044Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.044Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.044Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:04.044Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:16:14.057Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.058Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.058Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.060Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.061Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.061Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.088Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:16:14.089Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.174Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:16:14.174Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.174Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.174Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.174Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.174Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:16:14.175Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.175Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.175Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:14.175Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:16:17.501Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.502Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.502Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.504Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.505Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.511Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:16:17.511Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.537Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:16:17.537Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.537Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.538Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.538Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:16:17.538Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.538Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:17.538Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:16:24.190Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.190Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.190Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.190Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.206Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:16:24.207Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.254Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:16:24.256Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.256Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.256Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:16:24.259Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.259Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.260Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.273Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.288Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.289Z\tDEBUG\tcontrollers/replica_set_controller.go:218\tResetting StatefulSet UpdateStrategy to RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:24.401Z\tINFO\tcontrollers/replica_set_controller.go:268\tSuccessfully finished reconciliation, MongoDB.Spec: {Members:3 Type:ReplicaSet Version:4.4.0 Arbiters:0 FeatureCompatibilityVersion: ReplicaSetHorizons:[] Security:{Authentication:{Modes:[SCRAM] IgnoreUnknownUsers:0xc000888b1c} TLS:{Enabled:false Optional:false CertificateKeySecret:{Name:} CaCertificateSecret:<nil> CaConfigMap:<nil>} Roles:[]} Users:[{Name:my-user DB: PasswordSecretRef:{Name:my-user-password Key:} Roles:[{DB:admin Name:clusterAdmin} {DB:admin Name:userAdminAnyDatabase}] ScramCredentialsSecretName:my-scram ConnectionStringSecretName:}] StatefulSetConfiguration:{SpecWrapper:{Spec:{Replicas:<nil> Selector:nil Template:{ObjectMeta:{Name: GenerateName: Namespace: SelfLink: UID: ResourceVersion: Generation:0 CreationTimestamp:0001-01-01 00:00:00 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[]} Spec:{Volumes:[] InitContainers:[] Containers:[{Name:mongod Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false} {Name:mongodb-agent Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false}] EphemeralContainers:[] RestartPolicy: TerminationGracePeriodSeconds:<nil> ActiveDeadlineSeconds:<nil> DNSPolicy: NodeSelector:map[] ServiceAccountName: DeprecatedServiceAccount: AutomountServiceAccountToken:<nil> NodeName: HostNetwork:false HostPID:false HostIPC:false ShareProcessNamespace:<nil> SecurityContext:nil ImagePullSecrets:[] Hostname: Subdomain: Affinity:nil SchedulerName: Tolerations:[] HostAliases:[] PriorityClassName: Priority:<nil> DNSConfig:nil ReadinessGates:[] RuntimeClassName:<nil> EnableServiceLinks:<nil> PreemptionPolicy:<nil> Overhead:map[] TopologySpreadConstraints:[] SetHostnameAsFQDN:<nil> OS:nil}} VolumeClaimTemplates:[] ServiceName: PodManagementPolicy: UpdateStrategy:{Type: RollingUpdate:nil} RevisionHistoryLimit:<nil> MinReadySeconds:0 PersistentVolumeClaimRetentionPolicy:nil}}} AdditionalMongodConfig:{Object:map[]} AutomationConfigOverride:0xc0001164e0 Prometheus:<nil>}, MongoDB.Status: {MongoURI:mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster Phase:Running Version:4.4.0 CurrentStatefulSetReplicas:3 CurrentMongoDBMembers:3 CurrentStatefulSetArbitersReplicas:0 CurrentMongoDBArbiters:0 Message:}\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.245Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.245Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.246Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.246Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.247Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.248Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.248Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.266Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"created\"}",
                  "2023-03-25T22:16:54.268Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.432Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:16:54.446Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.447Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.448Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.448Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.448Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.448Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:16:54.455Z\tDEBUG\tcontrollers/replica_set_controller.go:377\tThe existing StatefulSet did not have the readiness probe init container, skipping pod annotation check.\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.455Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.466Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.479Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.480Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:16:54.502Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.503Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.503Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.505Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.544Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:16:54.545Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.736Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:16:54.738Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.739Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.739Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:16:54.742Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.743Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.743Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.757Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.803Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.804Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:16:54.849Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.850Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.850Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.853Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:54.871Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:16:54.872Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:55.040Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:16:55.042Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:55.043Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:55.043Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:16:55.047Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:55.048Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:55.048Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:55.066Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:55.085Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:55.085Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:16:57.261Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.261Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.261Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.262Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.262Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.262Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.262Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.277Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:16:57.278Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.305Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:16:57.305Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.305Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.306Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.306Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.306Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.306Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:16:57.306Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.306Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.306Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.306Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:16:57.306Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:17:05.103Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.103Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.103Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.104Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.104Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.104Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.104Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.125Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:17:05.125Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.209Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:17:05.211Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.211Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.211Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.212Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.212Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.212Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:17:05.215Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.215Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.216Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.216Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:05.216Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:17:15.237Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.237Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.237Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.239Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.239Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.240Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.240Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.273Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:17:15.274Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.442Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:17:15.444Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.444Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.444Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.444Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.444Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.444Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:17:15.448Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.448Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.448Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.448Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:15.448Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:17:17.893Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.893Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.893Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.895Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.896Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.896Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.921Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:17:17.921Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.949Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:17:17.950Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.950Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.950Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.950Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.950Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:17:17.951Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.951Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.951Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:17.951Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:17:25.471Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.472Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.472Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.472Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.472Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.472Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.496Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:17:25.497Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.519Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:17:25.520Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.520Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.520Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.520Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.520Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:17:25.520Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.520Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.520Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:25.520Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:17:35.544Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.544Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.544Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.544Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.544Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.544Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.562Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:17:35.563Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.582Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:17:35.583Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.583Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.583Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.583Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.583Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:17:35.583Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.583Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.583Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:35.583Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:17:38.026Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.026Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.026Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.027Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.027Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.033Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:17:38.033Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.060Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:17:38.061Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.061Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.061Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.061Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:17:38.062Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.062Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:38.062Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:17:45.594Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.594Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.594Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.594Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.595Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.621Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:17:45.622Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.646Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:17:45.647Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.647Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.647Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.647Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:17:45.647Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.647Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:45.647Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:17:55.666Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.666Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.666Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.668Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.669Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.697Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:17:55.698Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.728Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:17:55.729Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.729Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.729Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.729Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:17:55.729Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.729Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:55.729Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:17:58.514Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.514Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.514Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.515Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.521Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:17:58.521Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.543Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:17:58.544Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.544Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.544Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:17:58.544Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.544Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.544Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.556Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.569Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.571Z\tDEBUG\tcontrollers/replica_set_controller.go:218\tResetting StatefulSet UpdateStrategy to RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:17:58.618Z\tINFO\tcontrollers/replica_set_controller.go:268\tSuccessfully finished reconciliation, MongoDB.Spec: {Members:3 Type:ReplicaSet Version:4.4.0 Arbiters:0 FeatureCompatibilityVersion: ReplicaSetHorizons:[] Security:{Authentication:{Modes:[SCRAM] IgnoreUnknownUsers:0xc00098e4fc} TLS:{Enabled:false Optional:false CertificateKeySecret:{Name:} CaCertificateSecret:<nil> CaConfigMap:<nil>} Roles:[{Role:ACTOKEY DB:ACTOKEY Privileges:[{Resource:{DB:<nil> Collection:<nil> Cluster:false AnyResource:false} Actions:[ACTOKEY ACTOKEY]}] Roles:[] AuthenticationRestrictions:[]}]} Users:[{Name:my-user DB:admin PasswordSecretRef:{Name:my-user-password Key:} Roles:[{DB:admin Name:clusterAdmin} {DB:admin Name:userAdminAnyDatabase}] ScramCredentialsSecretName:my-scram ConnectionStringSecretName:}] StatefulSetConfiguration:{SpecWrapper:{Spec:{Replicas:<nil> Selector:nil Template:{ObjectMeta:{Name: GenerateName: Namespace: SelfLink: UID: ResourceVersion: Generation:0 CreationTimestamp:0001-01-01 00:00:00 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[]} Spec:{Volumes:[] InitContainers:[] Containers:[{Name:mongod Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false} {Name:mongodb-agent Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false}] EphemeralContainers:[] RestartPolicy: TerminationGracePeriodSeconds:<nil> ActiveDeadlineSeconds:<nil> DNSPolicy: NodeSelector:map[] ServiceAccountName: DeprecatedServiceAccount: AutomountServiceAccountToken:<nil> NodeName: HostNetwork:false HostPID:false HostIPC:false ShareProcessNamespace:<nil> SecurityContext:nil ImagePullSecrets:[] Hostname: Subdomain: Affinity:nil SchedulerName: Tolerations:[] HostAliases:[] PriorityClassName: Priority:<nil> DNSConfig:nil ReadinessGates:[] RuntimeClassName:<nil> EnableServiceLinks:<nil> PreemptionPolicy:<nil> Overhead:map[] TopologySpreadConstraints:[] SetHostnameAsFQDN:<nil> OS:nil}} VolumeClaimTemplates:[] ServiceName: PodManagementPolicy: UpdateStrategy:{Type: RollingUpdate:nil} RevisionHistoryLimit:<nil> MinReadySeconds:0 PersistentVolumeClaimRetentionPolicy:nil}}} AdditionalMongodConfig:{Object:map[]} AutomationConfigOverride:0xc000504810 Prometheus:<nil>}, MongoDB.Status: {MongoURI:mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster Phase:Running Version:4.4.0 CurrentStatefulSetReplicas:3 CurrentMongoDBMembers:3 CurrentStatefulSetArbitersReplicas:0 CurrentMongoDBArbiters:0 Message:}\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.746Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.746Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.746Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.747Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.772Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:18:05.772Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.798Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:18:05.799Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.799Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.799Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:18:05.799Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.799Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.799Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.813Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.821Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.821Z\tDEBUG\tcontrollers/replica_set_controller.go:218\tResetting StatefulSet UpdateStrategy to RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:05.852Z\tINFO\tcontrollers/replica_set_controller.go:268\tSuccessfully finished reconciliation, MongoDB.Spec: {Members:3 Type:ReplicaSet Version:4.4.0 Arbiters:0 FeatureCompatibilityVersion: ReplicaSetHorizons:[] Security:{Authentication:{Modes:[SCRAM] IgnoreUnknownUsers:0xc000040314} TLS:{Enabled:false Optional:false CertificateKeySecret:{Name:} CaCertificateSecret:<nil> CaConfigMap:<nil>} Roles:[{Role:ACTOKEY DB:ACTOKEY Privileges:[{Resource:{DB:<nil> Collection:<nil> Cluster:false AnyResource:false} Actions:[ACTOKEY ACTOKEY]}] Roles:[] AuthenticationRestrictions:[]}]} Users:[{Name:my-user DB:admin PasswordSecretRef:{Name:my-user-password Key:} Roles:[{DB:admin Name:clusterAdmin} {DB:admin Name:userAdminAnyDatabase}] ScramCredentialsSecretName:my-scram ConnectionStringSecretName:}] StatefulSetConfiguration:{SpecWrapper:{Spec:{Replicas:<nil> Selector:nil Template:{ObjectMeta:{Name: GenerateName: Namespace: SelfLink: UID: ResourceVersion: Generation:0 CreationTimestamp:0001-01-01 00:00:00 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[]} Spec:{Volumes:[] InitContainers:[] Containers:[{Name:mongod Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false} {Name:mongodb-agent Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false}] EphemeralContainers:[] RestartPolicy: TerminationGracePeriodSeconds:<nil> ActiveDeadlineSeconds:<nil> DNSPolicy: NodeSelector:map[] ServiceAccountName: DeprecatedServiceAccount: AutomountServiceAccountToken:<nil> NodeName: HostNetwork:false HostPID:false HostIPC:false ShareProcessNamespace:<nil> SecurityContext:nil ImagePullSecrets:[] Hostname: Subdomain: Affinity:nil SchedulerName: Tolerations:[] HostAliases:[] PriorityClassName: Priority:<nil> DNSConfig:nil ReadinessGates:[] RuntimeClassName:<nil> EnableServiceLinks:<nil> PreemptionPolicy:<nil> Overhead:map[] TopologySpreadConstraints:[] SetHostnameAsFQDN:<nil> OS:nil}} VolumeClaimTemplates:[] ServiceName: PodManagementPolicy: UpdateStrategy:{Type: RollingUpdate:nil} RevisionHistoryLimit:<nil> MinReadySeconds:0 PersistentVolumeClaimRetentionPolicy:nil}}} AdditionalMongodConfig:{Object:map[]} AutomationConfigOverride:0xc000116348 Prometheus:<nil>}, MongoDB.Status: {MongoURI:mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster Phase:Running Version:4.4.0 CurrentStatefulSetReplicas:3 CurrentMongoDBMembers:3 CurrentStatefulSetArbitersReplicas:0 CurrentMongoDBArbiters:0 Message:}\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.151Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.151Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.151Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.151Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.151Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.151Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.151Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.179Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"created\"}",
                  "2023-03-25T22:18:36.180Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.201Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:18:36.209Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.209Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.209Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.209Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.209Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.209Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:18:36.225Z\tDEBUG\tcontrollers/replica_set_controller.go:377\tThe existing StatefulSet did not have the readiness probe init container, skipping pod annotation check.\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.225Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.253Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.269Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.269Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:18:36.282Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.282Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.282Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.282Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.305Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:18:36.305Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.329Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:18:36.330Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.330Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.330Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:18:36.330Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.330Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.330Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.364Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.401Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.401Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:18:36.413Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.413Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.413Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.414Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.431Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:18:36.431Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.453Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:18:36.454Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.454Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.454Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:18:36.454Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.454Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.454Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.489Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.524Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.524Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:18:36.566Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.566Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.567Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.567Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.585Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:18:36.585Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.614Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:18:36.614Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.614Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.614Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:18:36.615Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.615Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.615Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.649Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.657Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:36.657Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:18:46.567Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.567Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.567Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.568Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.568Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.568Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.593Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:18:46.594Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.621Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:18:46.621Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.621Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.621Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.621Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.621Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.621Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:18:46.622Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.622Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.622Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.622Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.622Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.629Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.638Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.638Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:18:46.919Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.919Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.919Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.920Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.920Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.920Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.920Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.926Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:18:46.926Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.950Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:18:46.950Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.950Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.950Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.950Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.950Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.951Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:18:46.951Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.951Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.951Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.951Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:46.951Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:18:56.659Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.659Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.659Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.660Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.660Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.660Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.660Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.678Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:18:56.679Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.702Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:18:56.702Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.702Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.702Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.702Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.702Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.702Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:18:56.703Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.703Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.703Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.703Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:18:56.703Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:19:06.719Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.719Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.719Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.719Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.719Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.719Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.719Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.746Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:19:06.746Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.771Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:19:06.771Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.771Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.771Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.771Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.771Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.771Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:19:06.772Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.772Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.772Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.772Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:06.772Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:19:07.422Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.422Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.423Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.425Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.425Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.425Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.443Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:19:07.443Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.468Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:19:07.468Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.468Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.468Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.468Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.468Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:19:07.469Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.469Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.469Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:07.469Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:19:16.786Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.786Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.786Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.787Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.787Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.787Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.814Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:19:16.814Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.886Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:19:16.888Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.889Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.889Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.889Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.889Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:19:16.892Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.893Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.893Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:16.893Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:19:26.916Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:26.916Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:26.916Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:26.918Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:26.918Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:26.919Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:26.950Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:19:26.950Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.123Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:19:27.125Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.126Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.126Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.126Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.126Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:19:27.129Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.129Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.129Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.130Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:19:27.936Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.937Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.937Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.937Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.937Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.947Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:19:27.948Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.967Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:19:27.968Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.968Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.968Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.968Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:19:27.968Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.968Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:27.968Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:19:37.149Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.149Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.149Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.150Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.150Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.159Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:19:37.159Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.183Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:19:37.183Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.183Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.183Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.183Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:19:37.184Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.184Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:37.184Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:19:47.199Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.199Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.199Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.200Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.200Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.207Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:19:47.207Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.234Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:19:47.235Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.235Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.235Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.235Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:19:47.236Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.236Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:47.236Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:19:48.095Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.095Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.095Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.096Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.101Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:19:48.101Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.127Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:19:48.128Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.128Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.128Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:19:48.128Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.128Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.128Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.137Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.146Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.146Z\tDEBUG\tcontrollers/replica_set_controller.go:218\tResetting StatefulSet UpdateStrategy to RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:48.175Z\tINFO\tcontrollers/replica_set_controller.go:268\tSuccessfully finished reconciliation, MongoDB.Spec: {Members:3 Type:ReplicaSet Version:4.4.0 Arbiters:0 FeatureCompatibilityVersion: ReplicaSetHorizons:[] Security:{Authentication:{Modes:[SCRAM] IgnoreUnknownUsers:0xc00068c144} TLS:{Enabled:false Optional:false CertificateKeySecret:{Name:} CaCertificateSecret:<nil> CaConfigMap:<nil>} Roles:[{Role:ACTOKEY DB: Privileges:[{Resource:{DB:<nil> Collection:<nil> Cluster:false AnyResource:false} Actions:[]}] Roles:[] AuthenticationRestrictions:[]}]} Users:[{Name:my-user DB:admin PasswordSecretRef:{Name:my-user-password Key:} Roles:[{DB:admin Name:clusterAdmin} {DB:admin Name:userAdminAnyDatabase}] ScramCredentialsSecretName:my-scram ConnectionStringSecretName:}] StatefulSetConfiguration:{SpecWrapper:{Spec:{Replicas:<nil> Selector:nil Template:{ObjectMeta:{Name: GenerateName: Namespace: SelfLink: UID: ResourceVersion: Generation:0 CreationTimestamp:0001-01-01 00:00:00 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[]} Spec:{Volumes:[] InitContainers:[] Containers:[{Name:mongod Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false} {Name:mongodb-agent Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false}] EphemeralContainers:[] RestartPolicy: TerminationGracePeriodSeconds:<nil> ActiveDeadlineSeconds:<nil> DNSPolicy: NodeSelector:map[] ServiceAccountName: DeprecatedServiceAccount: AutomountServiceAccountToken:<nil> NodeName: HostNetwork:false HostPID:false HostIPC:false ShareProcessNamespace:<nil> SecurityContext:nil ImagePullSecrets:[] Hostname: Subdomain: Affinity:nil SchedulerName: Tolerations:[] HostAliases:[] PriorityClassName: Priority:<nil> DNSConfig:nil ReadinessGates:[] RuntimeClassName:<nil> EnableServiceLinks:<nil> PreemptionPolicy:<nil> Overhead:map[] TopologySpreadConstraints:[] SetHostnameAsFQDN:<nil> OS:nil}} VolumeClaimTemplates:[] ServiceName: PodManagementPolicy: UpdateStrategy:{Type: RollingUpdate:nil} RevisionHistoryLimit:<nil> MinReadySeconds:0 PersistentVolumeClaimRetentionPolicy:nil}}} AdditionalMongodConfig:{Object:map[]} AutomationConfigOverride:0xc00000c138 Prometheus:<nil>}, MongoDB.Status: {MongoURI:mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster Phase:Running Version:4.4.0 CurrentStatefulSetReplicas:3 CurrentMongoDBMembers:3 CurrentStatefulSetArbitersReplicas:0 CurrentMongoDBArbiters:0 Message:}\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.252Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.252Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.253Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.255Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.280Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:19:57.281Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.436Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:19:57.438Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.438Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.439Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:19:57.442Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.444Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.444Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.458Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.468Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.468Z\tDEBUG\tcontrollers/replica_set_controller.go:218\tResetting StatefulSet UpdateStrategy to RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:19:57.514Z\tINFO\tcontrollers/replica_set_controller.go:268\tSuccessfully finished reconciliation, MongoDB.Spec: {Members:3 Type:ReplicaSet Version:4.4.0 Arbiters:0 FeatureCompatibilityVersion: ReplicaSetHorizons:[] Security:{Authentication:{Modes:[SCRAM] IgnoreUnknownUsers:0xc00059043c} TLS:{Enabled:false Optional:false CertificateKeySecret:{Name:} CaCertificateSecret:<nil> CaConfigMap:<nil>} Roles:[{Role:ACTOKEY DB: Privileges:[{Resource:{DB:<nil> Collection:<nil> Cluster:false AnyResource:false} Actions:[]}] Roles:[] AuthenticationRestrictions:[]}]} Users:[{Name:my-user DB:admin PasswordSecretRef:{Name:my-user-password Key:} Roles:[{DB:admin Name:clusterAdmin} {DB:admin Name:userAdminAnyDatabase}] ScramCredentialsSecretName:my-scram ConnectionStringSecretName:}] StatefulSetConfiguration:{SpecWrapper:{Spec:{Replicas:<nil> Selector:nil Template:{ObjectMeta:{Name: GenerateName: Namespace: SelfLink: UID: ResourceVersion: Generation:0 CreationTimestamp:0001-01-01 00:00:00 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[]} Spec:{Volumes:[] InitContainers:[] Containers:[{Name:mongod Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false} {Name:mongodb-agent Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false}] EphemeralContainers:[] RestartPolicy: TerminationGracePeriodSeconds:<nil> ActiveDeadlineSeconds:<nil> DNSPolicy: NodeSelector:map[] ServiceAccountName: DeprecatedServiceAccount: AutomountServiceAccountToken:<nil> NodeName: HostNetwork:false HostPID:false HostIPC:false ShareProcessNamespace:<nil> SecurityContext:nil ImagePullSecrets:[] Hostname: Subdomain: Affinity:nil SchedulerName: Tolerations:[] HostAliases:[] PriorityClassName: Priority:<nil> DNSConfig:nil ReadinessGates:[] RuntimeClassName:<nil> EnableServiceLinks:<nil> PreemptionPolicy:<nil> Overhead:map[] TopologySpreadConstraints:[] SetHostnameAsFQDN:<nil> OS:nil}} VolumeClaimTemplates:[] ServiceName: PodManagementPolicy: UpdateStrategy:{Type: RollingUpdate:nil} RevisionHistoryLimit:<nil> MinReadySeconds:0 PersistentVolumeClaimRetentionPolicy:nil}}} AdditionalMongodConfig:{Object:map[]} AutomationConfigOverride:0xc000884270 Prometheus:<nil>}, MongoDB.Status: {MongoURI:mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster Phase:Running Version:4.4.0 CurrentStatefulSetReplicas:3 CurrentMongoDBMembers:3 CurrentStatefulSetArbitersReplicas:0 CurrentMongoDBArbiters:0 Message:}\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.911Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.911Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.911Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.911Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.911Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.912Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.912Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.921Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"created\"}",
                  "2023-03-25T22:20:20.922Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.948Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:20:20.958Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.958Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.958Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.958Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.958Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.958Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:20:20.963Z\tDEBUG\tcontrollers/replica_set_controller.go:377\tThe existing StatefulSet did not have the readiness probe init container, skipping pod annotation check.\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.963Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.972Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.980Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.980Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:20:20.996Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.996Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.996Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:20.996Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.002Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:20:21.002Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.035Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:20:21.035Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.035Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.035Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:20:21.036Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.036Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.036Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.046Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.059Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.059Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:20:21.068Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.068Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.068Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.068Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.076Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:20:21.076Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.102Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:20:21.104Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.104Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.104Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:20:21.106Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.106Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.106Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.113Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.121Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.121Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:20:21.132Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.132Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.132Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.133Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.137Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:20:21.137Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.160Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:20:21.161Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.161Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.161Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:20:21.161Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.161Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.161Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.171Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.178Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.178Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:20:21.744Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.744Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.744Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.744Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.744Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.750Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:20:21.751Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.775Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:20:21.775Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.775Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.775Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.775Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:20:21.775Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.776Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:21.776Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:20:31.133Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.133Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.133Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.134Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.134Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.134Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.134Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.158Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:20:31.158Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:31.181Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:20:41.232Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.232Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.233Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.233Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.233Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.233Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.233Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.247Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:20:41.248Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.270Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:20:41.271Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.271Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.271Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.271Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.271Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.271Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:20:41.272Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.272Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.272Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.272Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:41.272Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:20:51.287Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.287Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.287Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.288Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.288Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.288Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.288Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.301Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:20:51.302Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.328Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:20:51.329Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.329Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.329Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.329Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.329Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.329Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:20:51.330Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.330Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.330Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.330Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.330Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:20:51.949Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.949Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.949Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.949Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.949Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.950Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.955Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:20:51.956Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.987Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:20:51.987Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.987Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.987Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.987Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.987Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:20:51.988Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.988Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.988Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:20:51.988Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:21:01.346Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.346Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.346Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.347Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.347Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.347Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.358Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:21:01.358Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.387Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:21:01.388Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.388Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.388Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.388Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.388Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:21:01.388Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.389Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.389Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:01.389Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:21:11.405Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.405Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.406Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.406Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.406Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.406Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.416Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:21:11.416Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.437Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:21:11.437Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.437Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.437Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.437Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.438Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:21:11.438Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.438Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.438Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:11.438Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:21:12.474Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.474Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.474Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.475Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.475Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.484Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:21:12.485Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.517Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:21:12.518Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.518Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.518Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.518Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:21:12.518Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.518Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:12.518Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:21:21.456Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.456Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.456Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.456Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.456Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.468Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:21:21.468Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.492Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:21:21.492Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.492Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.492Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.492Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:21:21.492Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.493Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:21.493Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:21:31.507Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.507Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.507Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.508Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.508Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.520Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:21:31.520Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.548Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:21:31.549Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.549Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.549Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.549Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:21:31.549Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.550Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:31.550Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:21:32.805Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.805Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.805Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.805Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.812Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:21:32.812Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.836Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:21:32.836Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.836Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.836Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:21:32.836Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.837Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.837Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.845Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.862Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.862Z\tDEBUG\tcontrollers/replica_set_controller.go:218\tResetting StatefulSet UpdateStrategy to RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:32.894Z\tINFO\tcontrollers/replica_set_controller.go:268\tSuccessfully finished reconciliation, MongoDB.Spec: {Members:3 Type:ReplicaSet Version:4.4.0 Arbiters:0 FeatureCompatibilityVersion: ReplicaSetHorizons:[] Security:{Authentication:{Modes:[SCRAM] IgnoreUnknownUsers:0xc000888edc} TLS:{Enabled:false Optional:false CertificateKeySecret:{Name:} CaCertificateSecret:<nil> CaConfigMap:<nil>} Roles:[]} Users:[{Name:my-user DB:admin PasswordSecretRef:{Name:my-user-password Key:} Roles:[{DB: Name:clusterAdmin} {DB:admin Name:userAdminAnyDatabase}] ScramCredentialsSecretName:my-scram ConnectionStringSecretName:}] StatefulSetConfiguration:{SpecWrapper:{Spec:{Replicas:<nil> Selector:nil Template:{ObjectMeta:{Name: GenerateName: Namespace: SelfLink: UID: ResourceVersion: Generation:0 CreationTimestamp:0001-01-01 00:00:00 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[]} Spec:{Volumes:[] InitContainers:[] Containers:[{Name:mongod Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false} {Name:mongodb-agent Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false}] EphemeralContainers:[] RestartPolicy: TerminationGracePeriodSeconds:<nil> ActiveDeadlineSeconds:<nil> DNSPolicy: NodeSelector:map[] ServiceAccountName: DeprecatedServiceAccount: AutomountServiceAccountToken:<nil> NodeName: HostNetwork:false HostPID:false HostIPC:false ShareProcessNamespace:<nil> SecurityContext:nil ImagePullSecrets:[] Hostname: Subdomain: Affinity:nil SchedulerName: Tolerations:[] HostAliases:[] PriorityClassName: Priority:<nil> DNSConfig:nil ReadinessGates:[] RuntimeClassName:<nil> EnableServiceLinks:<nil> PreemptionPolicy:<nil> Overhead:map[] TopologySpreadConstraints:[] SetHostnameAsFQDN:<nil> OS:nil}} VolumeClaimTemplates:[] ServiceName: PodManagementPolicy: UpdateStrategy:{Type: RollingUpdate:nil} RevisionHistoryLimit:<nil> MinReadySeconds:0 PersistentVolumeClaimRetentionPolicy:nil}}} AdditionalMongodConfig:{Object:map[]} AutomationConfigOverride:0xc000719b18 Prometheus:<nil>}, MongoDB.Status: {MongoURI:mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster Phase:Running Version:4.4.0 CurrentStatefulSetReplicas:3 CurrentMongoDBMembers:3 CurrentStatefulSetArbitersReplicas:0 CurrentMongoDBArbiters:0 Message:}\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.563Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.564Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.564Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.564Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.575Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:21:41.576Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.604Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:21:41.604Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.604Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.604Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:21:41.604Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.605Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.605Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.617Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.627Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.627Z\tDEBUG\tcontrollers/replica_set_controller.go:218\tResetting StatefulSet UpdateStrategy to RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:21:41.661Z\tINFO\tcontrollers/replica_set_controller.go:268\tSuccessfully finished reconciliation, MongoDB.Spec: {Members:3 Type:ReplicaSet Version:4.4.0 Arbiters:0 FeatureCompatibilityVersion: ReplicaSetHorizons:[] Security:{Authentication:{Modes:[SCRAM] IgnoreUnknownUsers:0xc00088966c} TLS:{Enabled:false Optional:false CertificateKeySecret:{Name:} CaCertificateSecret:<nil> CaConfigMap:<nil>} Roles:[]} Users:[{Name:my-user DB:admin PasswordSecretRef:{Name:my-user-password Key:} Roles:[{DB: Name:clusterAdmin} {DB:admin Name:userAdminAnyDatabase}] ScramCredentialsSecretName:my-scram ConnectionStringSecretName:}] StatefulSetConfiguration:{SpecWrapper:{Spec:{Replicas:<nil> Selector:nil Template:{ObjectMeta:{Name: GenerateName: Namespace: SelfLink: UID: ResourceVersion: Generation:0 CreationTimestamp:0001-01-01 00:00:00 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[]} Spec:{Volumes:[] InitContainers:[] Containers:[{Name:mongod Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false} {Name:mongodb-agent Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false}] EphemeralContainers:[] RestartPolicy: TerminationGracePeriodSeconds:<nil> ActiveDeadlineSeconds:<nil> DNSPolicy: NodeSelector:map[] ServiceAccountName: DeprecatedServiceAccount: AutomountServiceAccountToken:<nil> NodeName: HostNetwork:false HostPID:false HostIPC:false ShareProcessNamespace:<nil> SecurityContext:nil ImagePullSecrets:[] Hostname: Subdomain: Affinity:nil SchedulerName: Tolerations:[] HostAliases:[] PriorityClassName: Priority:<nil> DNSConfig:nil ReadinessGates:[] RuntimeClassName:<nil> EnableServiceLinks:<nil> PreemptionPolicy:<nil> Overhead:map[] TopologySpreadConstraints:[] SetHostnameAsFQDN:<nil> OS:nil}} VolumeClaimTemplates:[] ServiceName: PodManagementPolicy: UpdateStrategy:{Type: RollingUpdate:nil} RevisionHistoryLimit:<nil> MinReadySeconds:0 PersistentVolumeClaimRetentionPolicy:nil}}} AdditionalMongodConfig:{Object:map[]} AutomationConfigOverride:0xc00000c4e0 Prometheus:<nil>}, MongoDB.Status: {MongoURI:mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster Phase:Running Version:4.4.0 CurrentStatefulSetReplicas:3 CurrentMongoDBMembers:3 CurrentStatefulSetArbitersReplicas:0 CurrentMongoDBArbiters:0 Message:}\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.813Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.813Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.814Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.814Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.814Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.814Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.814Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.833Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"created\"}",
                  "2023-03-25T22:22:06.834Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.859Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:06.867Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.867Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-1' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.867Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 0, agent: 1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.867Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.867Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.867Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:06.871Z\tDEBUG\tcontrollers/replica_set_controller.go:377\tThe existing StatefulSet did not have the readiness probe init container, skipping pod annotation check.\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.871Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.876Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.881Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.881Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:06.891Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.891Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.891Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.892Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.897Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:06.897Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:06.997Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:06.999Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.000Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.000Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:07.003Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.003Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.004Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.021Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.034Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.035Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:07.068Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.068Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.068Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.069Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.076Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:07.076Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.098Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:07.099Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.099Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.099Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:07.099Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.099Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.099Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.117Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.143Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.143Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:07.160Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.160Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.160Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.161Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.165Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:07.165Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.190Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:07.190Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.190Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.190Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:07.191Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.191Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.191Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.201Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.213Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:07.213Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:09.626Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.626Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.626Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.628Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.629Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.629Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.629Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.648Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:09.649Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.807Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:09.809Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.810Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.810Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.810Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.810Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.810Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:09.813Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.813Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.813Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.813Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:09.813Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:17.162Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.162Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.162Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.162Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.162Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.162Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.162Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.187Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:17.188Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.212Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:17.212Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.212Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.212Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.212Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.212Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.212Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:17.213Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.213Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-0' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.213Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.213Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:17.213Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:27.230Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.230Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.230Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.231Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.231Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.231Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.231Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.251Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:27.252Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.294Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:27.294Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.294Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.294Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.294Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.294Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.295Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:27.295Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.296Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-0' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.296Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.296Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:27.296Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:29.855Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:29.855Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:29.855Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:29.856Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:29.856Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:29.856Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:29.869Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:29.870Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:30.025Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:30.028Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:30.028Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:30.028Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:30.029Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:30.029Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:30.033Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:30.034Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:30.034Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:30.034Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:37.310Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.310Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.311Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.313Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.313Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.313Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.342Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:37.343Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.375Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:37.375Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.375Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.375Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.375Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.375Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:37.376Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.376Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.376Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:37.376Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:47.390Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.390Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.390Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.391Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.391Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.391Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.415Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:47.415Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.439Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:47.439Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.439Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.439Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.439Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.439Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:47.440Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.440Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-1' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.440Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod '' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:47.440Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:50.324Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.324Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.324Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.325Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.325Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.330Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:50.330Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.364Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:50.364Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.364Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.364Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.365Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:50.365Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.365Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:50.365Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:22:57.452Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.453Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.453Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.456Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.457Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.490Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:22:57.490Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.653Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:22:57.655Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.657Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.657Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.657Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:22:57.658Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.658Z\tDEBUG\tagent/agent_readiness.go:101\tThe Pod 'test-cluster-2' doesn't have annotation 'agent.mongodb.com/version' yet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:22:57.658Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:23:07.687Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.687Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.687Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.687Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.687Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.713Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:23:07.713Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.735Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:23:07.736Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.736Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.736Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.736Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:23:07.737Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.737Z\tDEBUG\tagent/agent_readiness.go:105\tThe Agent in the Pod 'test-cluster-2' hasn't reached the goal state yet (goal: 1, agent: -1)\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:07.737Z\tINFO\tcontrollers/mongodb_status_options.go:110\tReplicaSet is not yet ready, retrying in 10 seconds",
                  "2023-03-25T22:23:10.806Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.806Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.806Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.806Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.810Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:23:10.810Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.836Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:23:10.837Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.837Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.837Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:23:10.838Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.838Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.838Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.848Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.857Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.858Z\tDEBUG\tcontrollers/replica_set_controller.go:218\tResetting StatefulSet UpdateStrategy to RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:10.883Z\tINFO\tcontrollers/replica_set_controller.go:268\tSuccessfully finished reconciliation, MongoDB.Spec: {Members:3 Type:ReplicaSet Version:4.4.0 Arbiters:0 FeatureCompatibilityVersion: ReplicaSetHorizons:[] Security:{Authentication:{Modes:[SCRAM-SHA-256] IgnoreUnknownUsers:0xc000041884} TLS:{Enabled:false Optional:false CertificateKeySecret:{Name:} CaCertificateSecret:<nil> CaConfigMap:<nil>} Roles:[]} Users:[{Name:my-user DB:admin PasswordSecretRef:{Name:my-user-password Key:} Roles:[{DB:admin Name:clusterAdmin} {DB:admin Name:userAdminAnyDatabase}] ScramCredentialsSecretName:my-scram ConnectionStringSecretName:}] StatefulSetConfiguration:{SpecWrapper:{Spec:{Replicas:<nil> Selector:nil Template:{ObjectMeta:{Name: GenerateName: Namespace: SelfLink: UID: ResourceVersion: Generation:0 CreationTimestamp:0001-01-01 00:00:00 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[]} Spec:{Volumes:[] InitContainers:[] Containers:[{Name:mongod Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false} {Name:mongodb-agent Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false}] EphemeralContainers:[] RestartPolicy: TerminationGracePeriodSeconds:<nil> ActiveDeadlineSeconds:<nil> DNSPolicy: NodeSelector:map[] ServiceAccountName: DeprecatedServiceAccount: AutomountServiceAccountToken:<nil> NodeName: HostNetwork:false HostPID:false HostIPC:false ShareProcessNamespace:<nil> SecurityContext:nil ImagePullSecrets:[] Hostname: Subdomain: Affinity:nil SchedulerName: Tolerations:[] HostAliases:[] PriorityClassName: Priority:<nil> DNSConfig:nil ReadinessGates:[] RuntimeClassName:<nil> EnableServiceLinks:<nil> PreemptionPolicy:<nil> Overhead:map[] TopologySpreadConstraints:[] SetHostnameAsFQDN:<nil> OS:nil}} VolumeClaimTemplates:[] ServiceName: PodManagementPolicy: UpdateStrategy:{Type: RollingUpdate:nil} RevisionHistoryLimit:<nil> MinReadySeconds:0 PersistentVolumeClaimRetentionPolicy:nil}}} AdditionalMongodConfig:{Object:map[]} AutomationConfigOverride:0xc000719f80 Prometheus:<nil>}, MongoDB.Status: {MongoURI:mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster Phase:Running Version:4.4.0 CurrentStatefulSetReplicas:3 CurrentMongoDBMembers:3 CurrentStatefulSetArbitersReplicas:0 CurrentMongoDBArbiters:0 Message:}\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.751Z\tINFO\tcontrollers/replica_set_controller.go:140\tReconciling MongoDB\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.751Z\tDEBUG\tcontrollers/replica_set_controller.go:142\tValidating MongoDB.Spec\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.751Z\tDEBUG\tcontrollers/replica_set_controller.go:151\tEnsuring the service exists\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.751Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.778Z\tINFO\tcontrollers/replica_set_controller.go:462\tCreate/Update operation succeeded\t{\"ReplicaSet\": \"mongodb/test-cluster\", \"operation\": \"updated\"}",
                  "2023-03-25T22:23:17.778Z\tINFO\tcontrollers/replica_set_controller.go:358\tCreating/Updating AutomationConfig\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.808Z\tDEBUG\tscram/scram.go:168\tCredentials have not changed, using credentials stored in: secret/my-scram-scram-credentials",
                  "2023-03-25T22:23:17.808Z\tDEBUG\tagent/replica_set_port_manager.go:122\tNo port change required\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.808Z\tDEBUG\tagent/replica_set_port_manager.go:40\tCalculated process port map: map[test-cluster-0:27017 test-cluster-1:27017 test-cluster-2:27017]\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.808Z\tDEBUG\tcontrollers/replica_set_controller.go:529\tAutomationConfigMembersThisReconciliation\t{\"mdb.AutomationConfigMembersThisReconciliation()\": 3}",
                  "2023-03-25T22:23:17.809Z\tDEBUG\tcontrollers/replica_set_controller.go:381\tWaiting for agents to reach version 1\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.809Z\tINFO\tagent/agent_readiness.go:58\tAll 3 Agents have reached Goal state\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.809Z\tINFO\tcontrollers/replica_set_controller.go:333\tCreating/Updating StatefulSet\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.821Z\tINFO\tcontrollers/replica_set_controller.go:338\tCreating/Updating StatefulSet for Arbiters\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.830Z\tDEBUG\tcontrollers/replica_set_controller.go:348\tEnsuring StatefulSet is ready, with type: RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.830Z\tDEBUG\tcontrollers/replica_set_controller.go:218\tResetting StatefulSet UpdateStrategy to RollingUpdate\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  "2023-03-25T22:23:17.857Z\tINFO\tcontrollers/replica_set_controller.go:268\tSuccessfully finished reconciliation, MongoDB.Spec: {Members:3 Type:ReplicaSet Version:4.4.0 Arbiters:0 FeatureCompatibilityVersion: ReplicaSetHorizons:[] Security:{Authentication:{Modes:[SCRAM-SHA-256] IgnoreUnknownUsers:0xc000590864} TLS:{Enabled:false Optional:false CertificateKeySecret:{Name:} CaCertificateSecret:<nil> CaConfigMap:<nil>} Roles:[]} Users:[{Name:my-user DB:admin PasswordSecretRef:{Name:my-user-password Key:} Roles:[{DB:admin Name:clusterAdmin} {DB:admin Name:userAdminAnyDatabase}] ScramCredentialsSecretName:my-scram ConnectionStringSecretName:}] StatefulSetConfiguration:{SpecWrapper:{Spec:{Replicas:<nil> Selector:nil Template:{ObjectMeta:{Name: GenerateName: Namespace: SelfLink: UID: ResourceVersion: Generation:0 CreationTimestamp:0001-01-01 00:00:00 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[]} Spec:{Volumes:[] InitContainers:[] Containers:[{Name:mongod Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false} {Name:mongodb-agent Image: Command:[] Args:[] WorkingDir: Ports:[] EnvFrom:[] Env:[] Resources:{Limits:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}] Requests:map[cpu:{i:{value:1 scale:0} d:{Dec:<nil>} s:1 Format:DecimalSI} memory:{i:{value:1000 scale:6} d:{Dec:<nil>} s: Format:DecimalSI}]} VolumeMounts:[] VolumeDevices:[] LivenessProbe:nil ReadinessProbe:nil StartupProbe:nil Lifecycle:nil TerminationMessagePath: TerminationMessagePolicy: ImagePullPolicy: SecurityContext:nil Stdin:false StdinOnce:false TTY:false}] EphemeralContainers:[] RestartPolicy: TerminationGracePeriodSeconds:<nil> ActiveDeadlineSeconds:<nil> DNSPolicy: NodeSelector:map[] ServiceAccountName: DeprecatedServiceAccount: AutomountServiceAccountToken:<nil> NodeName: HostNetwork:false HostPID:false HostIPC:false ShareProcessNamespace:<nil> SecurityContext:nil ImagePullSecrets:[] Hostname: Subdomain: Affinity:nil SchedulerName: Tolerations:[] HostAliases:[] PriorityClassName: Priority:<nil> DNSConfig:nil ReadinessGates:[] RuntimeClassName:<nil> EnableServiceLinks:<nil> PreemptionPolicy:<nil> Overhead:map[] TopologySpreadConstraints:[] SetHostnameAsFQDN:<nil> OS:nil}} VolumeClaimTemplates:[] ServiceName: PodManagementPolicy: UpdateStrategy:{Type: RollingUpdate:nil} RevisionHistoryLimit:<nil> MinReadySeconds:0 PersistentVolumeClaimRetentionPolicy:nil}}} AdditionalMongodConfig:{Object:map[]} AutomationConfigOverride:0xc00000c450 Prometheus:<nil>}, MongoDB.Status: {MongoURI:mongodb://test-cluster-0.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-1.test-cluster-svc.mongodb.svc.cluster.local:27017,test-cluster-2.test-cluster-svc.mongodb.svc.cluster.local:27017/?replicaSet=test-cluster Phase:Running Version:4.4.0 CurrentStatefulSetReplicas:3 CurrentMongoDBMembers:3 CurrentStatefulSetArbitersReplicas:0 CurrentMongoDBArbiters:0 Message:}\t{\"ReplicaSet\": \"mongodb/test-cluster\"}",
                  ""
            ]
      },
      "originals": [
            {
                  "trial": "trial-06-0007",
                  "gen": 2
            }
      ]
}