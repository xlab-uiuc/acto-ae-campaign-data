---------- INPUT DELTA  ----------
{
      "dictionary_item_added": {
            "root['spec']['backup']['containerSecurityContext'][allowPrivilegeEscalation]": {
                  "prev": "NotPresent",
                  "curr": false,
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "allowPrivilegeEscalation"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][privileged]": {
                  "prev": "NotPresent",
                  "curr": true,
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "privileged"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][procMount]": {
                  "prev": "NotPresent",
                  "curr": "ACTOKEY",
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "procMount"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][readOnlyRootFilesystem]": {
                  "prev": "NotPresent",
                  "curr": true,
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "readOnlyRootFilesystem"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][runAsGroup]": {
                  "prev": "NotPresent",
                  "curr": 1,
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "runAsGroup"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][runAsNonRoot]": {
                  "prev": "NotPresent",
                  "curr": false,
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "runAsNonRoot"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][runAsUser]": {
                  "prev": "NotPresent",
                  "curr": 1,
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "runAsUser"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][seLinuxOptions][level]": {
                  "prev": "NotPresent",
                  "curr": "ACTOKEY",
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "seLinuxOptions",
                        "level"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][seLinuxOptions][role]": {
                  "prev": "NotPresent",
                  "curr": "ACTOKEY",
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "seLinuxOptions",
                        "role"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][seLinuxOptions][type]": {
                  "prev": "NotPresent",
                  "curr": "ACTOKEY",
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "seLinuxOptions",
                        "type"
                  ]
            },
            "root['spec']['backup']['containerSecurityContext'][seLinuxOptions][user]": {
                  "prev": "NotPresent",
                  "curr": "ACTOKEY",
                  "path": [
                        "spec",
                        "backup",
                        "containerSecurityContext",
                        "seLinuxOptions",
                        "user"
                  ]
            }
      }
}
---------- SYSTEM DELTA ----------
{
      "pod": {},
      "deployment_pods": {},
      "stateful_set": {},
      "deployment": {},
      "config_map": {},
      "service": {},
      "service_account": {},
      "pvc": {},
      "cronjob": {},
      "ingress": {},
      "network_policy": {},
      "pod_disruption_budget": {},
      "secret": {},
      "endpoints": {},
      "job": {},
      "role": {},
      "role_binding": {},
      "custom_resource_spec": {
            "dictionary_item_added": {
                  "root['backup']['containerSecurityContext'][allowPrivilegeEscalation]": {
                        "prev": "NotPresent",
                        "curr": false,
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "allowPrivilegeEscalation"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][privileged]": {
                        "prev": "NotPresent",
                        "curr": true,
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "privileged"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][procMount]": {
                        "prev": "NotPresent",
                        "curr": "ACTOKEY",
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "procMount"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][readOnlyRootFilesystem]": {
                        "prev": "NotPresent",
                        "curr": true,
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "readOnlyRootFilesystem"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][runAsGroup]": {
                        "prev": "NotPresent",
                        "curr": 1,
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "runAsGroup"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][runAsNonRoot]": {
                        "prev": "NotPresent",
                        "curr": false,
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "runAsNonRoot"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][runAsUser]": {
                        "prev": "NotPresent",
                        "curr": 1,
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "runAsUser"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][seLinuxOptions][level]": {
                        "prev": "NotPresent",
                        "curr": "ACTOKEY",
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "seLinuxOptions",
                              "level"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][seLinuxOptions][role]": {
                        "prev": "NotPresent",
                        "curr": "ACTOKEY",
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "seLinuxOptions",
                              "role"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][seLinuxOptions][type]": {
                        "prev": "NotPresent",
                        "curr": "ACTOKEY",
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "seLinuxOptions",
                              "type"
                        ]
                  },
                  "root['backup']['containerSecurityContext'][seLinuxOptions][user]": {
                        "prev": "NotPresent",
                        "curr": "ACTOKEY",
                        "path": [
                              "backup",
                              "containerSecurityContext",
                              "seLinuxOptions",
                              "user"
                        ]
                  }
            }
      },
      "custom_resource_status": {
            "iterable_item_added": {
                  "root['conditions'][8][lastTransitionTime]": {
                        "prev": "NotPresent",
                        "curr": "2023-03-31T16:46:51Z",
                        "path": [
                              "conditions",
                              8,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][8][message]": {
                        "prev": "NotPresent",
                        "curr": "reconcile backup tasks: create or update backup job: CronJob.batch \"test-cluster-backup-daily-s3-us-west\" is invalid: spec.jobTemplate.spec.template.spec.containers[0].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc00bf27335), SELinuxOptions:(*core.SELinuxOptions)(0xc0178d0200), WindowsOptions:(*core.WindowsSecurityContextOptions)(nil), RunAsUser:(*int64)(0xc00bf27338), RunAsGroup:(*int64)(0xc00bf27340), RunAsNonRoot:(*bool)(0xc00bf27348), ReadOnlyRootFilesystem:(*bool)(0xc00bf27349), AllowPrivilegeEscalation:(*bool)(0xc00bf2734a), ProcMount:(*core.ProcMountType)(0xc01714be60), SeccompProfile:(*core.SeccompProfile)(nil)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true",
                        "path": [
                              "conditions",
                              8,
                              "message"
                        ]
                  },
                  "root['conditions'][8][reason]": {
                        "prev": "NotPresent",
                        "curr": "ErrorReconcile",
                        "path": [
                              "conditions",
                              8,
                              "reason"
                        ]
                  },
                  "root['conditions'][8][status]": {
                        "prev": "NotPresent",
                        "curr": "True",
                        "path": [
                              "conditions",
                              8,
                              "status"
                        ]
                  },
                  "root['conditions'][8][type]": {
                        "prev": "NotPresent",
                        "curr": "error",
                        "path": [
                              "conditions",
                              8,
                              "type"
                        ]
                  }
            },
            "dictionary_item_added": {
                  "root['message']": {
                        "prev": "NotPresent",
                        "curr": "Error: reconcile backup tasks: create or update backup job: CronJob.batch \"test-cluster-backup-daily-s3-us-west\" is invalid: spec.jobTemplate.spec.template.spec.containers[0].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc05aaea085), SELinuxOptions:(*core.SELinuxOptions)(0xc07cd5c640), WindowsOptions:(*core.WindowsSecurityContextOptions)(nil), RunAsUser:(*int64)(0xc05aaea088), RunAsGroup:(*int64)(0xc05aaea090), RunAsNonRoot:(*bool)(0xc05aaea098), ReadOnlyRootFilesystem:(*bool)(0xc05aaea099), AllowPrivilegeEscalation:(*bool)(0xc05aaea09a), ProcMount:(*core.ProcMountType)(0xc06bb34290), SeccompProfile:(*core.SeccompProfile)(nil)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true",
                        "path": [
                              "message"
                        ]
                  }
            },
            "values_changed": {
                  "root['state']": {
                        "prev": "ready",
                        "curr": "error",
                        "path": [
                              "state"
                        ]
                  }
            }
      }
}