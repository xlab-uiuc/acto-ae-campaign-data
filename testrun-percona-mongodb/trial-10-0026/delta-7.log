---------- INPUT DELTA  ----------
{}
---------- SYSTEM DELTA ----------
{
      "pod": {},
      "deployment_pods": {},
      "stateful_set": {},
      "deployment": {},
      "config_map": {},
      "service": {},
      "service_account": {},
      "pvc": {},
      "cronjob": {},
      "ingress": {},
      "network_policy": {},
      "pod_disruption_budget": {},
      "secret": {},
      "endpoints": {},
      "job": {},
      "role": {},
      "role_binding": {},
      "custom_resource_spec": {},
      "custom_resource_status": {
            "dictionary_item_added": {
                  "root['conditions'][3]['message']": {
                        "prev": "NotPresent",
                        "curr": "rs0: ready",
                        "path": [
                              "conditions",
                              3,
                              "message"
                        ]
                  },
                  "root['conditions'][3]['reason']": {
                        "prev": "NotPresent",
                        "curr": "RSReady",
                        "path": [
                              "conditions",
                              3,
                              "reason"
                        ]
                  },
                  "root['conditions'][18]['message']": {
                        "prev": "NotPresent",
                        "curr": "ensure pvc: create PVC acto-namespace/: PersistentVolumeClaim \"\" is invalid: [metadata.name: Required value: name or generateName is required, spec.selector.matchExpressions[0].operator: Invalid value: \"ACTOKEY\": not a valid selector operator, spec.accessModes: Unsupported value: \"ACTOKEY\": supported values: \"ReadOnlyMany\", \"ReadWriteMany\", \"ReadWriteOnce\", spec.resources[storage]: Required value, spec.storageClassName: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.volumeMode: Unsupported value: \"ACTOKEY\": supported values: \"Block\", \"Filesystem\"]",
                        "path": [
                              "conditions",
                              18,
                              "message"
                        ]
                  },
                  "root['conditions'][18]['reason']": {
                        "prev": "NotPresent",
                        "curr": "ErrorReconcile",
                        "path": [
                              "conditions",
                              18,
                              "reason"
                        ]
                  }
            },
            "values_changed": {
                  "root['conditions'][0]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:32:38Z",
                        "curr": "2023-03-31T20:33:04Z",
                        "path": [
                              "conditions",
                              0,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][1]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:33:03Z",
                        "curr": "2023-03-31T20:33:07Z",
                        "path": [
                              "conditions",
                              1,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][2]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:33:04Z",
                        "curr": "2023-03-31T20:34:09Z",
                        "path": [
                              "conditions",
                              2,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][3]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:33:07Z",
                        "curr": "2023-03-31T20:34:29Z",
                        "path": [
                              "conditions",
                              3,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][4]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:34:09Z",
                        "curr": "2023-03-31T20:34:29Z",
                        "path": [
                              "conditions",
                              4,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][5]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:34:29Z",
                        "curr": "2023-03-31T20:34:43Z",
                        "path": [
                              "conditions",
                              5,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][6]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:34:29Z",
                        "curr": "2023-03-31T20:34:43Z",
                        "path": [
                              "conditions",
                              6,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][7]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:34:43Z",
                        "curr": "2023-03-31T20:34:57Z",
                        "path": [
                              "conditions",
                              7,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][8]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:34:43Z",
                        "curr": "2023-03-31T20:34:57Z",
                        "path": [
                              "conditions",
                              8,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][9]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:34:57Z",
                        "curr": "2023-03-31T20:35:13Z",
                        "path": [
                              "conditions",
                              9,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][10]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:34:57Z",
                        "curr": "2023-03-31T20:35:13Z",
                        "path": [
                              "conditions",
                              10,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][11]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:35:13Z",
                        "curr": "2023-03-31T20:35:26Z",
                        "path": [
                              "conditions",
                              11,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][12]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:35:13Z",
                        "curr": "2023-03-31T20:35:26Z",
                        "path": [
                              "conditions",
                              12,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][13]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:35:26Z",
                        "curr": "2023-03-31T20:35:43Z",
                        "path": [
                              "conditions",
                              13,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][14]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:35:26Z",
                        "curr": "2023-03-31T20:35:43Z",
                        "path": [
                              "conditions",
                              14,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][15]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:35:43Z",
                        "curr": "2023-03-31T20:36:01Z",
                        "path": [
                              "conditions",
                              15,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][16]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:35:43Z",
                        "curr": "2023-03-31T20:36:01Z",
                        "path": [
                              "conditions",
                              16,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][17]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:36:01Z",
                        "curr": "2023-03-31T20:36:02Z",
                        "path": [
                              "conditions",
                              17,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][18]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:36:01Z",
                        "curr": "2023-03-31T20:41:22Z",
                        "path": [
                              "conditions",
                              18,
                              "lastTransitionTime"
                        ]
                  },
                  "root['conditions'][18]['type']": {
                        "prev": "initializing",
                        "curr": "error",
                        "path": [
                              "conditions",
                              18,
                              "type"
                        ]
                  },
                  "root['conditions'][19]['lastTransitionTime']": {
                        "prev": "2023-03-31T20:36:02Z",
                        "curr": "2023-03-31T20:42:26Z",
                        "path": [
                              "conditions",
                              19,
                              "lastTransitionTime"
                        ]
                  }
            },
            "dictionary_item_removed": {
                  "root['conditions'][1]['reason']": {
                        "prev": "MongosReady",
                        "curr": "NotPresent",
                        "path": [
                              "conditions",
                              1,
                              "reason"
                        ]
                  },
                  "root['conditions'][17]['message']": {
                        "prev": "rs0: ready",
                        "curr": "NotPresent",
                        "path": [
                              "conditions",
                              17,
                              "message"
                        ]
                  },
                  "root['conditions'][17]['reason']": {
                        "prev": "RSReady",
                        "curr": "NotPresent",
                        "path": [
                              "conditions",
                              17,
                              "reason"
                        ]
                  }
            }
      }
}