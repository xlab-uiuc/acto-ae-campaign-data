19:42:58 ConfigMap 08db0feb.percona.com 835:	percona-server-mongodb-operator-67d4f7db5f-8lh58_73dca796-c9a6-453a-9c63-953de7576b54 became leader
19:42:58 Lease 08db0feb.percona.com 836:	percona-server-mongodb-operator-67d4f7db5f-8lh58_73dca796-c9a6-453a-9c63-953de7576b54 became leader
19:43:24 ConfigMap 08db0feb.percona.com 923:	percona-server-mongodb-operator-fb6cf9f7c-9k6d8_14851187-f124-43a5-92a0-209faf4e64d0 became leader
19:43:24 Lease 08db0feb.percona.com 924:	percona-server-mongodb-operator-fb6cf9f7c-9k6d8_14851187-f124-43a5-92a0-209faf4e64d0 became leader
19:43:26 PersistentVolumeClaim mongod-data-test-cluster-cfg-0 939:	waiting for first consumer to be created before binding
19:43:26 PersistentVolumeClaim mongod-data-test-cluster-cfg-0 946:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
19:43:26 PersistentVolumeClaim mongod-data-test-cluster-cfg-0 946:	External provisioner is provisioning volume for claim "acto-namespace/mongod-data-test-cluster-cfg-0"
19:43:30 PersistentVolumeClaim mongod-data-test-cluster-cfg-0 946:	Successfully provisioned volume pvc-31df2914-e1ed-4511-81af-ac3a51a1ff48
19:43:43 PersistentVolumeClaim mongod-data-test-cluster-cfg-1 1202:	waiting for first consumer to be created before binding
19:43:43 PersistentVolumeClaim mongod-data-test-cluster-cfg-1 1210:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
19:43:43 PersistentVolumeClaim mongod-data-test-cluster-cfg-1 1210:	External provisioner is provisioning volume for claim "acto-namespace/mongod-data-test-cluster-cfg-1"
19:43:47 PersistentVolumeClaim mongod-data-test-cluster-cfg-1 1210:	Successfully provisioned volume pvc-74b87a2f-b583-4fc7-a2e8-f77eefa60c37
19:44:00 PersistentVolumeClaim mongod-data-test-cluster-cfg-2 1409:	waiting for first consumer to be created before binding
19:44:00 PersistentVolumeClaim mongod-data-test-cluster-cfg-2 1416:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
19:44:00 PersistentVolumeClaim mongod-data-test-cluster-cfg-2 1416:	External provisioner is provisioning volume for claim "acto-namespace/mongod-data-test-cluster-cfg-2"
19:44:04 PersistentVolumeClaim mongod-data-test-cluster-cfg-2 1416:	Successfully provisioned volume pvc-abdea531-6aba-4ca4-9b7d-adf3a45f7dfe
19:43:26 PersistentVolumeClaim mongod-data-test-cluster-rs0-0 966:	waiting for first consumer to be created before binding
19:43:26 PersistentVolumeClaim mongod-data-test-cluster-rs0-0 981:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
19:43:26 PersistentVolumeClaim mongod-data-test-cluster-rs0-0 981:	External provisioner is provisioning volume for claim "acto-namespace/mongod-data-test-cluster-rs0-0"
19:43:31 PersistentVolumeClaim mongod-data-test-cluster-rs0-0 981:	Successfully provisioned volume pvc-1d3f4bbf-b46b-4aa8-b19f-7e35664c5a96
19:43:47 PersistentVolumeClaim mongod-data-test-cluster-rs0-1 1275:	waiting for first consumer to be created before binding
19:43:47 PersistentVolumeClaim mongod-data-test-cluster-rs0-1 1281:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
19:43:47 PersistentVolumeClaim mongod-data-test-cluster-rs0-1 1281:	External provisioner is provisioning volume for claim "acto-namespace/mongod-data-test-cluster-rs0-1"
19:43:51 PersistentVolumeClaim mongod-data-test-cluster-rs0-1 1281:	Successfully provisioned volume pvc-75045e0e-af44-4e96-984f-975e97cf6dd9
19:44:04 PersistentVolumeClaim mongod-data-test-cluster-rs0-2 1464:	waiting for first consumer to be created before binding
19:44:04 PersistentVolumeClaim mongod-data-test-cluster-rs0-2 1471:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
19:44:04 PersistentVolumeClaim mongod-data-test-cluster-rs0-2 1471:	External provisioner is provisioning volume for claim "acto-namespace/mongod-data-test-cluster-rs0-2"
19:44:08 PersistentVolumeClaim mongod-data-test-cluster-rs0-2 1471:	Successfully provisioned volume pvc-a830e9ed-85b1-47d0-81fb-cf2f240e3e7f
19:44:21 PersistentVolumeClaim mongod-data-test-cluster-rs0-3 1616:	waiting for first consumer to be created before binding
19:44:21 PersistentVolumeClaim mongod-data-test-cluster-rs0-3 1623:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
19:44:21 PersistentVolumeClaim mongod-data-test-cluster-rs0-3 1623:	External provisioner is provisioning volume for claim "acto-namespace/mongod-data-test-cluster-rs0-3"
19:44:25 PersistentVolumeClaim mongod-data-test-cluster-rs0-3 1623:	Successfully provisioned volume pvc-29157412-6fd7-4a9d-83fb-498b23002983
19:43:26 PersistentVolumeClaim mongod-data-test-cluster-rs0-nv-0 1000:	waiting for first consumer to be created before binding
19:43:26 PersistentVolumeClaim mongod-data-test-cluster-rs0-nv-0 1010:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
19:43:26 PersistentVolumeClaim mongod-data-test-cluster-rs0-nv-0 1010:	External provisioner is provisioning volume for claim "acto-namespace/mongod-data-test-cluster-rs0-nv-0"
19:43:31 PersistentVolumeClaim mongod-data-test-cluster-rs0-nv-0 1010:	Successfully provisioned volume pvc-630c4c16-e9f3-40f2-9558-3939350e6674
19:43:46 PersistentVolumeClaim mongod-data-test-cluster-rs0-nv-1 1235:	waiting for first consumer to be created before binding
19:43:46 PersistentVolumeClaim mongod-data-test-cluster-rs0-nv-1 1243:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
19:43:46 PersistentVolumeClaim mongod-data-test-cluster-rs0-nv-1 1243:	External provisioner is provisioning volume for claim "acto-namespace/mongod-data-test-cluster-rs0-nv-1"
19:43:50 PersistentVolumeClaim mongod-data-test-cluster-rs0-nv-1 1243:	Successfully provisioned volume pvc-c1361bd5-94b8-4fed-a21f-cfe2127a2e70
19:42:54 Pod percona-server-mongodb-operator-67d4f7db5f-8lh58 811:	Successfully assigned acto-namespace/percona-server-mongodb-operator-67d4f7db5f-8lh58 to acto-cluster-11-worker
19:42:55 Pod percona-server-mongodb-operator-67d4f7db5f-8lh58 813:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:42:55 Pod percona-server-mongodb-operator-67d4f7db5f-8lh58 813:	Created container percona-server-mongodb-operator
19:42:56 Pod percona-server-mongodb-operator-67d4f7db5f-8lh58 813:	Started container percona-server-mongodb-operator
19:43:06 Pod percona-server-mongodb-operator-67d4f7db5f-8lh58 813:	Stopping container percona-server-mongodb-operator
19:42:54 ReplicaSet percona-server-mongodb-operator-67d4f7db5f 806:	Created pod: percona-server-mongodb-operator-67d4f7db5f-8lh58
19:43:06 ReplicaSet percona-server-mongodb-operator-67d4f7db5f 879:	Deleted pod: percona-server-mongodb-operator-67d4f7db5f-8lh58
19:43:05 Pod percona-server-mongodb-operator-fb6cf9f7c-9k6d8 864:	Successfully assigned acto-namespace/percona-server-mongodb-operator-fb6cf9f7c-9k6d8 to acto-cluster-11-worker4
19:43:05 Pod percona-server-mongodb-operator-fb6cf9f7c-9k6d8 866:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:43:05 Pod percona-server-mongodb-operator-fb6cf9f7c-9k6d8 866:	Created container percona-server-mongodb-operator
19:43:06 Pod percona-server-mongodb-operator-fb6cf9f7c-9k6d8 866:	Started container percona-server-mongodb-operator
19:43:05 ReplicaSet percona-server-mongodb-operator-fb6cf9f7c 861:	Created pod: percona-server-mongodb-operator-fb6cf9f7c-9k6d8
19:42:54 Deployment percona-server-mongodb-operator 804:	Scaled up replica set percona-server-mongodb-operator-67d4f7db5f to 1
19:43:05 Deployment percona-server-mongodb-operator 860:	Scaled up replica set percona-server-mongodb-operator-fb6cf9f7c to 1
19:43:06 Deployment percona-server-mongodb-operator 871:	Scaled down replica set percona-server-mongodb-operator-67d4f7db5f to 0
19:43:26 PodDisruptionBudget test-cluster-arbiter-rs0 967:	No matching pods found
19:43:31 Pod test-cluster-cfg-0 941:	Successfully assigned acto-namespace/test-cluster-cfg-0 to acto-cluster-11-worker2
19:43:32 Pod test-cluster-cfg-0 1084:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:43:32 Pod test-cluster-cfg-0 1084:	Created container mongo-init
19:43:32 Pod test-cluster-cfg-0 1084:	Started container mongo-init
19:43:32 Pod test-cluster-cfg-0 1084:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:43:33 Pod test-cluster-cfg-0 1084:	Created container mongod
19:43:33 Pod test-cluster-cfg-0 1084:	Started container mongod
19:43:33 Pod test-cluster-cfg-0 1084:	Pulling image "percona/percona-backup-mongodb:1.7.0"
19:43:39 Pod test-cluster-cfg-0 1084:	Successfully pulled image "percona/percona-backup-mongodb:1.7.0" in 5.824846056s
19:43:39 Pod test-cluster-cfg-0 1084:	Created container backup-agent
19:43:39 Pod test-cluster-cfg-0 1084:	Started container backup-agent
19:43:48 Pod test-cluster-cfg-1 1206:	Successfully assigned acto-namespace/test-cluster-cfg-1 to acto-cluster-11-worker4
19:43:49 Pod test-cluster-cfg-1 1292:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:43:49 Pod test-cluster-cfg-1 1292:	Created container mongo-init
19:43:49 Pod test-cluster-cfg-1 1292:	Started container mongo-init
19:43:50 Pod test-cluster-cfg-1 1292:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:43:50 Pod test-cluster-cfg-1 1292:	Created container mongod
19:43:50 Pod test-cluster-cfg-1 1292:	Started container mongod
19:43:50 Pod test-cluster-cfg-1 1292:	Pulling image "percona/percona-backup-mongodb:1.7.0"
19:43:55 Pod test-cluster-cfg-1 1292:	Successfully pulled image "percona/percona-backup-mongodb:1.7.0" in 4.614700832s
19:43:55 Pod test-cluster-cfg-1 1292:	Created container backup-agent
19:43:55 Pod test-cluster-cfg-1 1292:	Started container backup-agent
19:44:05 Pod test-cluster-cfg-2 1412:	Successfully assigned acto-namespace/test-cluster-cfg-2 to acto-cluster-11-worker3
19:44:06 Pod test-cluster-cfg-2 1484:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:44:06 Pod test-cluster-cfg-2 1484:	Created container mongo-init
19:44:06 Pod test-cluster-cfg-2 1484:	Started container mongo-init
19:44:07 Pod test-cluster-cfg-2 1484:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:44:07 Pod test-cluster-cfg-2 1484:	Created container mongod
19:44:07 Pod test-cluster-cfg-2 1484:	Started container mongod
19:44:07 Pod test-cluster-cfg-2 1484:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:44:07 Pod test-cluster-cfg-2 1484:	Created container backup-agent
19:44:07 Pod test-cluster-cfg-2 1484:	Started container backup-agent
19:43:26 StatefulSet test-cluster-cfg 937:	create Claim mongod-data-test-cluster-cfg-0 Pod test-cluster-cfg-0 in StatefulSet test-cluster-cfg success
19:43:26 StatefulSet test-cluster-cfg 937:	create Pod test-cluster-cfg-0 in StatefulSet test-cluster-cfg successful
19:43:43 StatefulSet test-cluster-cfg 945:	create Claim mongod-data-test-cluster-cfg-1 Pod test-cluster-cfg-1 in StatefulSet test-cluster-cfg success
19:43:43 StatefulSet test-cluster-cfg 945:	create Pod test-cluster-cfg-1 in StatefulSet test-cluster-cfg successful
19:44:00 StatefulSet test-cluster-cfg 1209:	create Claim mongod-data-test-cluster-cfg-2 Pod test-cluster-cfg-2 in StatefulSet test-cluster-cfg success
19:44:00 StatefulSet test-cluster-cfg 1209:	create Pod test-cluster-cfg-2 in StatefulSet test-cluster-cfg successful
19:43:26 PodDisruptionBudget test-cluster-mongod-rs0 960:	No matching pods found
19:44:19 PodDisruptionBudget test-cluster-mongos- 1577:	No matching pods found
19:44:19 Pod test-cluster-mongos-0 1586:	Successfully assigned acto-namespace/test-cluster-mongos-0 to acto-cluster-11-worker3
19:44:20 Pod test-cluster-mongos-0 1589:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:44:20 Pod test-cluster-mongos-0 1589:	Created container mongo-init
19:44:20 Pod test-cluster-mongos-0 1589:	Started container mongo-init
19:44:21 Pod test-cluster-mongos-0 1589:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:44:21 Pod test-cluster-mongos-0 1589:	Created container mongos
19:44:21 Pod test-cluster-mongos-0 1589:	Started container mongos
19:59:20 Pod test-cluster-mongos-0 1589:	Readiness probe failed: 
19:44:31 Pod test-cluster-mongos-1 1694:	Successfully assigned acto-namespace/test-cluster-mongos-1 to acto-cluster-11-worker2
19:44:32 Pod test-cluster-mongos-1 1696:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:44:32 Pod test-cluster-mongos-1 1696:	Created container mongo-init
19:44:32 Pod test-cluster-mongos-1 1696:	Started container mongo-init
19:44:33 Pod test-cluster-mongos-1 1696:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:44:33 Pod test-cluster-mongos-1 1696:	Created container mongos
19:44:33 Pod test-cluster-mongos-1 1696:	Started container mongos
19:46:03 Pod test-cluster-mongos-1 1696:	Readiness probe failed: 
19:48:48 Pod test-cluster-mongos-1 1696:	Stopping container mongos
19:48:48 Pod test-cluster-mongos-1 1696:	Readiness probe errored: rpc error: code = NotFound desc = failed to exec in container: failed to load task: no running task found: task f8843f1d8d6c732673b6f290199d53a32e38d6f72ef6b06a88e1a71f1d731f74 not found: not found
19:48:49 Pod test-cluster-mongos-1 1696:	Readiness probe errored: rpc error: code = Unknown desc = failed to exec in container: container is in CONTAINER_EXITED state
19:58:45 Pod test-cluster-mongos-1 4355:	Successfully assigned acto-namespace/test-cluster-mongos-1 to acto-cluster-11-worker
19:58:46 Pod test-cluster-mongos-1 4357:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:58:46 Pod test-cluster-mongos-1 4357:	Created container mongo-init
19:58:46 Pod test-cluster-mongos-1 4357:	Started container mongo-init
19:58:47 Pod test-cluster-mongos-1 4357:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:58:47 Pod test-cluster-mongos-1 4357:	Created container mongos
19:58:47 Pod test-cluster-mongos-1 4357:	Started container mongos
19:44:19 StatefulSet test-cluster-mongos 1576:	create Pod test-cluster-mongos-0 in StatefulSet test-cluster-mongos successful
19:44:31 StatefulSet test-cluster-mongos 1591:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos successful
19:48:49 StatefulSet test-cluster-mongos 2782:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc014e40220)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:48:49 StatefulSet test-cluster-mongos 2782:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00b76b7e0)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:48:49 StatefulSet test-cluster-mongos 2782:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00bc45ef0)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:48:49 StatefulSet test-cluster-mongos 2782:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc011e65860)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:48:49 StatefulSet test-cluster-mongos 2782:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00b7053f0)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:48:49 StatefulSet test-cluster-mongos 2782:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00a621540)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:48:50 StatefulSet test-cluster-mongos 2782:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc015a2c1f0)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:48:50 StatefulSet test-cluster-mongos 2782:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc0193c47a0)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:48:51 StatefulSet test-cluster-mongos 2782:	create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01d2f6c70)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:48:52 StatefulSet test-cluster-mongos 2782:	(combined from similar events): create Pod test-cluster-mongos-1 in StatefulSet test-cluster-mongos failed error: Pod "test-cluster-mongos-1" is invalid: [spec.containers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.containers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.containers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.containers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.containers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.containers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.containers[1].ports[0].containerPort: Required value, spec.containers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.containers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.containers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.containers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.containers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.containers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.containers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.containers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeMounts[3].name: Not found: "ACTOKEY", spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.containers[1].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.containers[1].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.containers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.containers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.containers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.containers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.containers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.containers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc019f85ea0)}: can only be set when seccomp type is Localhost, spec.containers[1].securityContext.windowsOptions.hostProcess: Forbidden: not allowed when feature gate 'WindowsHostProcessContainers' is not enabled]
19:43:26 PodDisruptionBudget test-cluster-nonVoting-rs0 980:	No matching pods found
19:43:32 Pod test-cluster-rs0-0 973:	Successfully assigned acto-namespace/test-cluster-rs0-0 to acto-cluster-11-worker3
19:43:33 Pod test-cluster-rs0-0 1109:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:43:33 Pod test-cluster-rs0-0 1109:	Created container mongo-init
19:43:34 Pod test-cluster-rs0-0 1109:	Started container mongo-init
19:43:35 Pod test-cluster-rs0-0 1109:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:43:35 Pod test-cluster-rs0-0 1109:	Created container mongod
19:43:35 Pod test-cluster-rs0-0 1109:	Started container mongod
19:43:35 Pod test-cluster-rs0-0 1109:	Pulling image "percona/percona-backup-mongodb:1.7.0"
19:43:41 Pod test-cluster-rs0-0 1109:	Successfully pulled image "percona/percona-backup-mongodb:1.7.0" in 5.462851563s
19:43:41 Pod test-cluster-rs0-0 1109:	Created container backup-agent
19:43:41 Pod test-cluster-rs0-0 1109:	Started container backup-agent
19:46:20 Pod test-cluster-rs0-0 1109:	Stopping container mongod
19:46:20 Pod test-cluster-rs0-0 1109:	Stopping container backup-agent
19:46:24 Pod test-cluster-rs0-0 2145:	Successfully assigned acto-namespace/test-cluster-rs0-0 to acto-cluster-11-worker3
19:46:26 Pod test-cluster-rs0-0 2146:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:46:26 Pod test-cluster-rs0-0 2146:	Created container mongo-init
19:46:27 Pod test-cluster-rs0-0 2146:	Started container mongo-init
19:46:28 Pod test-cluster-rs0-0 2146:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:46:28 Pod test-cluster-rs0-0 2146:	Created container mongod
19:46:30 Pod test-cluster-rs0-0 2146:	Started container mongod
19:46:30 Pod test-cluster-rs0-0 2146:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:46:30 Pod test-cluster-rs0-0 2146:	Created container backup-agent
19:46:30 Pod test-cluster-rs0-0 2146:	Started container backup-agent
19:43:52 Pod test-cluster-rs0-1 1278:	Successfully assigned acto-namespace/test-cluster-rs0-1 to acto-cluster-11-worker
19:43:53 Pod test-cluster-rs0-1 1348:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:43:53 Pod test-cluster-rs0-1 1348:	Created container mongo-init
19:43:53 Pod test-cluster-rs0-1 1348:	Started container mongo-init
19:43:54 Pod test-cluster-rs0-1 1348:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:43:54 Pod test-cluster-rs0-1 1348:	Created container mongod
19:43:54 Pod test-cluster-rs0-1 1348:	Started container mongod
19:43:54 Pod test-cluster-rs0-1 1348:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:43:54 Pod test-cluster-rs0-1 1348:	Created container backup-agent
19:43:54 Pod test-cluster-rs0-1 1348:	Started container backup-agent
19:46:42 Pod test-cluster-rs0-1 1348:	Stopping container mongod
19:46:42 Pod test-cluster-rs0-1 1348:	Stopping container backup-agent
19:46:44 Pod test-cluster-rs0-1 2247:	Successfully assigned acto-namespace/test-cluster-rs0-1 to acto-cluster-11-worker
19:46:45 Pod test-cluster-rs0-1 2248:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:46:45 Pod test-cluster-rs0-1 2248:	Created container mongo-init
19:46:45 Pod test-cluster-rs0-1 2248:	Started container mongo-init
19:46:46 Pod test-cluster-rs0-1 2248:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:46:46 Pod test-cluster-rs0-1 2248:	Created container mongod
19:46:46 Pod test-cluster-rs0-1 2248:	Started container mongod
19:46:46 Pod test-cluster-rs0-1 2248:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:46:46 Pod test-cluster-rs0-1 2248:	Created container backup-agent
19:46:47 Pod test-cluster-rs0-1 2248:	Started container backup-agent
19:44:09 Pod test-cluster-rs0-2 1467:	Successfully assigned acto-namespace/test-cluster-rs0-2 to acto-cluster-11-worker2
19:44:10 Pod test-cluster-rs0-2 1522:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:44:10 Pod test-cluster-rs0-2 1522:	Created container mongo-init
19:44:10 Pod test-cluster-rs0-2 1522:	Started container mongo-init
19:44:11 Pod test-cluster-rs0-2 1522:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:44:11 Pod test-cluster-rs0-2 1522:	Created container mongod
19:44:11 Pod test-cluster-rs0-2 1522:	Started container mongod
19:44:11 Pod test-cluster-rs0-2 1522:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:44:11 Pod test-cluster-rs0-2 1522:	Created container backup-agent
19:44:11 Pod test-cluster-rs0-2 1522:	Started container backup-agent
19:46:00 Pod test-cluster-rs0-2 1522:	Stopping container mongod
19:46:00 Pod test-cluster-rs0-2 1522:	Stopping container backup-agent
19:46:04 Pod test-cluster-rs0-2 2041:	Successfully assigned acto-namespace/test-cluster-rs0-2 to acto-cluster-11-worker2
19:46:04 Pod test-cluster-rs0-2 2042:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:46:05 Pod test-cluster-rs0-2 2042:	Created container mongo-init
19:46:05 Pod test-cluster-rs0-2 2042:	Started container mongo-init
19:46:06 Pod test-cluster-rs0-2 2042:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:46:06 Pod test-cluster-rs0-2 2042:	Created container mongod
19:46:07 Pod test-cluster-rs0-2 2042:	Started container mongod
19:46:07 Pod test-cluster-rs0-2 2042:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:46:07 Pod test-cluster-rs0-2 2042:	Created container backup-agent
19:46:09 Pod test-cluster-rs0-2 2042:	Started container backup-agent
19:44:26 Pod test-cluster-rs0-3 1619:	Successfully assigned acto-namespace/test-cluster-rs0-3 to acto-cluster-11-worker4
19:44:27 Pod test-cluster-rs0-3 1660:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:44:27 Pod test-cluster-rs0-3 1660:	Created container mongo-init
19:44:27 Pod test-cluster-rs0-3 1660:	Started container mongo-init
19:44:28 Pod test-cluster-rs0-3 1660:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:44:28 Pod test-cluster-rs0-3 1660:	Created container mongod
19:44:28 Pod test-cluster-rs0-3 1660:	Started container mongod
19:44:28 Pod test-cluster-rs0-3 1660:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:44:28 Pod test-cluster-rs0-3 1660:	Created container backup-agent
19:44:28 Pod test-cluster-rs0-3 1660:	Started container backup-agent
19:45:46 Pod test-cluster-rs0-3 1660:	Stopping container mongod
19:45:46 Pod test-cluster-rs0-3 1660:	Stopping container backup-agent
19:45:47 Pod test-cluster-rs0-3 1660:	Readiness probe failed: dial tcp 10.244.4.7:27017: connect: network is unreachable
19:45:48 Pod test-cluster-rs0-3 1955:	Successfully assigned acto-namespace/test-cluster-rs0-3 to acto-cluster-11-worker4
19:45:49 Pod test-cluster-rs0-3 1956:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:45:49 Pod test-cluster-rs0-3 1956:	Created container mongo-init
19:45:49 Pod test-cluster-rs0-3 1956:	Started container mongo-init
19:45:50 Pod test-cluster-rs0-3 1956:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:45:50 Pod test-cluster-rs0-3 1956:	Created container mongod
19:45:50 Pod test-cluster-rs0-3 1956:	Started container mongod
19:45:50 Pod test-cluster-rs0-3 1956:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:45:50 Pod test-cluster-rs0-3 1956:	Created container backup-agent
19:45:51 Pod test-cluster-rs0-3 1956:	Started container backup-agent
19:43:26 Pod test-cluster-rs0-arbiter-0 982:	Successfully assigned acto-namespace/test-cluster-rs0-arbiter-0 to acto-cluster-11-worker4
19:43:27 Pod test-cluster-rs0-arbiter-0 988:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:43:27 Pod test-cluster-rs0-arbiter-0 988:	Created container mongo-init
19:43:27 Pod test-cluster-rs0-arbiter-0 988:	Started container mongo-init
19:43:28 Pod test-cluster-rs0-arbiter-0 988:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:43:28 Pod test-cluster-rs0-arbiter-0 988:	Created container mongod-arbiter
19:43:28 Pod test-cluster-rs0-arbiter-0 988:	Started container mongod-arbiter
19:46:57 Pod test-cluster-rs0-arbiter-0 988:	Stopping container mongod-arbiter
19:46:58 Pod test-cluster-rs0-arbiter-0 2336:	Successfully assigned acto-namespace/test-cluster-rs0-arbiter-0 to acto-cluster-11-worker4
19:46:58 Pod test-cluster-rs0-arbiter-0 2339:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:46:58 Pod test-cluster-rs0-arbiter-0 2339:	Created container mongo-init
19:46:58 Pod test-cluster-rs0-arbiter-0 2339:	Started container mongo-init
19:46:59 Pod test-cluster-rs0-arbiter-0 2339:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:46:59 Pod test-cluster-rs0-arbiter-0 2339:	Created container mongod-arbiter
19:47:00 Pod test-cluster-rs0-arbiter-0 2339:	Started container mongod-arbiter
19:43:26 StatefulSet test-cluster-rs0-arbiter 965:	create Pod test-cluster-rs0-arbiter-0 in StatefulSet test-cluster-rs0-arbiter successful
19:43:31 Pod test-cluster-rs0-nv-0 1001:	Successfully assigned acto-namespace/test-cluster-rs0-nv-0 to acto-cluster-11-worker
19:43:32 Pod test-cluster-rs0-nv-0 1094:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:43:32 Pod test-cluster-rs0-nv-0 1094:	Created container mongo-init
19:43:33 Pod test-cluster-rs0-nv-0 1094:	Started container mongo-init
19:43:34 Pod test-cluster-rs0-nv-0 1094:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:43:34 Pod test-cluster-rs0-nv-0 1094:	Created container mongod-nv
19:43:34 Pod test-cluster-rs0-nv-0 1094:	Started container mongod-nv
19:43:34 Pod test-cluster-rs0-nv-0 1094:	Pulling image "percona/percona-backup-mongodb:1.7.0"
19:43:40 Pod test-cluster-rs0-nv-0 1094:	Successfully pulled image "percona/percona-backup-mongodb:1.7.0" in 5.748432905s
19:43:40 Pod test-cluster-rs0-nv-0 1094:	Created container backup-agent
19:43:40 Pod test-cluster-rs0-nv-0 1094:	Started container backup-agent
19:47:27 Pod test-cluster-rs0-nv-0 1094:	Stopping container mongod-nv
19:47:27 Pod test-cluster-rs0-nv-0 1094:	Stopping container backup-agent
19:47:29 Pod test-cluster-rs0-nv-0 2518:	Successfully assigned acto-namespace/test-cluster-rs0-nv-0 to acto-cluster-11-worker
19:47:30 Pod test-cluster-rs0-nv-0 2520:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:47:30 Pod test-cluster-rs0-nv-0 2520:	Created container mongo-init
19:47:30 Pod test-cluster-rs0-nv-0 2520:	Started container mongo-init
19:47:31 Pod test-cluster-rs0-nv-0 2520:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:47:31 Pod test-cluster-rs0-nv-0 2520:	Created container mongod-nv
19:47:32 Pod test-cluster-rs0-nv-0 2520:	Started container mongod-nv
19:47:32 Pod test-cluster-rs0-nv-0 2520:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:47:32 Pod test-cluster-rs0-nv-0 2520:	Created container backup-agent
19:47:32 Pod test-cluster-rs0-nv-0 2520:	Started container backup-agent
19:43:51 Pod test-cluster-rs0-nv-1 1239:	Successfully assigned acto-namespace/test-cluster-rs0-nv-1 to acto-cluster-11-worker2
19:43:52 Pod test-cluster-rs0-nv-1 1328:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:43:52 Pod test-cluster-rs0-nv-1 1328:	Created container mongo-init
19:43:52 Pod test-cluster-rs0-nv-1 1328:	Started container mongo-init
19:43:53 Pod test-cluster-rs0-nv-1 1328:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:43:53 Pod test-cluster-rs0-nv-1 1328:	Created container mongod-nv
19:43:53 Pod test-cluster-rs0-nv-1 1328:	Started container mongod-nv
19:43:53 Pod test-cluster-rs0-nv-1 1328:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:43:53 Pod test-cluster-rs0-nv-1 1328:	Created container backup-agent
19:43:53 Pod test-cluster-rs0-nv-1 1328:	Started container backup-agent
19:47:10 Pod test-cluster-rs0-nv-1 1328:	Stopping container mongod-nv
19:47:10 Pod test-cluster-rs0-nv-1 1328:	Stopping container backup-agent
19:47:11 Pod test-cluster-rs0-nv-1 2422:	Successfully assigned acto-namespace/test-cluster-rs0-nv-1 to acto-cluster-11-worker2
19:47:12 Pod test-cluster-rs0-nv-1 2423:	Container image "perconalab/percona-server-mongodb-operator:release-1-12-0" already present on machine
19:47:12 Pod test-cluster-rs0-nv-1 2423:	Created container mongo-init
19:47:12 Pod test-cluster-rs0-nv-1 2423:	Started container mongo-init
19:47:13 Pod test-cluster-rs0-nv-1 2423:	Container image "percona/percona-server-mongodb:4.4.10-11" already present on machine
19:47:13 Pod test-cluster-rs0-nv-1 2423:	Created container mongod-nv
19:47:14 Pod test-cluster-rs0-nv-1 2423:	Started container mongod-nv
19:47:14 Pod test-cluster-rs0-nv-1 2423:	Container image "percona/percona-backup-mongodb:1.7.0" already present on machine
19:47:14 Pod test-cluster-rs0-nv-1 2423:	Created container backup-agent
19:47:14 Pod test-cluster-rs0-nv-1 2423:	Started container backup-agent
19:43:26 StatefulSet test-cluster-rs0-nv 977:	create Claim mongod-data-test-cluster-rs0-nv-0 Pod test-cluster-rs0-nv-0 in StatefulSet test-cluster-rs0-nv success
19:43:26 StatefulSet test-cluster-rs0-nv 977:	create Pod test-cluster-rs0-nv-0 in StatefulSet test-cluster-rs0-nv successful
19:43:46 StatefulSet test-cluster-rs0-nv 1009:	create Claim mongod-data-test-cluster-rs0-nv-1 Pod test-cluster-rs0-nv-1 in StatefulSet test-cluster-rs0-nv success
19:43:46 StatefulSet test-cluster-rs0-nv 1009:	create Pod test-cluster-rs0-nv-1 in StatefulSet test-cluster-rs0-nv successful
19:43:26 StatefulSet test-cluster-rs0 959:	create Claim mongod-data-test-cluster-rs0-0 Pod test-cluster-rs0-0 in StatefulSet test-cluster-rs0 success
19:43:26 StatefulSet test-cluster-rs0 959:	create Pod test-cluster-rs0-0 in StatefulSet test-cluster-rs0 successful
19:43:47 StatefulSet test-cluster-rs0 979:	create Claim mongod-data-test-cluster-rs0-1 Pod test-cluster-rs0-1 in StatefulSet test-cluster-rs0 success
19:43:47 StatefulSet test-cluster-rs0 979:	create Pod test-cluster-rs0-1 in StatefulSet test-cluster-rs0 successful
19:44:04 StatefulSet test-cluster-rs0 1282:	create Claim mongod-data-test-cluster-rs0-2 Pod test-cluster-rs0-2 in StatefulSet test-cluster-rs0 success
19:44:04 StatefulSet test-cluster-rs0 1282:	create Pod test-cluster-rs0-2 in StatefulSet test-cluster-rs0 successful
19:44:21 StatefulSet test-cluster-rs0 1469:	create Claim mongod-data-test-cluster-rs0-3 Pod test-cluster-rs0-3 in StatefulSet test-cluster-rs0 success
19:44:21 StatefulSet test-cluster-rs0 1469:	create Pod test-cluster-rs0-3 in StatefulSet test-cluster-rs0 successful
