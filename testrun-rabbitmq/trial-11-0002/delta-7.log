---------- INPUT DELTA  ----------
{
      "values_changed": {
            "root['spec']['service']['type']": {
                  "prev": "LoadBalancer",
                  "curr": "NodePort",
                  "path": [
                        "spec",
                        "service",
                        "type"
                  ]
            }
      }
}
---------- SYSTEM DELTA ----------
{
      "pod": {},
      "deployment_pods": {},
      "stateful_set": {},
      "deployment": {},
      "config_map": {},
      "service": {
            "values_changed": {
                  "root['test-cluster']['spec']['type']": {
                        "prev": "LoadBalancer",
                        "curr": "NodePort",
                        "path": [
                              "test-cluster",
                              "spec",
                              "type"
                        ]
                  }
            },
            "type_changes": {
                  "root['test-cluster']['spec']['allocate_load_balancer_node_ports']": {
                        "prev": true,
                        "curr": null,
                        "path": [
                              "test-cluster",
                              "spec",
                              "allocate_load_balancer_node_ports"
                        ]
                  }
            }
      },
      "service_account": {},
      "pvc": {},
      "cronjob": {},
      "ingress": {},
      "network_policy": {},
      "pod_disruption_budget": {},
      "secret": {},
      "endpoints": {},
      "job": {},
      "role": {},
      "role_binding": {},
      "custom_resource_spec": {
            "values_changed": {
                  "root['service']['type']": {
                        "prev": "LoadBalancer",
                        "curr": "NodePort",
                        "path": [
                              "service",
                              "type"
                        ]
                  }
            }
      },
      "custom_resource_status": {}
}