  	Ports: []v1.ServicePort{
  		{
  			... // 3 identical fields
  			Port:       4000,
  			TargetPort: {IntVal: 4000},
- 			NodePort:   30316,
+ 			NodePort:   2,
  		},
  		{Name: "status", Protocol: "TCP", Port: 10080, TargetPort: {IntVal: 10080}, ...},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:21:11.789491       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:21:11.793465       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[0].nodePort: Invalid value: 2: provided port is not in the valid range. The range of valid ports is 30000-32767, requeuing
I0402 07:21:12.798525       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{
  			... // 3 identical fields
  			Port:       4000,
  			TargetPort: {IntVal: 4000},
- 			NodePort:   30316,
+ 			NodePort:   2,
  		},
  		{Name: "status", Protocol: "TCP", Port: 10080, TargetPort: {IntVal: 10080}, ...},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:21:12.798561       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:21:12.803873       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[0].nodePort: Invalid value: 2: provided port is not in the valid range. The range of valid ports is 30000-32767, requeuing

