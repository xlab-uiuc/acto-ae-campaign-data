13:02:51 PersistentVolumeClaim pd-test-cluster-pd-0 1040:	waiting for first consumer to be created before binding
13:02:51 PersistentVolumeClaim pd-test-cluster-pd-0 1054:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:02:51 PersistentVolumeClaim pd-test-cluster-pd-0 1054:	External provisioner is provisioning volume for claim "acto-namespace/pd-test-cluster-pd-0"
13:02:55 PersistentVolumeClaim pd-test-cluster-pd-0 1054:	Successfully provisioned volume pvc-f904ba4f-6069-49eb-be4b-194d98f4b0ef
13:02:51 PersistentVolumeClaim pd-test-cluster-pd-1 1045:	waiting for first consumer to be created before binding
13:02:51 PersistentVolumeClaim pd-test-cluster-pd-1 1060:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:02:51 PersistentVolumeClaim pd-test-cluster-pd-1 1060:	External provisioner is provisioning volume for claim "acto-namespace/pd-test-cluster-pd-1"
13:02:56 PersistentVolumeClaim pd-test-cluster-pd-1 1060:	Successfully provisioned volume pvc-5eea66f3-0bd5-4836-87b2-3f99e19ca805
13:02:51 PersistentVolumeClaim pd-test-cluster-pd-2 1052:	waiting for first consumer to be created before binding
13:02:51 PersistentVolumeClaim pd-test-cluster-pd-2 1067:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:02:51 PersistentVolumeClaim pd-test-cluster-pd-2 1067:	External provisioner is provisioning volume for claim "acto-namespace/pd-test-cluster-pd-2"
13:02:55 PersistentVolumeClaim pd-test-cluster-pd-2 1067:	Successfully provisioned volume pvc-a36c68a6-5949-4fb3-b617-39e4912f23f7
13:02:50 Pod test-cluster-discovery-779bb58fc7-hlnxj 1011:	Successfully assigned acto-namespace/test-cluster-discovery-779bb58fc7-hlnxj to acto-cluster-3-worker
13:02:51 Pod test-cluster-discovery-779bb58fc7-hlnxj 1017:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:02:51 Pod test-cluster-discovery-779bb58fc7-hlnxj 1017:	Created container discovery
13:02:51 Pod test-cluster-discovery-779bb58fc7-hlnxj 1017:	Started container discovery
13:02:50 ReplicaSet test-cluster-discovery-779bb58fc7 1008:	Created pod: test-cluster-discovery-779bb58fc7-hlnxj
13:02:50 Deployment test-cluster-discovery 1006:	Scaled up replica set test-cluster-discovery-779bb58fc7 to 1
13:02:55 Pod test-cluster-pd-0 1043:	Successfully assigned acto-namespace/test-cluster-pd-0 to acto-cluster-3-worker3
13:02:56 Pod test-cluster-pd-0 1140:	Container image "pingcap/pd:v5.4.0" already present on machine
13:02:56 Pod test-cluster-pd-0 1140:	Created container pd
13:02:56 Pod test-cluster-pd-0 1140:	Started container pd
13:02:56 Pod test-cluster-pd-1 1050:	Successfully assigned acto-namespace/test-cluster-pd-1 to acto-cluster-3-worker2
13:02:57 Pod test-cluster-pd-1 1164:	Container image "pingcap/pd:v5.4.0" already present on machine
13:02:57 Pod test-cluster-pd-1 1164:	Created container pd
13:02:57 Pod test-cluster-pd-1 1164:	Started container pd
13:02:56 Pod test-cluster-pd-2 1058:	Successfully assigned acto-namespace/test-cluster-pd-2 to acto-cluster-3-worker
13:02:57 Pod test-cluster-pd-2 1165:	Container image "pingcap/pd:v5.4.0" already present on machine
13:02:57 Pod test-cluster-pd-2 1165:	Created container pd
13:02:57 Pod test-cluster-pd-2 1165:	Started container pd
13:02:51 StatefulSet test-cluster-pd 1037:	create Claim pd-test-cluster-pd-0 Pod test-cluster-pd-0 in StatefulSet test-cluster-pd success
13:02:51 StatefulSet test-cluster-pd 1037:	create Pod test-cluster-pd-0 in StatefulSet test-cluster-pd successful
13:02:51 StatefulSet test-cluster-pd 1037:	create Claim pd-test-cluster-pd-1 Pod test-cluster-pd-1 in StatefulSet test-cluster-pd success
13:02:51 StatefulSet test-cluster-pd 1037:	create Pod test-cluster-pd-1 in StatefulSet test-cluster-pd successful
13:02:51 StatefulSet test-cluster-pd 1037:	create Claim pd-test-cluster-pd-2 Pod test-cluster-pd-2 in StatefulSet test-cluster-pd success
13:02:51 StatefulSet test-cluster-pd 1037:	create Pod test-cluster-pd-2 in StatefulSet test-cluster-pd successful
13:03:50 Pod test-cluster-tidb-0 1553:	Successfully assigned acto-namespace/test-cluster-tidb-0 to acto-cluster-3-worker3
13:03:51 Pod test-cluster-tidb-0 1558:	Container image "busybox:1.34.1" already present on machine
13:03:51 Pod test-cluster-tidb-0 1558:	Created container slowlog
13:03:51 Pod test-cluster-tidb-0 1558:	Started container slowlog
13:03:51 Pod test-cluster-tidb-0 1558:	Container image "pingcap/tidb:v5.4.0" already present on machine
13:03:51 Pod test-cluster-tidb-0 1558:	Created container tidb
13:03:51 Pod test-cluster-tidb-0 1558:	Started container tidb
13:03:50 Pod test-cluster-tidb-1 1559:	Successfully assigned acto-namespace/test-cluster-tidb-1 to acto-cluster-3-worker2
13:03:51 Pod test-cluster-tidb-1 1564:	Container image "busybox:1.34.1" already present on machine
13:03:51 Pod test-cluster-tidb-1 1564:	Created container slowlog
13:03:51 Pod test-cluster-tidb-1 1564:	Started container slowlog
13:03:51 Pod test-cluster-tidb-1 1564:	Container image "pingcap/tidb:v5.4.0" already present on machine
13:03:51 Pod test-cluster-tidb-1 1564:	Created container tidb
13:03:51 Pod test-cluster-tidb-1 1564:	Started container tidb
13:03:50 Pod test-cluster-tidb-2 1563:	Successfully assigned acto-namespace/test-cluster-tidb-2 to acto-cluster-3-worker
13:03:51 Pod test-cluster-tidb-2 1567:	Container image "busybox:1.34.1" already present on machine
13:03:51 Pod test-cluster-tidb-2 1567:	Created container slowlog
13:03:51 Pod test-cluster-tidb-2 1567:	Started container slowlog
13:03:51 Pod test-cluster-tidb-2 1567:	Container image "pingcap/tidb:v5.4.0" already present on machine
13:03:51 Pod test-cluster-tidb-2 1567:	Created container tidb
13:03:51 Pod test-cluster-tidb-2 1567:	Started container tidb
13:08:22 Pod test-cluster-tidb-2 1567:	Stopping container slowlog
13:08:22 Pod test-cluster-tidb-2 1567:	Stopping container tidb
13:18:26 Pod test-cluster-tidb-2 3998:	Successfully assigned acto-namespace/test-cluster-tidb-2 to acto-cluster-3-worker
13:18:27 Pod test-cluster-tidb-2 4001:	Container image "busybox:1.34.1" already present on machine
13:18:27 Pod test-cluster-tidb-2 4001:	Created container slowlog
13:18:27 Pod test-cluster-tidb-2 4001:	Started container slowlog
13:18:27 Pod test-cluster-tidb-2 4001:	Container image "pingcap/tidb:v5.4.0" already present on machine
13:18:27 Pod test-cluster-tidb-2 4001:	Created container tidb
13:18:27 Pod test-cluster-tidb-2 4001:	Started container tidb
13:04:10 Endpoints test-cluster-tidb-peer 1616:	Failed to update endpoint acto-namespace/test-cluster-tidb-peer: Operation cannot be fulfilled on endpoints "test-cluster-tidb-peer": the object has been modified; please apply your changes to the latest version and try again
13:03:50 StatefulSet test-cluster-tidb 1549:	create Pod test-cluster-tidb-0 in StatefulSet test-cluster-tidb successful
13:03:50 StatefulSet test-cluster-tidb 1549:	create Pod test-cluster-tidb-1 in StatefulSet test-cluster-tidb successful
13:03:50 StatefulSet test-cluster-tidb 1549:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb successful
13:08:22 StatefulSet test-cluster-tidb 2370:	delete Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb successful
13:08:53 StatefulSet test-cluster-tidb 2372:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc015851cb0)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc009787c20), PreStop:(*core.Handler)(0xc009787c38)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009787bf0), HTTPGet:(*core.HTTPGetAction)(0xc014457ab0), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009787c08), HTTPGet:(*core.HTTPGetAction)(0xc014457b20), TCPSocket:(*core.TCPSocketAction)(0xc016b5a600)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009787c68), HTTPGet:(*core.HTTPGetAction)(0xc014457c70), TCPSocket:(*core.TCPSocketAction)(0xc016b5a6c0)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc009787cb0), PreStop:(*core.Handler)(0xc009787d10)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009787c80), HTTPGet:(*core.HTTPGetAction)(0xc014457ce0), TCPSocket:(*core.TCPSocketAction)(0xc016b5a840)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009787c98), HTTPGet:(*core.HTTPGetAction)(0xc014457d50), TCPSocket:(*core.TCPSocketAction)(0xc016b5a870)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009787e30), HTTPGet:(*core.HTTPGetAction)(0xc014457ea0), TCPSocket:(*core.TCPSocketAction)(0xc016b5a930)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:08:53 StatefulSet test-cluster-tidb 2479:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01bb67930)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00f7c5200), PreStop:(*core.Handler)(0xc00f7c5218)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f7c51d0), HTTPGet:(*core.HTTPGetAction)(0xc016b7ebd0), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f7c51e8), HTTPGet:(*core.HTTPGetAction)(0xc016b7ec40), TCPSocket:(*core.TCPSocketAction)(0xc016bad620)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f7c5248), HTTPGet:(*core.HTTPGetAction)(0xc016b7ed90), TCPSocket:(*core.TCPSocketAction)(0xc016bad6e0)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00f7c5290), PreStop:(*core.Handler)(0xc00f7c52c0)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f7c5260), HTTPGet:(*core.HTTPGetAction)(0xc016b7ee00), TCPSocket:(*core.TCPSocketAction)(0xc016bad860)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f7c5278), HTTPGet:(*core.HTTPGetAction)(0xc016b7ee70), TCPSocket:(*core.TCPSocketAction)(0xc016bad890)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f7c5398), HTTPGet:(*core.HTTPGetAction)(0xc016b7efc0), TCPSocket:(*core.TCPSocketAction)(0xc016bad950)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:08:53 StatefulSet test-cluster-tidb 2479:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01c1d6d90)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc014e6f530), PreStop:(*core.Handler)(0xc014e6f548)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014e6f500), HTTPGet:(*core.HTTPGetAction)(0xc016b7fce0), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014e6f518), HTTPGet:(*core.HTTPGetAction)(0xc016b7fd50), TCPSocket:(*core.TCPSocketAction)(0xc016bf96e0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014e6f578), HTTPGet:(*core.HTTPGetAction)(0xc016b7fea0), TCPSocket:(*core.TCPSocketAction)(0xc016bf97a0)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc014e6f5c0), PreStop:(*core.Handler)(0xc014e6f5f0)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014e6f590), HTTPGet:(*core.HTTPGetAction)(0xc016b7ff10), TCPSocket:(*core.TCPSocketAction)(0xc016bf9920)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014e6f5a8), HTTPGet:(*core.HTTPGetAction)(0xc016b7ff80), TCPSocket:(*core.TCPSocketAction)(0xc016bf9950)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014e6f6c8), HTTPGet:(*core.HTTPGetAction)(0xc0176da0e0), TCPSocket:(*core.TCPSocketAction)(0xc016bf9a10)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:08:53 StatefulSet test-cluster-tidb 2479:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01c4546a0)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc015dccaf8), PreStop:(*core.Handler)(0xc015dccb10)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc015dccac8), HTTPGet:(*core.HTTPGetAction)(0xc016a74a80), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc015dccae0), HTTPGet:(*core.HTTPGetAction)(0xc016a74af0), TCPSocket:(*core.TCPSocketAction)(0xc017203bf0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc015dccb40), HTTPGet:(*core.HTTPGetAction)(0xc016a74c40), TCPSocket:(*core.TCPSocketAction)(0xc017203cb0)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc015dccb88), PreStop:(*core.Handler)(0xc015dccbb8)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc015dccb58), HTTPGet:(*core.HTTPGetAction)(0xc016a74cb0), TCPSocket:(*core.TCPSocketAction)(0xc017203e30)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc015dccb70), HTTPGet:(*core.HTTPGetAction)(0xc016a74d20), TCPSocket:(*core.TCPSocketAction)(0xc017203e60)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc015dccc90), HTTPGet:(*core.HTTPGetAction)(0xc016a74e70), TCPSocket:(*core.TCPSocketAction)(0xc017203f20)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:08:53 StatefulSet test-cluster-tidb 2479:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01cc84e20)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00f4f72a8), PreStop:(*core.Handler)(0xc00f4f72c0)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f4f7278), HTTPGet:(*core.HTTPGetAction)(0xc0164ed1f0), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f4f7290), HTTPGet:(*core.HTTPGetAction)(0xc0164ed260), TCPSocket:(*core.TCPSocketAction)(0xc016f4b740)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f4f72f0), HTTPGet:(*core.HTTPGetAction)(0xc0164ed3b0), TCPSocket:(*core.TCPSocketAction)(0xc016f4b800)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00f4f7338), PreStop:(*core.Handler)(0xc00f4f7368)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f4f7308), HTTPGet:(*core.HTTPGetAction)(0xc0164ed420), TCPSocket:(*core.TCPSocketAction)(0xc016f4b980)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f4f7320), HTTPGet:(*core.HTTPGetAction)(0xc0164ed490), TCPSocket:(*core.TCPSocketAction)(0xc016f4b9b0)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00f4f7440), HTTPGet:(*core.HTTPGetAction)(0xc0164ed5e0), TCPSocket:(*core.TCPSocketAction)(0xc016f4ba70)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:08:53 StatefulSet test-cluster-tidb 2479:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01df25e90)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc017625200), PreStop:(*core.Handler)(0xc017625218)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0176251d0), HTTPGet:(*core.HTTPGetAction)(0xc0164edf10), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0176251e8), HTTPGet:(*core.HTTPGetAction)(0xc0164edf80), TCPSocket:(*core.TCPSocketAction)(0xc018be7110)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc017625248), HTTPGet:(*core.HTTPGetAction)(0xc018f9a0e0), TCPSocket:(*core.TCPSocketAction)(0xc018be71d0)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc017625290), PreStop:(*core.Handler)(0xc0176252c0)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc017625260), HTTPGet:(*core.HTTPGetAction)(0xc018f9a150), TCPSocket:(*core.TCPSocketAction)(0xc018be7350)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc017625278), HTTPGet:(*core.HTTPGetAction)(0xc018f9a1c0), TCPSocket:(*core.TCPSocketAction)(0xc018be7380)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc017625398), HTTPGet:(*core.HTTPGetAction)(0xc018f9a310), TCPSocket:(*core.TCPSocketAction)(0xc018be7440)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:08:53 StatefulSet test-cluster-tidb 2479:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01c6d3580)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc01730ba40), PreStop:(*core.Handler)(0xc01730ba58)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01730ba10), HTTPGet:(*core.HTTPGetAction)(0xc017c5b260), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01730ba28), HTTPGet:(*core.HTTPGetAction)(0xc017c5b2d0), TCPSocket:(*core.TCPSocketAction)(0xc019650ff0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01730ba88), HTTPGet:(*core.HTTPGetAction)(0xc017c5b420), TCPSocket:(*core.TCPSocketAction)(0xc0196510b0)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc01730bad0), PreStop:(*core.Handler)(0xc01730bb00)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01730baa0), HTTPGet:(*core.HTTPGetAction)(0xc017c5b490), TCPSocket:(*core.TCPSocketAction)(0xc019651230)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01730bab8), HTTPGet:(*core.HTTPGetAction)(0xc017c5b500), TCPSocket:(*core.TCPSocketAction)(0xc019651260)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01730bbd8), HTTPGet:(*core.HTTPGetAction)(0xc017c5b650), TCPSocket:(*core.TCPSocketAction)(0xc019651320)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:08:53 StatefulSet test-cluster-tidb 2479:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc016387e10)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc0147c84f8), PreStop:(*core.Handler)(0xc0147c8510)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0147c84c8), HTTPGet:(*core.HTTPGetAction)(0xc018eb62a0), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0147c84e0), HTTPGet:(*core.HTTPGetAction)(0xc018eb6310), TCPSocket:(*core.TCPSocketAction)(0xc019b86420)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0147c8540), HTTPGet:(*core.HTTPGetAction)(0xc018eb6460), TCPSocket:(*core.TCPSocketAction)(0xc019b864e0)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc0147c8588), PreStop:(*core.Handler)(0xc0147c85b8)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0147c8558), HTTPGet:(*core.HTTPGetAction)(0xc018eb64d0), TCPSocket:(*core.TCPSocketAction)(0xc019b86660)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0147c8570), HTTPGet:(*core.HTTPGetAction)(0xc018eb6540), TCPSocket:(*core.TCPSocketAction)(0xc019b86690)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0147c8690), HTTPGet:(*core.HTTPGetAction)(0xc018eb6690), TCPSocket:(*core.TCPSocketAction)(0xc019b86750)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:08:54 StatefulSet test-cluster-tidb 2479:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc018b1ed40)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc014b73308), PreStop:(*core.Handler)(0xc014b73320)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014b732d8), HTTPGet:(*core.HTTPGetAction)(0xc0176dbf80), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014b732f0), HTTPGet:(*core.HTTPGetAction)(0xc01b3b8000), TCPSocket:(*core.TCPSocketAction)(0xc01b1dcab0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014b73350), HTTPGet:(*core.HTTPGetAction)(0xc01b3b8150), TCPSocket:(*core.TCPSocketAction)(0xc01b1dcb70)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc014b73398), PreStop:(*core.Handler)(0xc014b733c8)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014b73368), HTTPGet:(*core.HTTPGetAction)(0xc01b3b81c0), TCPSocket:(*core.TCPSocketAction)(0xc01b1dccf0)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014b73380), HTTPGet:(*core.HTTPGetAction)(0xc01b3b8230), TCPSocket:(*core.TCPSocketAction)(0xc01b1dcd20)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc014b734a0), HTTPGet:(*core.HTTPGetAction)(0xc01b3b8380), TCPSocket:(*core.TCPSocketAction)(0xc01b1dcde0)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:08:55 StatefulSet test-cluster-tidb 2479:	(combined from similar events): create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet.port: Invalid value: 0: must be between 1 and 65535, inclusive, spec.initContainers[0].lifecycle.preStop.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].readinessProbe.exec.command: Required value, spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].lifecycle.postStart.exec.command: Required value, spec.initContainers[1].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.successThreshold: Invalid value: 2: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00b749e40)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00ad3e8d0), PreStop:(*core.Handler)(0xc00ad3e8e8)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00ad3e8a0), HTTPGet:(*core.HTTPGetAction)(0xc014ecbe30), TCPSocket:(*core.TCPSocketAction)(nil)}, InitialDelaySeconds:3, TimeoutSeconds:2, PeriodSeconds:2, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00ad3e8b8), HTTPGet:(*core.HTTPGetAction)(0xc014ecbea0), TCPSocket:(*core.TCPSocketAction)(0xc01f2420f0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00ad3e918), HTTPGet:(*core.HTTPGetAction)(0xc017aa8070), TCPSocket:(*core.TCPSocketAction)(0xc01f2421b0)}, InitialDelaySeconds:0, TimeoutSeconds:3, PeriodSeconds:3, SuccessThreshold:3, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00ad3e960), PreStop:(*core.Handler)(0xc00ad3e990)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00ad3e930), HTTPGet:(*core.HTTPGetAction)(0xc017aa80e0), TCPSocket:(*core.TCPSocketAction)(0xc01f242330)}, InitialDelaySeconds:5, TimeoutSeconds:4, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00ad3e948), HTTPGet:(*core.HTTPGetAction)(0xc017aa8150), TCPSocket:(*core.TCPSocketAction)(0xc01f242360)}, InitialDelaySeconds:0, TimeoutSeconds:2, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00ad3ea98), HTTPGet:(*core.HTTPGetAction)(0xc017aa82a0), TCPSocket:(*core.TCPSocketAction)(0xc01f242420)}, InitialDelaySeconds:1, TimeoutSeconds:4, PeriodSeconds:4, SuccessThreshold:2, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:03:14 Pod test-cluster-tikv-0 1270:	Successfully assigned acto-namespace/test-cluster-tikv-0 to acto-cluster-3-worker2
13:03:15 Pod test-cluster-tikv-0 1386:	Container image "busybox:1.34.1" already present on machine
13:03:15 Pod test-cluster-tikv-0 1386:	Created container raftlog
13:03:15 Pod test-cluster-tikv-0 1386:	Started container raftlog
13:03:15 Pod test-cluster-tikv-0 1386:	Container image "pingcap/tikv:v5.4.0" already present on machine
13:03:15 Pod test-cluster-tikv-0 1386:	Created container tikv
13:03:15 Pod test-cluster-tikv-0 1386:	Started container tikv
13:03:14 Pod test-cluster-tikv-1 1278:	Successfully assigned acto-namespace/test-cluster-tikv-1 to acto-cluster-3-worker
13:03:15 Pod test-cluster-tikv-1 1389:	Container image "busybox:1.34.1" already present on machine
13:03:15 Pod test-cluster-tikv-1 1389:	Created container raftlog
13:03:15 Pod test-cluster-tikv-1 1389:	Started container raftlog
13:03:15 Pod test-cluster-tikv-1 1389:	Container image "pingcap/tikv:v5.4.0" already present on machine
13:03:15 Pod test-cluster-tikv-1 1389:	Created container tikv
13:03:15 Pod test-cluster-tikv-1 1389:	Started container tikv
13:03:14 Pod test-cluster-tikv-2 1284:	Successfully assigned acto-namespace/test-cluster-tikv-2 to acto-cluster-3-worker3
13:03:15 Pod test-cluster-tikv-2 1390:	Container image "busybox:1.34.1" already present on machine
13:03:15 Pod test-cluster-tikv-2 1390:	Created container raftlog
13:03:15 Pod test-cluster-tikv-2 1390:	Started container raftlog
13:03:15 Pod test-cluster-tikv-2 1390:	Container image "pingcap/tikv:v5.4.0" already present on machine
13:03:15 Pod test-cluster-tikv-2 1390:	Created container tikv
13:03:15 Pod test-cluster-tikv-2 1390:	Started container tikv
13:03:09 StatefulSet test-cluster-tikv 1264:	create Claim tikv-test-cluster-tikv-0 Pod test-cluster-tikv-0 in StatefulSet test-cluster-tikv success
13:03:09 StatefulSet test-cluster-tikv 1264:	create Pod test-cluster-tikv-0 in StatefulSet test-cluster-tikv successful
13:03:09 StatefulSet test-cluster-tikv 1264:	create Claim tikv-test-cluster-tikv-1 Pod test-cluster-tikv-1 in StatefulSet test-cluster-tikv success
13:03:09 StatefulSet test-cluster-tikv 1264:	create Pod test-cluster-tikv-1 in StatefulSet test-cluster-tikv successful
13:03:09 StatefulSet test-cluster-tikv 1264:	create Claim tikv-test-cluster-tikv-2 Pod test-cluster-tikv-2 in StatefulSet test-cluster-tikv success
13:03:09 StatefulSet test-cluster-tikv 1264:	create Pod test-cluster-tikv-2 in StatefulSet test-cluster-tikv successful
13:02:50 TidbCluster test-cluster 959:	create Role/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:02:50 TidbCluster test-cluster 959:	create ServiceAccount/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:02:50 TidbCluster test-cluster 959:	create RoleBinding/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:02:50 TidbCluster test-cluster 959:	create Deployment/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:02:50 TidbCluster test-cluster 959:	create Service/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:02:51 TidbCluster test-cluster 959:	create Service test-cluster-pd in TidbCluster test-cluster successful
13:02:51 TidbCluster test-cluster 959:	create Service test-cluster-pd-peer in TidbCluster test-cluster successful
13:02:51 TidbCluster test-cluster 959:	create ConfigMap/test-cluster-pd-3731616 for controller TidbCluster/test-cluster successfully
13:02:51 TidbCluster test-cluster 959:	create StatefulSet test-cluster-pd in TidbCluster test-cluster successful
13:02:57 TidbCluster test-cluster 1082:	patch PV pvc-f904ba4f-6069-49eb-be4b-194d98f4b0ef in TidbCluster test-cluster successful
13:02:57 TidbCluster test-cluster 1082:	patch PV pvc-5eea66f3-0bd5-4836-87b2-3f99e19ca805 in TidbCluster test-cluster successful
13:02:57 TidbCluster test-cluster 1082:	patch PV pvc-a36c68a6-5949-4fb3-b617-39e4912f23f7 in TidbCluster test-cluster successful
13:03:09 TidbCluster test-cluster 1254:	create Service test-cluster-tikv-peer in  test-cluster successful
13:03:09 TidbCluster test-cluster 1254:	create ConfigMap/test-cluster-tikv-3831336 for controller TidbCluster/test-cluster successfully
13:03:09 TidbCluster test-cluster 1254:	create StatefulSet test-cluster-tikv in  test-cluster successful
13:03:14 TidbCluster test-cluster 1371:	patch PV pvc-185bcfd8-c55a-4c83-8203-65574b28104c in TidbCluster test-cluster successful
13:03:14 TidbCluster test-cluster 1371:	patch PV pvc-a1dbc1a3-6fb8-4fa1-9981-42fa5edc0641 in TidbCluster test-cluster successful
13:03:14 TidbCluster test-cluster 1396:	patch PV pvc-e01987c1-35b8-48d6-8ba5-78538ae1bbae in TidbCluster test-cluster successful
13:03:50 TidbCluster test-cluster 1448:	create Service test-cluster-tidb-peer in  test-cluster successful
13:03:50 TidbCluster test-cluster 1448:	create Service test-cluster-tidb in  test-cluster successful
13:03:50 TidbCluster test-cluster 1448:	create ConfigMap/test-cluster-tidb-6662316 for controller TidbCluster/test-cluster successfully
13:03:50 TidbCluster test-cluster 1448:	create StatefulSet test-cluster-tidb in  test-cluster successful
13:02:01 Pod tidb-controller-manager-7445bc9f7c-5s8hv 785:	Successfully assigned acto-namespace/tidb-controller-manager-7445bc9f7c-5s8hv to acto-cluster-3-worker
13:02:02 Pod tidb-controller-manager-7445bc9f7c-5s8hv 790:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:02:02 Pod tidb-controller-manager-7445bc9f7c-5s8hv 790:	Created container tidb-operator
13:02:02 Pod tidb-controller-manager-7445bc9f7c-5s8hv 790:	Started container tidb-operator
13:02:32 Pod tidb-controller-manager-7445bc9f7c-5s8hv 790:	Stopping container tidb-operator
13:02:01 ReplicaSet tidb-controller-manager-7445bc9f7c 780:	Created pod: tidb-controller-manager-7445bc9f7c-5s8hv
13:02:32 ReplicaSet tidb-controller-manager-7445bc9f7c 931:	Deleted pod: tidb-controller-manager-7445bc9f7c-5s8hv
13:02:32 Pod tidb-controller-manager-75dd8c56c9-hfq6w 902:	Successfully assigned acto-namespace/tidb-controller-manager-75dd8c56c9-hfq6w to acto-cluster-3-worker3
13:02:32 Pod tidb-controller-manager-75dd8c56c9-hfq6w 905:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:02:32 Pod tidb-controller-manager-75dd8c56c9-hfq6w 905:	Created container tidb-operator
13:02:32 Pod tidb-controller-manager-75dd8c56c9-hfq6w 905:	Started container tidb-operator
13:02:32 ReplicaSet tidb-controller-manager-75dd8c56c9 898:	Created pod: tidb-controller-manager-75dd8c56c9-hfq6w
13:02:01 Deployment tidb-controller-manager 779:	Scaled up replica set tidb-controller-manager-7445bc9f7c to 1
13:02:32 Deployment tidb-controller-manager 896:	Scaled up replica set tidb-controller-manager-75dd8c56c9 to 1
13:02:32 Deployment tidb-controller-manager 917:	Scaled down replica set tidb-controller-manager-7445bc9f7c to 0
13:02:01 Pod tidb-scheduler-5f855998fd-j946q 787:	Successfully assigned acto-namespace/tidb-scheduler-5f855998fd-j946q to acto-cluster-3-worker2
13:02:02 Pod tidb-scheduler-5f855998fd-j946q 793:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:02:02 Pod tidb-scheduler-5f855998fd-j946q 793:	Created container tidb-scheduler
13:02:02 Pod tidb-scheduler-5f855998fd-j946q 793:	Started container tidb-scheduler
13:02:02 Pod tidb-scheduler-5f855998fd-j946q 793:	Container image "k8s.gcr.io/kube-scheduler:v1.22.9" already present on machine
13:02:03 Pod tidb-scheduler-5f855998fd-j946q 793:	Created container kube-scheduler
13:02:03 Pod tidb-scheduler-5f855998fd-j946q 793:	Started container kube-scheduler
13:02:33 Pod tidb-scheduler-5f855998fd-j946q 793:	Stopping container tidb-scheduler
13:02:33 Pod tidb-scheduler-5f855998fd-j946q 793:	Stopping container kube-scheduler
13:02:01 ReplicaSet tidb-scheduler-5f855998fd 784:	Created pod: tidb-scheduler-5f855998fd-j946q
13:02:33 ReplicaSet tidb-scheduler-5f855998fd 948:	Deleted pod: tidb-scheduler-5f855998fd-j946q
13:02:32 Pod tidb-scheduler-77fb4766d8-qnpgg 908:	Successfully assigned acto-namespace/tidb-scheduler-77fb4766d8-qnpgg to acto-cluster-3-worker3
13:02:32 Pod tidb-scheduler-77fb4766d8-qnpgg 915:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:02:32 Pod tidb-scheduler-77fb4766d8-qnpgg 915:	Created container tidb-scheduler
13:02:32 Pod tidb-scheduler-77fb4766d8-qnpgg 915:	Started container tidb-scheduler
13:02:32 Pod tidb-scheduler-77fb4766d8-qnpgg 915:	Container image "k8s.gcr.io/kube-scheduler:v1.22.9" already present on machine
13:02:33 Pod tidb-scheduler-77fb4766d8-qnpgg 915:	Created container kube-scheduler
13:02:33 Pod tidb-scheduler-77fb4766d8-qnpgg 915:	Started container kube-scheduler
13:02:32 ReplicaSet tidb-scheduler-77fb4766d8 904:	Created pod: tidb-scheduler-77fb4766d8-qnpgg
13:02:01 Deployment tidb-scheduler 781:	Scaled up replica set tidb-scheduler-5f855998fd to 1
13:02:07 Lease tidb-scheduler 833:	tidb-scheduler-5f855998fd-j946q_24ce80ac-6941-49b1-9939-7f368377dfcb became leader
13:02:32 Deployment tidb-scheduler 901:	Scaled up replica set tidb-scheduler-77fb4766d8 to 1
13:02:33 Deployment tidb-scheduler 920:	Scaled down replica set tidb-scheduler-5f855998fd to 0
13:02:41 Lease tidb-scheduler 978:	tidb-scheduler-77fb4766d8-qnpgg_61dd6637-01bc-4dd0-98f8-1e6f70b81457 became leader
13:03:09 PersistentVolumeClaim tikv-test-cluster-tikv-0 1268:	waiting for first consumer to be created before binding
13:03:09 PersistentVolumeClaim tikv-test-cluster-tikv-0 1279:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:03:09 PersistentVolumeClaim tikv-test-cluster-tikv-0 1279:	External provisioner is provisioning volume for claim "acto-namespace/tikv-test-cluster-tikv-0"
13:03:13 PersistentVolumeClaim tikv-test-cluster-tikv-0 1279:	Successfully provisioned volume pvc-a1dbc1a3-6fb8-4fa1-9981-42fa5edc0641
13:03:09 PersistentVolumeClaim tikv-test-cluster-tikv-1 1272:	waiting for first consumer to be created before binding
13:03:09 PersistentVolumeClaim tikv-test-cluster-tikv-1 1290:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:03:09 PersistentVolumeClaim tikv-test-cluster-tikv-1 1290:	External provisioner is provisioning volume for claim "acto-namespace/tikv-test-cluster-tikv-1"
13:03:14 PersistentVolumeClaim tikv-test-cluster-tikv-1 1290:	Successfully provisioned volume pvc-e01987c1-35b8-48d6-8ba5-78538ae1bbae
13:03:09 PersistentVolumeClaim tikv-test-cluster-tikv-2 1280:	waiting for first consumer to be created before binding
13:03:09 PersistentVolumeClaim tikv-test-cluster-tikv-2 1295:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:03:09 PersistentVolumeClaim tikv-test-cluster-tikv-2 1295:	External provisioner is provisioning volume for claim "acto-namespace/tikv-test-cluster-tikv-2"
13:03:13 PersistentVolumeClaim tikv-test-cluster-tikv-2 1295:	Successfully provisioned volume pvc-185bcfd8-c55a-4c83-8203-65574b28104c
