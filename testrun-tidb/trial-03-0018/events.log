13:21:37 PersistentVolumeClaim pd-test-cluster-pd-0 969:	waiting for first consumer to be created before binding
13:21:37 PersistentVolumeClaim pd-test-cluster-pd-0 982:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:21:37 PersistentVolumeClaim pd-test-cluster-pd-0 982:	External provisioner is provisioning volume for claim "acto-namespace/pd-test-cluster-pd-0"
13:21:43 PersistentVolumeClaim pd-test-cluster-pd-0 982:	Successfully provisioned volume pvc-ccb866d7-618b-4e5b-927f-b828b7ed5ebd
13:21:37 PersistentVolumeClaim pd-test-cluster-pd-1 974:	waiting for first consumer to be created before binding
13:21:37 PersistentVolumeClaim pd-test-cluster-pd-1 987:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:21:37 PersistentVolumeClaim pd-test-cluster-pd-1 987:	External provisioner is provisioning volume for claim "acto-namespace/pd-test-cluster-pd-1"
13:21:43 PersistentVolumeClaim pd-test-cluster-pd-1 987:	Successfully provisioned volume pvc-bf75c98c-2b6d-489c-843c-80d914ceec63
13:21:37 PersistentVolumeClaim pd-test-cluster-pd-2 984:	waiting for first consumer to be created before binding
13:21:37 PersistentVolumeClaim pd-test-cluster-pd-2 997:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:21:37 PersistentVolumeClaim pd-test-cluster-pd-2 997:	External provisioner is provisioning volume for claim "acto-namespace/pd-test-cluster-pd-2"
13:21:43 PersistentVolumeClaim pd-test-cluster-pd-2 997:	Successfully provisioned volume pvc-a5923c3e-f149-4a92-89f0-96af4cdf078e
13:21:37 Pod test-cluster-discovery-779bb58fc7-8rfdr 943:	Successfully assigned acto-namespace/test-cluster-discovery-779bb58fc7-8rfdr to acto-cluster-3-worker3
13:21:38 Pod test-cluster-discovery-779bb58fc7-8rfdr 949:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:21:38 Pod test-cluster-discovery-779bb58fc7-8rfdr 949:	Created container discovery
13:21:39 Pod test-cluster-discovery-779bb58fc7-8rfdr 949:	Started container discovery
13:21:37 ReplicaSet test-cluster-discovery-779bb58fc7 939:	Created pod: test-cluster-discovery-779bb58fc7-8rfdr
13:21:37 Deployment test-cluster-discovery 936:	Scaled up replica set test-cluster-discovery-779bb58fc7 to 1
13:21:43 Pod test-cluster-pd-0 972:	Successfully assigned acto-namespace/test-cluster-pd-0 to acto-cluster-3-worker2
13:21:44 Pod test-cluster-pd-0 1102:	Container image "pingcap/pd:v5.4.0" already present on machine
13:21:44 Pod test-cluster-pd-0 1102:	Created container pd
13:21:44 Pod test-cluster-pd-0 1102:	Started container pd
13:21:43 Pod test-cluster-pd-1 980:	Successfully assigned acto-namespace/test-cluster-pd-1 to acto-cluster-3-worker
13:21:44 Pod test-cluster-pd-1 1104:	Container image "pingcap/pd:v5.4.0" already present on machine
13:21:44 Pod test-cluster-pd-1 1104:	Created container pd
13:21:44 Pod test-cluster-pd-1 1104:	Started container pd
13:21:44 Pod test-cluster-pd-2 990:	Successfully assigned acto-namespace/test-cluster-pd-2 to acto-cluster-3-worker3
13:21:45 Pod test-cluster-pd-2 1129:	Container image "pingcap/pd:v5.4.0" already present on machine
13:21:45 Pod test-cluster-pd-2 1129:	Created container pd
13:21:45 Pod test-cluster-pd-2 1129:	Started container pd
13:21:37 StatefulSet test-cluster-pd 967:	create Claim pd-test-cluster-pd-0 Pod test-cluster-pd-0 in StatefulSet test-cluster-pd success
13:21:37 StatefulSet test-cluster-pd 967:	create Pod test-cluster-pd-0 in StatefulSet test-cluster-pd successful
13:21:37 StatefulSet test-cluster-pd 967:	create Claim pd-test-cluster-pd-1 Pod test-cluster-pd-1 in StatefulSet test-cluster-pd success
13:21:37 StatefulSet test-cluster-pd 967:	create Pod test-cluster-pd-1 in StatefulSet test-cluster-pd successful
13:21:37 StatefulSet test-cluster-pd 967:	create Claim pd-test-cluster-pd-2 Pod test-cluster-pd-2 in StatefulSet test-cluster-pd success
13:21:37 StatefulSet test-cluster-pd 967:	create Pod test-cluster-pd-2 in StatefulSet test-cluster-pd successful
13:22:29 Pod test-cluster-tidb-0 1474:	Successfully assigned acto-namespace/test-cluster-tidb-0 to acto-cluster-3-worker3
13:22:30 Pod test-cluster-tidb-0 1480:	Container image "busybox:1.34.1" already present on machine
13:22:30 Pod test-cluster-tidb-0 1480:	Created container slowlog
13:22:30 Pod test-cluster-tidb-0 1480:	Started container slowlog
13:22:30 Pod test-cluster-tidb-0 1480:	Container image "pingcap/tidb:v5.4.0" already present on machine
13:22:30 Pod test-cluster-tidb-0 1480:	Created container tidb
13:22:30 Pod test-cluster-tidb-0 1480:	Started container tidb
13:22:29 Pod test-cluster-tidb-1 1479:	Successfully assigned acto-namespace/test-cluster-tidb-1 to acto-cluster-3-worker
13:22:30 Pod test-cluster-tidb-1 1483:	Container image "busybox:1.34.1" already present on machine
13:22:30 Pod test-cluster-tidb-1 1483:	Created container slowlog
13:22:30 Pod test-cluster-tidb-1 1483:	Started container slowlog
13:22:30 Pod test-cluster-tidb-1 1483:	Container image "pingcap/tidb:v5.4.0" already present on machine
13:22:30 Pod test-cluster-tidb-1 1483:	Created container tidb
13:22:30 Pod test-cluster-tidb-1 1483:	Started container tidb
13:22:29 Pod test-cluster-tidb-2 1484:	Successfully assigned acto-namespace/test-cluster-tidb-2 to acto-cluster-3-worker2
13:22:30 Pod test-cluster-tidb-2 1487:	Container image "busybox:1.34.1" already present on machine
13:22:30 Pod test-cluster-tidb-2 1487:	Created container slowlog
13:22:30 Pod test-cluster-tidb-2 1487:	Started container slowlog
13:22:30 Pod test-cluster-tidb-2 1487:	Container image "pingcap/tidb:v5.4.0" already present on machine
13:22:30 Pod test-cluster-tidb-2 1487:	Created container tidb
13:22:30 Pod test-cluster-tidb-2 1487:	Started container tidb
13:23:32 Pod test-cluster-tidb-2 1487:	Stopping container slowlog
13:23:32 Pod test-cluster-tidb-2 1487:	Stopping container tidb
13:33:37 Pod test-cluster-tidb-2 3375:	Successfully assigned acto-namespace/test-cluster-tidb-2 to acto-cluster-3-worker2
13:33:38 Pod test-cluster-tidb-2 3377:	Container image "busybox:1.34.1" already present on machine
13:33:38 Pod test-cluster-tidb-2 3377:	Created container slowlog
13:33:38 Pod test-cluster-tidb-2 3377:	Started container slowlog
13:33:38 Pod test-cluster-tidb-2 3377:	Container image "pingcap/tidb:v5.4.0" already present on machine
13:33:38 Pod test-cluster-tidb-2 3377:	Created container tidb
13:33:38 Pod test-cluster-tidb-2 3377:	Started container tidb
13:22:29 StatefulSet test-cluster-tidb 1470:	create Pod test-cluster-tidb-0 in StatefulSet test-cluster-tidb successful
13:22:29 StatefulSet test-cluster-tidb 1470:	create Pod test-cluster-tidb-1 in StatefulSet test-cluster-tidb successful
13:22:29 StatefulSet test-cluster-tidb 1470:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb successful
13:23:32 StatefulSet test-cluster-tidb 1744:	delete Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb successful
13:24:03 StatefulSet test-cluster-tidb 1855:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc004d4b7f0)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc008f8fe17), SELinuxOptions:(*core.SELinuxOptions)(0xc00f09da80), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc00eb74980), RunAsUser:(*int64)(0xc008f8fe30), RunAsGroup:(*int64)(0xc008f8fe40), RunAsNonRoot:(*bool)(0xc008f8fe38), ReadOnlyRootFilesystem:(*bool)(0xc008f8fe39), AllowPrivilegeEscalation:(*bool)(0xc008f8fe3a), ProcMount:(*core.ProcMountType)(0xc0091ffad0), SeccompProfile:(*core.SeccompProfile)(0xc006eaa0a8)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc003215ef0), PreStop:(*core.Handler)(0xc003215f20)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc003215ec0), HTTPGet:(*core.HTTPGetAction)(0xc00c64a9a0), TCPSocket:(*core.TCPSocketAction)(0xc018b34f60)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc003215ed8), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc018b34f90)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc003215fe0), HTTPGet:(*core.HTTPGetAction)(0xc00c64aaf0), TCPSocket:(*core.TCPSocketAction)(0xc018b35050)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc006eaa078)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc006eaa018), HTTPGet:(*core.HTTPGetAction)(0xc00c64abd0), TCPSocket:(*core.TCPSocketAction)(0xc018b35290)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc006eaa060), HTTPGet:(*core.HTTPGetAction)(0xc00c64ac40), TCPSocket:(*core.TCPSocketAction)(0xc018b352c0)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc006eaa0f0), HTTPGet:(*core.HTTPGetAction)(0xc00c64ad20), TCPSocket:(*core.TCPSocketAction)(0xc018b35320)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:24:03 StatefulSet test-cluster-tidb 1855:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00ac146a0)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc00e20c947), SELinuxOptions:(*core.SELinuxOptions)(0xc0105e0d00), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc002a39d00), RunAsUser:(*int64)(0xc00e20c970), RunAsGroup:(*int64)(0xc00e20c980), RunAsNonRoot:(*bool)(0xc00e20c978), ReadOnlyRootFilesystem:(*bool)(0xc00e20c979), AllowPrivilegeEscalation:(*bool)(0xc00e20c97a), ProcMount:(*core.ProcMountType)(0xc00ac154e0), SeccompProfile:(*core.SeccompProfile)(0xc00944ab88)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00944a9c0), PreStop:(*core.Handler)(0xc00944a9f0)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00944a990), HTTPGet:(*core.HTTPGetAction)(0xc019693f10), TCPSocket:(*core.TCPSocketAction)(0xc01b11bf50)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00944a9a8), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc01b11bf80)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00944aaf8), HTTPGet:(*core.HTTPGetAction)(0xc0064ee070), TCPSocket:(*core.TCPSocketAction)(0xc01aff0060)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc00944ab40)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00944ab10), HTTPGet:(*core.HTTPGetAction)(0xc0064ee1c0), TCPSocket:(*core.TCPSocketAction)(0xc01aff02a0)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00944ab28), HTTPGet:(*core.HTTPGetAction)(0xc0064ee2a0), TCPSocket:(*core.TCPSocketAction)(0xc01aff02d0)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00944abd0), HTTPGet:(*core.HTTPGetAction)(0xc0064ee380), TCPSocket:(*core.TCPSocketAction)(0xc01aff0330)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:24:03 StatefulSet test-cluster-tidb 1855:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00f378900)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc00942b817), SELinuxOptions:(*core.SELinuxOptions)(0xc00d96ec00), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc0009eff80), RunAsUser:(*int64)(0xc00942bb50), RunAsGroup:(*int64)(0xc00942bce0), RunAsNonRoot:(*bool)(0xc00942bb58), ReadOnlyRootFilesystem:(*bool)(0xc00942bb59), AllowPrivilegeEscalation:(*bool)(0xc00942bb5a), ProcMount:(*core.ProcMountType)(0xc00f379520), SeccompProfile:(*core.SeccompProfile)(0xc000b15f68)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc000b15de8), PreStop:(*core.Handler)(0xc000b15e18)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000b15db8), HTTPGet:(*core.HTTPGetAction)(0xc0064ef8f0), TCPSocket:(*core.TCPSocketAction)(0xc01ae33560)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000b15dd0), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc01ae33590)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000b15ef0), HTTPGet:(*core.HTTPGetAction)(0xc0064efab0), TCPSocket:(*core.TCPSocketAction)(0xc01ae33680)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc000b15f38)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000b15f08), HTTPGet:(*core.HTTPGetAction)(0xc0064efb90), TCPSocket:(*core.TCPSocketAction)(0xc01ae338c0)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000b15f20), HTTPGet:(*core.HTTPGetAction)(0xc0064efc00), TCPSocket:(*core.TCPSocketAction)(0xc01ae338f0)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00354a000), HTTPGet:(*core.HTTPGetAction)(0xc0064efd50), TCPSocket:(*core.TCPSocketAction)(0xc01ae33950)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:24:03 StatefulSet test-cluster-tidb 1855:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc0104b00f0)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc009a9ab97), SELinuxOptions:(*core.SELinuxOptions)(0xc0108f06c0), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc00e94dbe0), RunAsUser:(*int64)(0xc009a9abc0), RunAsGroup:(*int64)(0xc009a9abd0), RunAsNonRoot:(*bool)(0xc009a9abc8), ReadOnlyRootFilesystem:(*bool)(0xc009a9abc9), AllowPrivilegeEscalation:(*bool)(0xc009a9abca), ProcMount:(*core.ProcMountType)(0xc0104b0d70), SeccompProfile:(*core.SeccompProfile)(0xc003a79098)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc003a78f30), PreStop:(*core.Handler)(0xc003a78f60)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc003a78f00), HTTPGet:(*core.HTTPGetAction)(0xc006a732d0), TCPSocket:(*core.TCPSocketAction)(0xc01abb9980)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc003a78f18), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc01abb99b0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc003a79020), HTTPGet:(*core.HTTPGetAction)(0xc006a73420), TCPSocket:(*core.TCPSocketAction)(0xc01abb9a70)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc003a79068)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc003a79038), HTTPGet:(*core.HTTPGetAction)(0xc006a735e0), TCPSocket:(*core.TCPSocketAction)(0xc01abb9cb0)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc003a79050), HTTPGet:(*core.HTTPGetAction)(0xc006a73650), TCPSocket:(*core.TCPSocketAction)(0xc01abb9ce0)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc003a790e0), HTTPGet:(*core.HTTPGetAction)(0xc006a73730), TCPSocket:(*core.TCPSocketAction)(0xc01abb9d40)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:24:03 StatefulSet test-cluster-tidb 1855:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00fb57690)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc00e780437), SELinuxOptions:(*core.SELinuxOptions)(0xc00fb6b200), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc0056472a0), RunAsUser:(*int64)(0xc00e780450), RunAsGroup:(*int64)(0xc00e780460), RunAsNonRoot:(*bool)(0xc00e780458), ReadOnlyRootFilesystem:(*bool)(0xc00e780459), AllowPrivilegeEscalation:(*bool)(0xc00e78045a), ProcMount:(*core.ProcMountType)(0xc00fa80300), SeccompProfile:(*core.SeccompProfile)(0xc00187fe48)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00187fce0), PreStop:(*core.Handler)(0xc00187fd10)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00187fcb0), HTTPGet:(*core.HTTPGetAction)(0xc00c64bf10), TCPSocket:(*core.TCPSocketAction)(0xc0196ddce0)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00187fcc8), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc0196ddd10)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00187fdd0), HTTPGet:(*core.HTTPGetAction)(0xc00eff2070), TCPSocket:(*core.TCPSocketAction)(0xc0196dddd0)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc00187fe18)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00187fde8), HTTPGet:(*core.HTTPGetAction)(0xc00eff2150), TCPSocket:(*core.TCPSocketAction)(0xc011958030)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00187fe00), HTTPGet:(*core.HTTPGetAction)(0xc00eff21c0), TCPSocket:(*core.TCPSocketAction)(0xc011958060)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00187fef0), HTTPGet:(*core.HTTPGetAction)(0xc00eff22a0), TCPSocket:(*core.TCPSocketAction)(0xc011958150)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:24:03 StatefulSet test-cluster-tidb 1855:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc010359240)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc00935b157), SELinuxOptions:(*core.SELinuxOptions)(0xc0108568c0), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc01098e5a0), RunAsUser:(*int64)(0xc00935b170), RunAsGroup:(*int64)(0xc00935b180), RunAsNonRoot:(*bool)(0xc00935b178), ReadOnlyRootFilesystem:(*bool)(0xc00935b179), AllowPrivilegeEscalation:(*bool)(0xc00935b17a), ProcMount:(*core.ProcMountType)(0xc010359e10), SeccompProfile:(*core.SeccompProfile)(0xc009077cb0)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc009077b48), PreStop:(*core.Handler)(0xc009077b78)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009077b18), HTTPGet:(*core.HTTPGetAction)(0xc00282b6c0), TCPSocket:(*core.TCPSocketAction)(0xc013429230)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009077b30), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc013429260)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009077c38), HTTPGet:(*core.HTTPGetAction)(0xc00282b9d0), TCPSocket:(*core.TCPSocketAction)(0xc013429320)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc009077c80)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009077c50), HTTPGet:(*core.HTTPGetAction)(0xc00282bab0), TCPSocket:(*core.TCPSocketAction)(0xc013429560)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009077c68), HTTPGet:(*core.HTTPGetAction)(0xc00282bb20), TCPSocket:(*core.TCPSocketAction)(0xc013429590)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009077cf8), HTTPGet:(*core.HTTPGetAction)(0xc00282bd50), TCPSocket:(*core.TCPSocketAction)(0xc0134295f0)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:24:03 StatefulSet test-cluster-tidb 1855:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00a9567d0)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc0091a5a67), SELinuxOptions:(*core.SELinuxOptions)(0xc00d0c9d40), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc0062d2640), RunAsUser:(*int64)(0xc0091a5a80), RunAsGroup:(*int64)(0xc0091a5a90), RunAsNonRoot:(*bool)(0xc0091a5a88), ReadOnlyRootFilesystem:(*bool)(0xc0091a5a89), AllowPrivilegeEscalation:(*bool)(0xc0091a5a8a), ProcMount:(*core.ProcMountType)(0xc00a957630), SeccompProfile:(*core.SeccompProfile)(0xc001143650)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc0011434e8), PreStop:(*core.Handler)(0xc001143518)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0011434a0), HTTPGet:(*core.HTTPGetAction)(0xc006410000), TCPSocket:(*core.TCPSocketAction)(0xc013962ba0)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0011434d0), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc013962bd0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0011435d8), HTTPGet:(*core.HTTPGetAction)(0xc0064101c0), TCPSocket:(*core.TCPSocketAction)(0xc013962c90)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc001143620)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0011435f0), HTTPGet:(*core.HTTPGetAction)(0xc0064102a0), TCPSocket:(*core.TCPSocketAction)(0xc013962ed0)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc001143608), HTTPGet:(*core.HTTPGetAction)(0xc006410310), TCPSocket:(*core.TCPSocketAction)(0xc013962f00)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0011436e0), HTTPGet:(*core.HTTPGetAction)(0xc006410460), TCPSocket:(*core.TCPSocketAction)(0xc013962f60)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:24:03 StatefulSet test-cluster-tidb 1855:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc0114c9610)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc008f61687), SELinuxOptions:(*core.SELinuxOptions)(0xc005a17ac0), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc0067765a0), RunAsUser:(*int64)(0xc008f616a0), RunAsGroup:(*int64)(0xc008f616b0), RunAsNonRoot:(*bool)(0xc008f616a8), ReadOnlyRootFilesystem:(*bool)(0xc008f616a9), AllowPrivilegeEscalation:(*bool)(0xc008f616aa), ProcMount:(*core.ProcMountType)(0xc00f422210), SeccompProfile:(*core.SeccompProfile)(0xc0022c9cf8)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc0022c9b90), PreStop:(*core.Handler)(0xc0022c9bc0)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0022c9b60), HTTPGet:(*core.HTTPGetAction)(0xc006410e00), TCPSocket:(*core.TCPSocketAction)(0xc0124115c0)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0022c9b78), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc0124115f0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0022c9c80), HTTPGet:(*core.HTTPGetAction)(0xc0064110a0), TCPSocket:(*core.TCPSocketAction)(0xc0124116b0)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc0022c9cc8)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0022c9c98), HTTPGet:(*core.HTTPGetAction)(0xc006411180), TCPSocket:(*core.TCPSocketAction)(0xc0124118f0)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0022c9cb0), HTTPGet:(*core.HTTPGetAction)(0xc0064111f0), TCPSocket:(*core.TCPSocketAction)(0xc012411920)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0022c9d40), HTTPGet:(*core.HTTPGetAction)(0xc0064112d0), TCPSocket:(*core.TCPSocketAction)(0xc012411980)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:24:04 StatefulSet test-cluster-tidb 1855:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc0116e71d0)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc0095267e7), SELinuxOptions:(*core.SELinuxOptions)(0xc01861aac0), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc003ba7780), RunAsUser:(*int64)(0xc009526800), RunAsGroup:(*int64)(0xc009526810), RunAsNonRoot:(*bool)(0xc009526808), ReadOnlyRootFilesystem:(*bool)(0xc009526809), AllowPrivilegeEscalation:(*bool)(0xc00952680a), ProcMount:(*core.ProcMountType)(0xc0116e7dd0), SeccompProfile:(*core.SeccompProfile)(0xc009141848)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc009141638), PreStop:(*core.Handler)(0xc009141668)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009141608), HTTPGet:(*core.HTTPGetAction)(0xc018a8ea10), TCPSocket:(*core.TCPSocketAction)(0xc015958ba0)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009141620), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc015958bd0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0091417d0), HTTPGet:(*core.HTTPGetAction)(0xc018a8eb60), TCPSocket:(*core.TCPSocketAction)(0xc015958c90)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc009141818)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0091417e8), HTTPGet:(*core.HTTPGetAction)(0xc018a8ec40), TCPSocket:(*core.TCPSocketAction)(0xc015958ed0)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009141800), HTTPGet:(*core.HTTPGetAction)(0xc018a8ecb0), TCPSocket:(*core.TCPSocketAction)(0xc015958f00)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009141890), HTTPGet:(*core.HTTPGetAction)(0xc018a8ed90), TCPSocket:(*core.TCPSocketAction)(0xc015958f60)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:24:05 StatefulSet test-cluster-tidb 1855:	(combined from similar events): create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.exec.command: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.exec.command: Required value, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].ports[0].containerPort: Required value, spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[3].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[3].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].ports[4].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].ports[4].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[0].envFrom[0].configMapRef.name: Required value, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[3].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[3].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[3].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[1].name: Duplicate value: "ACTOKEY", spec.initContainers[1].image: Required value, spec.initContainers[1].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.exec.command: Required value, spec.initContainers[1].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.exec.command: Required value, spec.initContainers[1].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].livenessProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[1].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[1].readinessProbe.exec.command: Required value, spec.initContainers[1].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[0].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[1].ports[2].name: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[1].ports[2].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.initContainers[1].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[1].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[1].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[1].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[1].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[1].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[1].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[1].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[1].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[1].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[1].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[1].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[1].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[1].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[1].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[1].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01a5dc460)}: can only be set when seccomp type is Localhost, spec.initContainers[1].securityContext: Invalid value: core.SecurityContext{Capabilities:(*core.Capabilities)(nil), Privileged:(*bool)(0xc01ea0b417), SELinuxOptions:(*core.SELinuxOptions)(0xc01e704f00), WindowsOptions:(*core.WindowsSecurityContextOptions)(0xc005a15ce0), RunAsUser:(*int64)(0xc01ea0b430), RunAsGroup:(*int64)(0xc01ea0b440), RunAsNonRoot:(*bool)(0xc01ea0b438), ReadOnlyRootFilesystem:(*bool)(0xc01ea0b439), AllowPrivilegeEscalation:(*bool)(0xc01ea0b43a), ProcMount:(*core.ProcMountType)(0xc01d7e3c10), SeccompProfile:(*core.SeccompProfile)(0xc000a5af60)}: cannot set `allowPrivilegeEscalation` to false and `privileged` to true, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc000a5acf0), PreStop:(*core.Handler)(0xc000a5ad50)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000a5aca8), HTTPGet:(*core.HTTPGetAction)(0xc01e1655e0), TCPSocket:(*core.TCPSocketAction)(0xc01e42c720)}, InitialDelaySeconds:4, TimeoutSeconds:4, PeriodSeconds:1, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000a5acc0), HTTPGet:(*core.HTTPGetAction)(nil), TCPSocket:(*core.TCPSocketAction)(0xc01e42c7b0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:2, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000a5ae58), HTTPGet:(*core.HTTPGetAction)(0xc01e165730), TCPSocket:(*core.TCPSocketAction)(0xc01e42c870)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:3, SuccessThreshold:1, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(nil), PreStop:(*core.Handler)(0xc000a5aee8)}: must not be set for init containers, spec.initContainers[1].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000a5ae70), HTTPGet:(*core.HTTPGetAction)(0xc01e165810), TCPSocket:(*core.TCPSocketAction)(0xc01e42cb10)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:2, SuccessThreshold:4, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000a5ae88), HTTPGet:(*core.HTTPGetAction)(0xc01e165880), TCPSocket:(*core.TCPSocketAction)(0xc01e42cba0)}, InitialDelaySeconds:1, TimeoutSeconds:3, PeriodSeconds:5, SuccessThreshold:4, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[1].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc000a5afa8), HTTPGet:(*core.HTTPGetAction)(0xc01e165960), TCPSocket:(*core.TCPSocketAction)(0xc01e42cc90)}, InitialDelaySeconds:4, TimeoutSeconds:3, PeriodSeconds:4, SuccessThreshold:1, FailureThreshold:4, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
13:22:15 Pod test-cluster-tikv-0 1252:	Successfully assigned acto-namespace/test-cluster-tikv-0 to acto-cluster-3-worker
13:22:15 Pod test-cluster-tikv-0 1337:	Container image "busybox:1.34.1" already present on machine
13:22:15 Pod test-cluster-tikv-0 1337:	Created container raftlog
13:22:15 Pod test-cluster-tikv-0 1337:	Started container raftlog
13:22:15 Pod test-cluster-tikv-0 1337:	Container image "pingcap/tikv:v5.4.0" already present on machine
13:22:15 Pod test-cluster-tikv-0 1337:	Created container tikv
13:22:16 Pod test-cluster-tikv-0 1337:	Started container tikv
13:22:16 Pod test-cluster-tikv-1 1259:	Successfully assigned acto-namespace/test-cluster-tikv-1 to acto-cluster-3-worker3
13:22:16 Pod test-cluster-tikv-1 1357:	Container image "busybox:1.34.1" already present on machine
13:22:16 Pod test-cluster-tikv-1 1357:	Created container raftlog
13:22:17 Pod test-cluster-tikv-1 1357:	Started container raftlog
13:22:17 Pod test-cluster-tikv-1 1357:	Container image "pingcap/tikv:v5.4.0" already present on machine
13:22:17 Pod test-cluster-tikv-1 1357:	Created container tikv
13:22:17 Pod test-cluster-tikv-1 1357:	Started container tikv
13:22:17 Pod test-cluster-tikv-2 1266:	Successfully assigned acto-namespace/test-cluster-tikv-2 to acto-cluster-3-worker2
13:22:17 Pod test-cluster-tikv-2 1383:	Container image "busybox:1.34.1" already present on machine
13:22:17 Pod test-cluster-tikv-2 1383:	Created container raftlog
13:22:18 Pod test-cluster-tikv-2 1383:	Started container raftlog
13:22:18 Pod test-cluster-tikv-2 1383:	Container image "pingcap/tikv:v5.4.0" already present on machine
13:22:18 Pod test-cluster-tikv-2 1383:	Created container tikv
13:22:18 Pod test-cluster-tikv-2 1383:	Started container tikv
13:22:11 StatefulSet test-cluster-tikv 1245:	create Claim tikv-test-cluster-tikv-0 Pod test-cluster-tikv-0 in StatefulSet test-cluster-tikv success
13:22:11 StatefulSet test-cluster-tikv 1245:	create Pod test-cluster-tikv-0 in StatefulSet test-cluster-tikv successful
13:22:11 StatefulSet test-cluster-tikv 1245:	create Claim tikv-test-cluster-tikv-1 Pod test-cluster-tikv-1 in StatefulSet test-cluster-tikv success
13:22:11 StatefulSet test-cluster-tikv 1245:	create Pod test-cluster-tikv-1 in StatefulSet test-cluster-tikv successful
13:22:11 StatefulSet test-cluster-tikv 1245:	create Claim tikv-test-cluster-tikv-2 Pod test-cluster-tikv-2 in StatefulSet test-cluster-tikv success
13:22:11 StatefulSet test-cluster-tikv 1245:	create Pod test-cluster-tikv-2 in StatefulSet test-cluster-tikv successful
13:21:37 TidbCluster test-cluster 927:	create Role/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:21:37 TidbCluster test-cluster 927:	create ServiceAccount/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:21:37 TidbCluster test-cluster 927:	create RoleBinding/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:21:37 TidbCluster test-cluster 927:	create Deployment/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:21:37 TidbCluster test-cluster 927:	create Service/test-cluster-discovery for controller TidbCluster/test-cluster successfully
13:21:37 TidbCluster test-cluster 927:	create Service test-cluster-pd in  test-cluster successful
13:21:37 TidbCluster test-cluster 927:	create Service test-cluster-pd-peer in  test-cluster successful
13:21:37 TidbCluster test-cluster 927:	create ConfigMap/test-cluster-pd-3731616 for controller TidbCluster/test-cluster successfully
13:21:37 TidbCluster test-cluster 927:	create StatefulSet test-cluster-pd in  test-cluster successful
13:22:00 TidbCluster test-cluster 1037:	patch PV pvc-a5923c3e-f149-4a92-89f0-96af4cdf078e in TidbCluster test-cluster successful
13:22:00 TidbCluster test-cluster 1037:	patch PV pvc-ccb866d7-618b-4e5b-927f-b828b7ed5ebd in TidbCluster test-cluster successful
13:22:00 TidbCluster test-cluster 1037:	patch PV pvc-bf75c98c-2b6d-489c-843c-80d914ceec63 in TidbCluster test-cluster successful
13:22:11 TidbCluster test-cluster 1197:	create Service test-cluster-tikv-peer in  test-cluster successful
13:22:11 TidbCluster test-cluster 1197:	create ConfigMap/test-cluster-tikv-3831336 for controller TidbCluster/test-cluster successfully
13:22:11 TidbCluster test-cluster 1197:	create StatefulSet test-cluster-tikv in  test-cluster successful
13:22:17 TidbCluster test-cluster 1321:	patch PV pvc-47039058-204e-4b37-9ea7-ee50149bc969 in TidbCluster test-cluster successful
13:22:17 TidbCluster test-cluster 1321:	patch PV pvc-9297d45c-a720-40d0-9686-00df68624c32 in TidbCluster test-cluster successful
13:22:17 TidbCluster test-cluster 1321:	patch PV pvc-60861f2a-b491-4cee-ae5d-7b07c1147125 in TidbCluster test-cluster successful
13:22:29 TidbCluster test-cluster 1429:	create Service test-cluster-tidb-peer in  test-cluster successful
13:22:29 TidbCluster test-cluster 1429:	create Service test-cluster-tidb in  test-cluster successful
13:22:29 TidbCluster test-cluster 1429:	create ConfigMap/test-cluster-tidb-6662316 for controller TidbCluster/test-cluster successfully
13:22:29 TidbCluster test-cluster 1429:	create StatefulSet test-cluster-tidb in  test-cluster successful
13:21:05 Pod tidb-controller-manager-7445bc9f7c-p7jjx 781:	Successfully assigned acto-namespace/tidb-controller-manager-7445bc9f7c-p7jjx to acto-cluster-3-worker3
13:21:06 Pod tidb-controller-manager-7445bc9f7c-p7jjx 784:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:21:06 Pod tidb-controller-manager-7445bc9f7c-p7jjx 784:	Created container tidb-operator
13:21:06 Pod tidb-controller-manager-7445bc9f7c-p7jjx 784:	Started container tidb-operator
13:21:38 Pod tidb-controller-manager-7445bc9f7c-p7jjx 784:	Stopping container tidb-operator
13:21:05 ReplicaSet tidb-controller-manager-7445bc9f7c 775:	Created pod: tidb-controller-manager-7445bc9f7c-p7jjx
13:21:38 ReplicaSet tidb-controller-manager-7445bc9f7c 1028:	Deleted pod: tidb-controller-manager-7445bc9f7c-p7jjx
13:21:35 Pod tidb-controller-manager-75dd8c56c9-znr4b 896:	Successfully assigned acto-namespace/tidb-controller-manager-75dd8c56c9-znr4b to acto-cluster-3-worker3
13:21:37 Pod tidb-controller-manager-75dd8c56c9-znr4b 898:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:21:37 Pod tidb-controller-manager-75dd8c56c9-znr4b 898:	Created container tidb-operator
13:21:38 Pod tidb-controller-manager-75dd8c56c9-znr4b 898:	Started container tidb-operator
13:21:35 ReplicaSet tidb-controller-manager-75dd8c56c9 892:	Created pod: tidb-controller-manager-75dd8c56c9-znr4b
13:21:05 Deployment tidb-controller-manager 774:	Scaled up replica set tidb-controller-manager-7445bc9f7c to 1
13:21:35 Deployment tidb-controller-manager 891:	Scaled up replica set tidb-controller-manager-75dd8c56c9 to 1
13:21:38 Deployment tidb-controller-manager 909:	Scaled down replica set tidb-controller-manager-7445bc9f7c to 0
13:21:05 Pod tidb-scheduler-5f855998fd-s6rj7 782:	Successfully assigned acto-namespace/tidb-scheduler-5f855998fd-s6rj7 to acto-cluster-3-worker3
13:21:06 Pod tidb-scheduler-5f855998fd-s6rj7 785:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:21:06 Pod tidb-scheduler-5f855998fd-s6rj7 785:	Created container tidb-scheduler
13:21:06 Pod tidb-scheduler-5f855998fd-s6rj7 785:	Started container tidb-scheduler
13:21:06 Pod tidb-scheduler-5f855998fd-s6rj7 785:	Container image "k8s.gcr.io/kube-scheduler:v1.22.9" already present on machine
13:21:06 Pod tidb-scheduler-5f855998fd-s6rj7 785:	Created container kube-scheduler
13:21:07 Pod tidb-scheduler-5f855998fd-s6rj7 785:	Started container kube-scheduler
13:21:41 Pod tidb-scheduler-5f855998fd-s6rj7 785:	Stopping container tidb-scheduler
13:21:41 Pod tidb-scheduler-5f855998fd-s6rj7 785:	Stopping container kube-scheduler
13:21:05 ReplicaSet tidb-scheduler-5f855998fd 779:	Created pod: tidb-scheduler-5f855998fd-s6rj7
13:21:41 ReplicaSet tidb-scheduler-5f855998fd 1069:	Deleted pod: tidb-scheduler-5f855998fd-s6rj7
13:21:35 Pod tidb-scheduler-77fb4766d8-zlrp4 908:	Successfully assigned acto-namespace/tidb-scheduler-77fb4766d8-zlrp4 to acto-cluster-3-worker
13:21:37 Pod tidb-scheduler-77fb4766d8-zlrp4 911:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
13:21:37 Pod tidb-scheduler-77fb4766d8-zlrp4 911:	Created container tidb-scheduler
13:21:38 Pod tidb-scheduler-77fb4766d8-zlrp4 911:	Started container tidb-scheduler
13:21:38 Pod tidb-scheduler-77fb4766d8-zlrp4 911:	Container image "k8s.gcr.io/kube-scheduler:v1.22.9" already present on machine
13:21:38 Pod tidb-scheduler-77fb4766d8-zlrp4 911:	Created container kube-scheduler
13:21:40 Pod tidb-scheduler-77fb4766d8-zlrp4 911:	Started container kube-scheduler
13:21:35 ReplicaSet tidb-scheduler-77fb4766d8 905:	Created pod: tidb-scheduler-77fb4766d8-zlrp4
13:21:05 Deployment tidb-scheduler 776:	Scaled up replica set tidb-scheduler-5f855998fd to 1
13:21:11 Lease tidb-scheduler 832:	tidb-scheduler-5f855998fd-s6rj7_507d95b0-8775-4c5d-bc51-679d30f4dffb became leader
13:21:35 Deployment tidb-scheduler 901:	Scaled up replica set tidb-scheduler-77fb4766d8 to 1
13:21:41 Deployment tidb-scheduler 917:	Scaled down replica set tidb-scheduler-5f855998fd to 0
13:21:44 Lease tidb-scheduler 1132:	tidb-scheduler-77fb4766d8-zlrp4_486dfa57-4abd-4592-94a2-874ff6bb9bc7 became leader
13:22:11 PersistentVolumeClaim tikv-test-cluster-tikv-0 1249:	waiting for first consumer to be created before binding
13:22:11 PersistentVolumeClaim tikv-test-cluster-tikv-0 1260:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:22:11 PersistentVolumeClaim tikv-test-cluster-tikv-0 1260:	External provisioner is provisioning volume for claim "acto-namespace/tikv-test-cluster-tikv-0"
13:22:14 PersistentVolumeClaim tikv-test-cluster-tikv-0 1260:	Successfully provisioned volume pvc-47039058-204e-4b37-9ea7-ee50149bc969
13:22:11 PersistentVolumeClaim tikv-test-cluster-tikv-1 1253:	waiting for first consumer to be created before binding
13:22:11 PersistentVolumeClaim tikv-test-cluster-tikv-1 1268:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:22:11 PersistentVolumeClaim tikv-test-cluster-tikv-1 1268:	External provisioner is provisioning volume for claim "acto-namespace/tikv-test-cluster-tikv-1"
13:22:15 PersistentVolumeClaim tikv-test-cluster-tikv-1 1268:	Successfully provisioned volume pvc-9297d45c-a720-40d0-9686-00df68624c32
13:22:11 PersistentVolumeClaim tikv-test-cluster-tikv-2 1262:	waiting for first consumer to be created before binding
13:22:11 PersistentVolumeClaim tikv-test-cluster-tikv-2 1275:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
13:22:11 PersistentVolumeClaim tikv-test-cluster-tikv-2 1275:	External provisioner is provisioning volume for claim "acto-namespace/tikv-test-cluster-tikv-2"
13:22:16 PersistentVolumeClaim tikv-test-cluster-tikv-2 1275:	Successfully provisioned volume pvc-60861f2a-b491-4cee-ae5d-7b07c1147125
