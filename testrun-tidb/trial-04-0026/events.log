14:38:48 PersistentVolumeClaim pd-test-cluster-pd-0 1028:	waiting for first consumer to be created before binding
14:38:48 PersistentVolumeClaim pd-test-cluster-pd-0 1039:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
14:38:48 PersistentVolumeClaim pd-test-cluster-pd-0 1039:	External provisioner is provisioning volume for claim "acto-namespace/pd-test-cluster-pd-0"
14:38:52 PersistentVolumeClaim pd-test-cluster-pd-0 1039:	Successfully provisioned volume pvc-429a345e-d8be-4001-b100-8f96384330ad
14:38:48 PersistentVolumeClaim pd-test-cluster-pd-1 1031:	waiting for first consumer to be created before binding
14:38:48 PersistentVolumeClaim pd-test-cluster-pd-1 1048:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
14:38:48 PersistentVolumeClaim pd-test-cluster-pd-1 1048:	External provisioner is provisioning volume for claim "acto-namespace/pd-test-cluster-pd-1"
14:38:52 PersistentVolumeClaim pd-test-cluster-pd-1 1048:	Successfully provisioned volume pvc-7469cf09-73d7-4c55-8286-231d27420228
14:38:48 PersistentVolumeClaim pd-test-cluster-pd-2 1042:	waiting for first consumer to be created before binding
14:38:48 PersistentVolumeClaim pd-test-cluster-pd-2 1054:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
14:38:48 PersistentVolumeClaim pd-test-cluster-pd-2 1054:	External provisioner is provisioning volume for claim "acto-namespace/pd-test-cluster-pd-2"
14:38:53 PersistentVolumeClaim pd-test-cluster-pd-2 1054:	Successfully provisioned volume pvc-9fb97553-9812-4ec1-b901-13990245989f
14:38:48 Pod test-cluster-discovery-779bb58fc7-qgd4w 999:	Successfully assigned acto-namespace/test-cluster-discovery-779bb58fc7-qgd4w to acto-cluster-4-worker3
14:38:48 Pod test-cluster-discovery-779bb58fc7-qgd4w 1002:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
14:38:48 Pod test-cluster-discovery-779bb58fc7-qgd4w 1002:	Created container discovery
14:38:48 Pod test-cluster-discovery-779bb58fc7-qgd4w 1002:	Started container discovery
14:38:48 ReplicaSet test-cluster-discovery-779bb58fc7 994:	Created pod: test-cluster-discovery-779bb58fc7-qgd4w
14:38:48 Deployment test-cluster-discovery 993:	Scaled up replica set test-cluster-discovery-779bb58fc7 to 1
14:38:52 Pod test-cluster-pd-0 1030:	Successfully assigned acto-namespace/test-cluster-pd-0 to acto-cluster-4-worker2
14:38:53 Pod test-cluster-pd-0 1133:	Container image "pingcap/pd:v5.4.0" already present on machine
14:38:53 Pod test-cluster-pd-0 1133:	Created container pd
14:38:53 Pod test-cluster-pd-0 1133:	Started container pd
14:38:52 Pod test-cluster-pd-1 1038:	Successfully assigned acto-namespace/test-cluster-pd-1 to acto-cluster-4-worker3
14:38:53 Pod test-cluster-pd-1 1134:	Container image "pingcap/pd:v5.4.0" already present on machine
14:38:53 Pod test-cluster-pd-1 1134:	Created container pd
14:38:53 Pod test-cluster-pd-1 1134:	Started container pd
14:38:53 Pod test-cluster-pd-2 1046:	Successfully assigned acto-namespace/test-cluster-pd-2 to acto-cluster-4-worker
14:38:54 Pod test-cluster-pd-2 1155:	Container image "pingcap/pd:v5.4.0" already present on machine
14:38:54 Pod test-cluster-pd-2 1155:	Created container pd
14:38:54 Pod test-cluster-pd-2 1155:	Started container pd
14:38:48 StatefulSet test-cluster-pd 1025:	create Claim pd-test-cluster-pd-0 Pod test-cluster-pd-0 in StatefulSet test-cluster-pd success
14:38:48 StatefulSet test-cluster-pd 1025:	create Pod test-cluster-pd-0 in StatefulSet test-cluster-pd successful
14:38:48 StatefulSet test-cluster-pd 1025:	create Claim pd-test-cluster-pd-1 Pod test-cluster-pd-1 in StatefulSet test-cluster-pd success
14:38:48 StatefulSet test-cluster-pd 1025:	create Pod test-cluster-pd-1 in StatefulSet test-cluster-pd successful
14:38:48 StatefulSet test-cluster-pd 1025:	create Claim pd-test-cluster-pd-2 Pod test-cluster-pd-2 in StatefulSet test-cluster-pd success
14:38:48 StatefulSet test-cluster-pd 1025:	create Pod test-cluster-pd-2 in StatefulSet test-cluster-pd successful
14:39:47 Pod test-cluster-tidb-0 1525:	Successfully assigned acto-namespace/test-cluster-tidb-0 to acto-cluster-4-worker2
14:39:48 Pod test-cluster-tidb-0 1529:	Container image "busybox:1.34.1" already present on machine
14:39:48 Pod test-cluster-tidb-0 1529:	Created container slowlog
14:39:48 Pod test-cluster-tidb-0 1529:	Started container slowlog
14:39:48 Pod test-cluster-tidb-0 1529:	Container image "pingcap/tidb:v5.4.0" already present on machine
14:39:48 Pod test-cluster-tidb-0 1529:	Created container tidb
14:39:48 Pod test-cluster-tidb-0 1529:	Started container tidb
14:39:47 Pod test-cluster-tidb-1 1532:	Successfully assigned acto-namespace/test-cluster-tidb-1 to acto-cluster-4-worker
14:39:48 Pod test-cluster-tidb-1 1535:	Container image "busybox:1.34.1" already present on machine
14:39:48 Pod test-cluster-tidb-1 1535:	Created container slowlog
14:39:48 Pod test-cluster-tidb-1 1535:	Started container slowlog
14:39:48 Pod test-cluster-tidb-1 1535:	Container image "pingcap/tidb:v5.4.0" already present on machine
14:39:48 Pod test-cluster-tidb-1 1535:	Created container tidb
14:39:48 Pod test-cluster-tidb-1 1535:	Started container tidb
14:39:47 Pod test-cluster-tidb-2 1536:	Successfully assigned acto-namespace/test-cluster-tidb-2 to acto-cluster-4-worker3
14:39:48 Pod test-cluster-tidb-2 1541:	Container image "busybox:1.34.1" already present on machine
14:39:48 Pod test-cluster-tidb-2 1541:	Created container slowlog
14:39:48 Pod test-cluster-tidb-2 1541:	Started container slowlog
14:39:48 Pod test-cluster-tidb-2 1541:	Container image "pingcap/tidb:v5.4.0" already present on machine
14:39:48 Pod test-cluster-tidb-2 1541:	Created container tidb
14:39:48 Pod test-cluster-tidb-2 1541:	Started container tidb
14:41:09 Pod test-cluster-tidb-2 1541:	Stopping container slowlog
14:41:09 Pod test-cluster-tidb-2 1541:	Stopping container tidb
14:51:13 Pod test-cluster-tidb-2 3480:	Successfully assigned acto-namespace/test-cluster-tidb-2 to acto-cluster-4-worker3
14:51:14 Pod test-cluster-tidb-2 3481:	Container image "busybox:1.34.1" already present on machine
14:51:14 Pod test-cluster-tidb-2 3481:	Created container slowlog
14:51:14 Pod test-cluster-tidb-2 3481:	Started container slowlog
14:51:14 Pod test-cluster-tidb-2 3481:	Container image "pingcap/tidb:v5.4.0" already present on machine
14:51:14 Pod test-cluster-tidb-2 3481:	Created container tidb
14:51:14 Pod test-cluster-tidb-2 3481:	Started container tidb
14:39:47 StatefulSet test-cluster-tidb 1521:	create Pod test-cluster-tidb-0 in StatefulSet test-cluster-tidb successful
14:39:47 StatefulSet test-cluster-tidb 1521:	create Pod test-cluster-tidb-1 in StatefulSet test-cluster-tidb successful
14:39:47 StatefulSet test-cluster-tidb 1521:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb successful
14:40:07 Endpoints test-cluster-tidb 1586:	Failed to update endpoint acto-namespace/test-cluster-tidb: Operation cannot be fulfilled on endpoints "test-cluster-tidb": the object has been modified; please apply your changes to the latest version and try again
14:41:09 StatefulSet test-cluster-tidb 1855:	delete Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb successful
14:41:40 StatefulSet test-cluster-tidb 1857:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01bc56550)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc01937e7e0), PreStop:(*core.Handler)(0xc01937e810)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01937e7b0), HTTPGet:(*core.HTTPGetAction)(0xc015df90a0), TCPSocket:(*core.TCPSocketAction)(0xc01922a810)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01937e7c8), HTTPGet:(*core.HTTPGetAction)(0xc015df9110), TCPSocket:(*core.TCPSocketAction)(0xc01922a840)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01937e930), HTTPGet:(*core.HTTPGetAction)(0xc015df9260), TCPSocket:(*core.TCPSocketAction)(0xc01922a900)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:41:40 StatefulSet test-cluster-tidb 1965:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01d60c170)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc0125d4408), PreStop:(*core.Handler)(0xc0125d4438)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0125d43d8), HTTPGet:(*core.HTTPGetAction)(0xc00ed11960), TCPSocket:(*core.TCPSocketAction)(0xc0196f1f80)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0125d43f0), HTTPGet:(*core.HTTPGetAction)(0xc00ed119d0), TCPSocket:(*core.TCPSocketAction)(0xc0196f1fb0)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0125d45b8), HTTPGet:(*core.HTTPGetAction)(0xc00ed11b20), TCPSocket:(*core.TCPSocketAction)(0xc019944090)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:41:40 StatefulSet test-cluster-tidb 1965:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01d670fd0)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00d766d98), PreStop:(*core.Handler)(0xc00d766dc8)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00d766d68), HTTPGet:(*core.HTTPGetAction)(0xc018e3b5e0), TCPSocket:(*core.TCPSocketAction)(0xc01914c720)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00d766d80), HTTPGet:(*core.HTTPGetAction)(0xc018e3b650), TCPSocket:(*core.TCPSocketAction)(0xc01914c750)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00d766ee8), HTTPGet:(*core.HTTPGetAction)(0xc018e3b7a0), TCPSocket:(*core.TCPSocketAction)(0xc01914c810)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:41:40 StatefulSet test-cluster-tidb 1965:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01a59ba80)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc01c35e888), PreStop:(*core.Handler)(0xc01c35e8b8)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01c35e858), HTTPGet:(*core.HTTPGetAction)(0xc01a5a8310), TCPSocket:(*core.TCPSocketAction)(0xc01a5be600)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01c35e870), HTTPGet:(*core.HTTPGetAction)(0xc01a5a8380), TCPSocket:(*core.TCPSocketAction)(0xc01a5be630)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01c35e9d8), HTTPGet:(*core.HTTPGetAction)(0xc01a5a84d0), TCPSocket:(*core.TCPSocketAction)(0xc01a5be6f0)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:41:40 StatefulSet test-cluster-tidb 1965:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01ad78130)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc019431350), PreStop:(*core.Handler)(0xc019431380)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0194312c0), HTTPGet:(*core.HTTPGetAction)(0xc018aca930), TCPSocket:(*core.TCPSocketAction)(0xc01ab183f0)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc019431338), HTTPGet:(*core.HTTPGetAction)(0xc018aca9a0), TCPSocket:(*core.TCPSocketAction)(0xc01ab18420)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0194314a0), HTTPGet:(*core.HTTPGetAction)(0xc018acaaf0), TCPSocket:(*core.TCPSocketAction)(0xc01ab184e0)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:41:40 StatefulSet test-cluster-tidb 1965:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01bff7110)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc01befd050), PreStop:(*core.Handler)(0xc01befd0e0)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01befd020), HTTPGet:(*core.HTTPGetAction)(0xc01aace700), TCPSocket:(*core.TCPSocketAction)(0xc01aaedf20)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01befd038), HTTPGet:(*core.HTTPGetAction)(0xc01aace770), TCPSocket:(*core.TCPSocketAction)(0xc01aaedf50)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01befd230), HTTPGet:(*core.HTTPGetAction)(0xc01aace8c0), TCPSocket:(*core.TCPSocketAction)(0xc01ad1c030)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:41:41 StatefulSet test-cluster-tidb 1965:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01c415100)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc01c738c00), PreStop:(*core.Handler)(0xc01c738c30)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01c738bd0), HTTPGet:(*core.HTTPGetAction)(0xc01a970bd0), TCPSocket:(*core.TCPSocketAction)(0xc01af815f0)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01c738be8), HTTPGet:(*core.HTTPGetAction)(0xc01a970c40), TCPSocket:(*core.TCPSocketAction)(0xc01af81620)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01c738d50), HTTPGet:(*core.HTTPGetAction)(0xc01a970d90), TCPSocket:(*core.TCPSocketAction)(0xc01af816e0)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:41:41 StatefulSet test-cluster-tidb 1965:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01da0ea30)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc01be694a0), PreStop:(*core.Handler)(0xc01be694d0)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01be69470), HTTPGet:(*core.HTTPGetAction)(0xc01aacf420), TCPSocket:(*core.TCPSocketAction)(0xc01b05ec60)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01be69488), HTTPGet:(*core.HTTPGetAction)(0xc01aacf490), TCPSocket:(*core.TCPSocketAction)(0xc01b05ec90)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01be695f0), HTTPGet:(*core.HTTPGetAction)(0xc01aacf5e0), TCPSocket:(*core.TCPSocketAction)(0xc01b05ed50)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:41:42 StatefulSet test-cluster-tidb 1965:	create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01dde0880)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc01c70cdb0), PreStop:(*core.Handler)(0xc01c70cde0)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01c70cd80), HTTPGet:(*core.HTTPGetAction)(0xc01951ef50), TCPSocket:(*core.TCPSocketAction)(0xc01987dc50)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01c70cd98), HTTPGet:(*core.HTTPGetAction)(0xc01951efc0), TCPSocket:(*core.TCPSocketAction)(0xc01987dc80)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01c70cf00), HTTPGet:(*core.HTTPGetAction)(0xc01951f110), TCPSocket:(*core.TCPSocketAction)(0xc01987dd40)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:41:43 StatefulSet test-cluster-tidb 1965:	(combined from similar events): create Pod test-cluster-tidb-2 in StatefulSet test-cluster-tidb failed error: Pod "test-cluster-tidb-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].image: Required value, spec.initContainers[0].lifecycle.postStart.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].lifecycle.preStop.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.exec.command: Required value, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[4].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[4].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[4].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc008d9fab0)}: can only be set when seccomp type is Localhost, spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc007476048), PreStop:(*core.Handler)(0xc007476078)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc007476018), HTTPGet:(*core.HTTPGetAction)(0xc011ee5730), TCPSocket:(*core.TCPSocketAction)(0xc01a0a4e40)}, InitialDelaySeconds:1, TimeoutSeconds:1, PeriodSeconds:10, SuccessThreshold:1, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc007476030), HTTPGet:(*core.HTTPGetAction)(0xc011ee57a0), TCPSocket:(*core.TCPSocketAction)(0xc01a0a4e70)}, InitialDelaySeconds:5, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:5, FailureThreshold:5, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0074761c8), HTTPGet:(*core.HTTPGetAction)(0xc011ee58f0), TCPSocket:(*core.TCPSocketAction)(0xc01a0a4f30)}, InitialDelaySeconds:4, TimeoutSeconds:5, PeriodSeconds:10, SuccessThreshold:4, FailureThreshold:2, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
14:39:14 Pod test-cluster-tikv-0 1256:	Successfully assigned acto-namespace/test-cluster-tikv-0 to acto-cluster-4-worker2
14:39:14 Pod test-cluster-tikv-0 1364:	Container image "busybox:1.34.1" already present on machine
14:39:14 Pod test-cluster-tikv-0 1364:	Created container raftlog
14:39:15 Pod test-cluster-tikv-0 1364:	Started container raftlog
14:39:15 Pod test-cluster-tikv-0 1364:	Container image "pingcap/tikv:v5.4.0" already present on machine
14:39:15 Pod test-cluster-tikv-0 1364:	Created container tikv
14:39:15 Pod test-cluster-tikv-0 1364:	Started container tikv
14:39:13 Pod test-cluster-tikv-1 1263:	Successfully assigned acto-namespace/test-cluster-tikv-1 to acto-cluster-4-worker3
14:39:13 Pod test-cluster-tikv-1 1341:	Container image "busybox:1.34.1" already present on machine
14:39:13 Pod test-cluster-tikv-1 1341:	Created container raftlog
14:39:13 Pod test-cluster-tikv-1 1341:	Started container raftlog
14:39:13 Pod test-cluster-tikv-1 1341:	Container image "pingcap/tikv:v5.4.0" already present on machine
14:39:13 Pod test-cluster-tikv-1 1341:	Created container tikv
14:39:14 Pod test-cluster-tikv-1 1341:	Started container tikv
14:39:14 Pod test-cluster-tikv-2 1272:	Successfully assigned acto-namespace/test-cluster-tikv-2 to acto-cluster-4-worker
14:39:14 Pod test-cluster-tikv-2 1366:	Container image "busybox:1.34.1" already present on machine
14:39:14 Pod test-cluster-tikv-2 1366:	Created container raftlog
14:39:15 Pod test-cluster-tikv-2 1366:	Started container raftlog
14:39:15 Pod test-cluster-tikv-2 1366:	Container image "pingcap/tikv:v5.4.0" already present on machine
14:39:15 Pod test-cluster-tikv-2 1366:	Created container tikv
14:39:15 Pod test-cluster-tikv-2 1366:	Started container tikv
14:39:09 StatefulSet test-cluster-tikv 1249:	create Claim tikv-test-cluster-tikv-0 Pod test-cluster-tikv-0 in StatefulSet test-cluster-tikv success
14:39:09 StatefulSet test-cluster-tikv 1249:	create Pod test-cluster-tikv-0 in StatefulSet test-cluster-tikv successful
14:39:09 StatefulSet test-cluster-tikv 1249:	create Claim tikv-test-cluster-tikv-1 Pod test-cluster-tikv-1 in StatefulSet test-cluster-tikv success
14:39:09 StatefulSet test-cluster-tikv 1249:	create Pod test-cluster-tikv-1 in StatefulSet test-cluster-tikv successful
14:39:09 StatefulSet test-cluster-tikv 1249:	create Claim tikv-test-cluster-tikv-2 Pod test-cluster-tikv-2 in StatefulSet test-cluster-tikv success
14:39:09 StatefulSet test-cluster-tikv 1249:	create Pod test-cluster-tikv-2 in StatefulSet test-cluster-tikv successful
14:38:48 TidbCluster test-cluster 950:	create Role/test-cluster-discovery for controller TidbCluster/test-cluster successfully
14:38:48 TidbCluster test-cluster 950:	create ServiceAccount/test-cluster-discovery for controller TidbCluster/test-cluster successfully
14:38:48 TidbCluster test-cluster 950:	create RoleBinding/test-cluster-discovery for controller TidbCluster/test-cluster successfully
14:38:48 TidbCluster test-cluster 950:	create Deployment/test-cluster-discovery for controller TidbCluster/test-cluster successfully
14:38:48 TidbCluster test-cluster 950:	create Service/test-cluster-discovery for controller TidbCluster/test-cluster successfully
14:38:48 TidbCluster test-cluster 950:	create Service test-cluster-pd in TidbCluster test-cluster successful
14:38:48 TidbCluster test-cluster 950:	create Service test-cluster-pd-peer in TidbCluster test-cluster successful
14:38:48 TidbCluster test-cluster 950:	create ConfigMap/test-cluster-pd-3731616 for controller TidbCluster/test-cluster successfully
14:38:48 TidbCluster test-cluster 950:	create StatefulSet test-cluster-pd in TidbCluster test-cluster successful
14:38:54 TidbCluster test-cluster 1070:	patch PV pvc-9fb97553-9812-4ec1-b901-13990245989f in TidbCluster test-cluster successful
14:38:54 TidbCluster test-cluster 1070:	patch PV pvc-429a345e-d8be-4001-b100-8f96384330ad in TidbCluster test-cluster successful
14:38:54 TidbCluster test-cluster 1070:	patch PV pvc-7469cf09-73d7-4c55-8286-231d27420228 in TidbCluster test-cluster successful
14:39:09 TidbCluster test-cluster 1195:	create Service test-cluster-tikv-peer in  test-cluster successful
14:39:09 TidbCluster test-cluster 1195:	create ConfigMap/test-cluster-tikv-3831336 for controller TidbCluster/test-cluster successfully
14:39:09 TidbCluster test-cluster 1195:	create StatefulSet test-cluster-tikv in  test-cluster successful
14:39:14 TidbCluster test-cluster 1320:	patch PV pvc-f384b923-463c-478d-9399-4e4930e2b320 in TidbCluster test-cluster successful
14:39:14 TidbCluster test-cluster 1320:	patch PV pvc-76cc257c-6dbb-4da3-9917-b1ae0fda6592 in TidbCluster test-cluster successful
14:39:14 TidbCluster test-cluster 1320:	patch PV pvc-83fddb47-c83b-4249-b181-e147c56480b4 in TidbCluster test-cluster successful
14:39:47 TidbCluster test-cluster 1428:	create Service test-cluster-tidb-peer in  test-cluster successful
14:39:47 TidbCluster test-cluster 1428:	create Service test-cluster-tidb in  test-cluster successful
14:39:47 TidbCluster test-cluster 1428:	create ConfigMap/test-cluster-tidb-6662316 for controller TidbCluster/test-cluster successfully
14:39:47 TidbCluster test-cluster 1428:	create StatefulSet test-cluster-tidb in  test-cluster successful
14:37:59 Pod tidb-controller-manager-7445bc9f7c-86l5v 771:	Successfully assigned acto-namespace/tidb-controller-manager-7445bc9f7c-86l5v to acto-cluster-4-worker3
14:37:59 Pod tidb-controller-manager-7445bc9f7c-86l5v 775:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
14:37:59 Pod tidb-controller-manager-7445bc9f7c-86l5v 775:	Created container tidb-operator
14:37:59 Pod tidb-controller-manager-7445bc9f7c-86l5v 775:	Started container tidb-operator
14:38:30 Pod tidb-controller-manager-7445bc9f7c-86l5v 775:	Stopping container tidb-operator
14:37:59 ReplicaSet tidb-controller-manager-7445bc9f7c 767:	Created pod: tidb-controller-manager-7445bc9f7c-86l5v
14:38:30 ReplicaSet tidb-controller-manager-7445bc9f7c 925:	Deleted pod: tidb-controller-manager-7445bc9f7c-86l5v
14:38:29 Pod tidb-controller-manager-75dd8c56c9-v9hlq 887:	Successfully assigned acto-namespace/tidb-controller-manager-75dd8c56c9-v9hlq to acto-cluster-4-worker
14:38:29 Pod tidb-controller-manager-75dd8c56c9-v9hlq 889:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
14:38:29 Pod tidb-controller-manager-75dd8c56c9-v9hlq 889:	Created container tidb-operator
14:38:30 Pod tidb-controller-manager-75dd8c56c9-v9hlq 889:	Started container tidb-operator
14:38:29 ReplicaSet tidb-controller-manager-75dd8c56c9 884:	Created pod: tidb-controller-manager-75dd8c56c9-v9hlq
14:37:59 Deployment tidb-controller-manager 765:	Scaled up replica set tidb-controller-manager-7445bc9f7c to 1
14:38:29 Deployment tidb-controller-manager 882:	Scaled up replica set tidb-controller-manager-75dd8c56c9 to 1
14:38:30 Deployment tidb-controller-manager 904:	Scaled down replica set tidb-controller-manager-7445bc9f7c to 0
14:37:59 Pod tidb-scheduler-5f855998fd-j4t6x 773:	Successfully assigned acto-namespace/tidb-scheduler-5f855998fd-j4t6x to acto-cluster-4-worker3
14:37:59 Pod tidb-scheduler-5f855998fd-j4t6x 779:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
14:37:59 Pod tidb-scheduler-5f855998fd-j4t6x 779:	Created container tidb-scheduler
14:37:59 Pod tidb-scheduler-5f855998fd-j4t6x 779:	Started container tidb-scheduler
14:37:59 Pod tidb-scheduler-5f855998fd-j4t6x 779:	Container image "k8s.gcr.io/kube-scheduler:v1.22.9" already present on machine
14:38:00 Pod tidb-scheduler-5f855998fd-j4t6x 779:	Created container kube-scheduler
14:38:00 Pod tidb-scheduler-5f855998fd-j4t6x 779:	Started container kube-scheduler
14:38:31 Pod tidb-scheduler-5f855998fd-j4t6x 779:	Stopping container tidb-scheduler
14:38:31 Pod tidb-scheduler-5f855998fd-j4t6x 779:	Stopping container kube-scheduler
14:37:59 ReplicaSet tidb-scheduler-5f855998fd 769:	Created pod: tidb-scheduler-5f855998fd-j4t6x
14:38:31 ReplicaSet tidb-scheduler-5f855998fd 938:	Deleted pod: tidb-scheduler-5f855998fd-j4t6x
14:38:29 Pod tidb-scheduler-77fb4766d8-cgz2h 896:	Successfully assigned acto-namespace/tidb-scheduler-77fb4766d8-cgz2h to acto-cluster-4-worker3
14:38:29 Pod tidb-scheduler-77fb4766d8-cgz2h 899:	Container image "pingcap/tidb-operator:v1.3.2" already present on machine
14:38:29 Pod tidb-scheduler-77fb4766d8-cgz2h 899:	Created container tidb-scheduler
14:38:30 Pod tidb-scheduler-77fb4766d8-cgz2h 899:	Started container tidb-scheduler
14:38:30 Pod tidb-scheduler-77fb4766d8-cgz2h 899:	Container image "k8s.gcr.io/kube-scheduler:v1.22.9" already present on machine
14:38:30 Pod tidb-scheduler-77fb4766d8-cgz2h 899:	Created container kube-scheduler
14:38:30 Pod tidb-scheduler-77fb4766d8-cgz2h 899:	Started container kube-scheduler
14:38:29 ReplicaSet tidb-scheduler-77fb4766d8 893:	Created pod: tidb-scheduler-77fb4766d8-cgz2h
14:37:59 Deployment tidb-scheduler 766:	Scaled up replica set tidb-scheduler-5f855998fd to 1
14:38:07 Lease tidb-scheduler 824:	tidb-scheduler-5f855998fd-j4t6x_195e87f5-c6b8-46b6-8893-624528f51e69 became leader
14:38:29 Deployment tidb-scheduler 890:	Scaled up replica set tidb-scheduler-77fb4766d8 to 1
14:38:31 Deployment tidb-scheduler 908:	Scaled down replica set tidb-scheduler-5f855998fd to 0
14:38:38 Lease tidb-scheduler 965:	tidb-scheduler-77fb4766d8-cgz2h_503a8a06-7587-415e-94c4-17148012f433 became leader
14:39:09 PersistentVolumeClaim tikv-test-cluster-tikv-0 1253:	waiting for first consumer to be created before binding
14:39:09 PersistentVolumeClaim tikv-test-cluster-tikv-0 1264:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
14:39:09 PersistentVolumeClaim tikv-test-cluster-tikv-0 1264:	External provisioner is provisioning volume for claim "acto-namespace/tikv-test-cluster-tikv-0"
14:39:13 PersistentVolumeClaim tikv-test-cluster-tikv-0 1264:	Successfully provisioned volume pvc-f384b923-463c-478d-9399-4e4930e2b320
14:39:09 PersistentVolumeClaim tikv-test-cluster-tikv-1 1257:	waiting for first consumer to be created before binding
14:39:09 PersistentVolumeClaim tikv-test-cluster-tikv-1 1271:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
14:39:09 PersistentVolumeClaim tikv-test-cluster-tikv-1 1271:	External provisioner is provisioning volume for claim "acto-namespace/tikv-test-cluster-tikv-1"
14:39:12 PersistentVolumeClaim tikv-test-cluster-tikv-1 1271:	Successfully provisioned volume pvc-76cc257c-6dbb-4da3-9917-b1ae0fda6592
14:39:09 PersistentVolumeClaim tikv-test-cluster-tikv-2 1266:	waiting for first consumer to be created before binding
14:39:09 PersistentVolumeClaim tikv-test-cluster-tikv-2 1281:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
14:39:09 PersistentVolumeClaim tikv-test-cluster-tikv-2 1281:	External provisioner is provisioning volume for claim "acto-namespace/tikv-test-cluster-tikv-2"
14:39:13 PersistentVolumeClaim tikv-test-cluster-tikv-2 1281:	Successfully provisioned volume pvc-83fddb47-c83b-4249-b181-e147c56480b4
