  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:29:03.067488       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:29:03.073007       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:29:04.201015       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:29:04.201044       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:29:04.205740       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:29:06.322254       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:29:06.322295       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:29:06.327797       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:29:10.437384       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:29:10.437436       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:29:10.442488       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:29:18.555279       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:29:18.555328       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:29:18.560393       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:29:27.731534       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:29:27.731569       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:29:27.735798       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:29:34.655735       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:29:34.655772       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:29:34.660081       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:29:57.739380       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:29:57.739424       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:29:57.743725       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing

