  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:33:12.565490       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:33:12.570367       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:33:13.694860       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:33:13.694909       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:33:13.701155       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:33:15.819732       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:33:15.819776       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:33:15.824410       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:33:19.951589       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:33:19.951632       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:33:19.956584       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:33:27.746230       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:33:27.746281       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:33:27.753208       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:33:28.074079       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:33:28.074118       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:33:28.078360       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:33:57.741645       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:33:57.741679       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:33:57.747342       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:34:00.187115       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   5,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:34:00.187199       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:34:00.192436       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing

