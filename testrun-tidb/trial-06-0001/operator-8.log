  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   1,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:35:17.804094       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:35:17.810004       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:35:18.924624       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   1,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:35:18.924683       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:35:18.930140       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:35:21.047887       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   1,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:35:21.047963       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:35:21.054644       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:35:25.179793       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   1,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:35:25.179841       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:35:25.185167       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:35:27.750127       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   1,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:35:27.750181       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:35:27.756381       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:35:33.304237       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   1,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:35:33.304285       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:35:33.309163       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:35:57.737689       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   1,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:35:57.737737       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:35:57.743398       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing
I0402 07:36:05.423669       1 equality.go:87] Service spec diff for acto-namespace/test-cluster-tidb:   v1.ServiceSpec{
  	Ports: []v1.ServicePort{
  		{Name: "mysql-client", Protocol: "TCP", Port: 4000, TargetPort: {IntVal: 4000}, ...},
  		{
  			... // 3 identical fields
  			Port:       10080,
  			TargetPort: {IntVal: 10080},
- 			NodePort:   0,
+ 			NodePort:   1,
  		},
  	},
  	Selector:  {"app.kubernetes.io/component": "tidb", "app.kubernetes.io/instance": "test-cluster", "app.kubernetes.io/managed-by": "tidb-operator", "app.kubernetes.io/name": "tidb-cluster"},
  	ClusterIP: "",
  	... // 12 identical fields
  }
I0402 07:36:05.423708       1 tidb_member_manager.go:442] Sync TiDB service acto-namespace/test-cluster-tidb, spec equal: false, annotations equal: true, label equal: true
E0402 07:36:05.428082       1 tidb_cluster_controller.go:126] TidbCluster: acto-namespace/test-cluster, sync failed Service "test-cluster-tidb" is invalid: spec.ports[1].nodePort: Forbidden: may not be used when `type` is 'ClusterIP', requeuing

