06:00:28 Pod acto-test-operator-zookeeper-operator-658b9fbcfb-hb4x6 731:	Successfully assigned acto-namespace/acto-test-operator-zookeeper-operator-658b9fbcfb-hb4x6 to acto-cluster-7-worker2
06:00:28 Pod acto-test-operator-zookeeper-operator-658b9fbcfb-hb4x6 734:	Container image "pravega/zookeeper-operator:0.2.13" already present on machine
06:00:28 Pod acto-test-operator-zookeeper-operator-658b9fbcfb-hb4x6 734:	Created container acto-test-operator-zookeeper-operator
06:00:29 Pod acto-test-operator-zookeeper-operator-658b9fbcfb-hb4x6 734:	Started container acto-test-operator-zookeeper-operator
06:00:28 ReplicaSet acto-test-operator-zookeeper-operator-658b9fbcfb 727:	Created pod: acto-test-operator-zookeeper-operator-658b9fbcfb-hb4x6
06:00:28 Deployment acto-test-operator-zookeeper-operator 726:	Scaled up replica set acto-test-operator-zookeeper-operator-658b9fbcfb to 1
06:01:01 PersistentVolumeClaim data-test-cluster-0 828:	waiting for first consumer to be created before binding
06:01:01 PersistentVolumeClaim data-test-cluster-0 838:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
06:01:01 PersistentVolumeClaim data-test-cluster-0 838:	External provisioner is provisioning volume for claim "acto-namespace/data-test-cluster-0"
06:01:05 PersistentVolumeClaim data-test-cluster-0 838:	Successfully provisioned volume pvc-774f5836-a879-4921-afc7-1f3f0524cbda
06:01:26 PersistentVolumeClaim data-test-cluster-1 920:	waiting for first consumer to be created before binding
06:01:26 PersistentVolumeClaim data-test-cluster-1 927:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
06:01:26 PersistentVolumeClaim data-test-cluster-1 927:	External provisioner is provisioning volume for claim "acto-namespace/data-test-cluster-1"
06:01:30 PersistentVolumeClaim data-test-cluster-1 927:	Successfully provisioned volume pvc-3b629478-7380-494c-b148-9fcdd1cdbafc
06:02:14 PersistentVolumeClaim data-test-cluster-2 1055:	waiting for first consumer to be created before binding
06:02:14 PersistentVolumeClaim data-test-cluster-2 1062:	waiting for a volume to be created, either by external provisioner "rancher.io/local-path" or manually created by system administrator
06:02:14 PersistentVolumeClaim data-test-cluster-2 1062:	External provisioner is provisioning volume for claim "acto-namespace/data-test-cluster-2"
06:02:19 PersistentVolumeClaim data-test-cluster-2 1062:	Successfully provisioned volume pvc-6159c35c-6956-49a7-b83f-f946864d0d5b
06:01:06 Pod test-cluster-0 830:	Successfully assigned acto-namespace/test-cluster-0 to acto-cluster-7-worker3
06:01:06 Pod test-cluster-0 868:	Container image "pravega/zookeeper:0.2.14" already present on machine
06:01:07 Pod test-cluster-0 868:	Created container zookeeper
06:01:07 Pod test-cluster-0 868:	Started container zookeeper
06:01:31 Pod test-cluster-1 923:	Successfully assigned acto-namespace/test-cluster-1 to acto-cluster-7-worker2
06:01:32 Pod test-cluster-1 954:	Container image "pravega/zookeeper:0.2.14" already present on machine
06:01:32 Pod test-cluster-1 954:	Created container zookeeper
06:01:32 Pod test-cluster-1 954:	Started container zookeeper
06:01:34 Pod test-cluster-1 954:	Back-off restarting failed container
06:02:20 Pod test-cluster-2 1056:	Successfully assigned acto-namespace/test-cluster-2 to acto-cluster-7-worker
06:02:20 Pod test-cluster-2 1086:	Container image "pravega/zookeeper:0.2.14" already present on machine
06:02:20 Pod test-cluster-2 1086:	Created container zookeeper
06:02:21 Pod test-cluster-2 1086:	Started container zookeeper
06:03:24 Pod test-cluster-2 1086:	Stopping container zookeeper
06:13:28 Pod test-cluster-2 2181:	Successfully assigned acto-namespace/test-cluster-2 to acto-cluster-7-worker
06:13:29 Pod test-cluster-2 2183:	Container image "pravega/zookeeper:0.2.14" already present on machine
06:13:29 Pod test-cluster-2 2183:	Created container zookeeper
06:13:29 Pod test-cluster-2 2183:	Started container zookeeper
06:01:01 StatefulSet test-cluster 815:	create Claim data-test-cluster-0 Pod test-cluster-0 in StatefulSet test-cluster success
06:01:01 StatefulSet test-cluster 815:	create Pod test-cluster-0 in StatefulSet test-cluster successful
06:01:26 StatefulSet test-cluster 852:	create Claim data-test-cluster-1 Pod test-cluster-1 in StatefulSet test-cluster success
06:01:26 StatefulSet test-cluster 852:	create Pod test-cluster-1 in StatefulSet test-cluster successful
06:02:14 StatefulSet test-cluster 1029:	create Claim data-test-cluster-2 Pod test-cluster-2 in StatefulSet test-cluster success
06:02:14 StatefulSet test-cluster 1029:	create Pod test-cluster-2 in StatefulSet test-cluster successful
06:03:24 StatefulSet test-cluster 1212:	delete Pod test-cluster-2 in StatefulSet test-cluster successful
06:03:55 StatefulSet test-cluster 1282:	create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc012b28050)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc0124c2fd8), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0124c2fa8), HTTPGet:(*core.HTTPGetAction)(0xc0117f0770), TCPSocket:(*core.TCPSocketAction)(0xc0119150b0)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0124c2fc0), HTTPGet:(*core.HTTPGetAction)(0xc0117f07e0), TCPSocket:(*core.TCPSocketAction)(0xc0119150e0)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0124c30b0), HTTPGet:(*core.HTTPGetAction)(0xc0117f08c0), TCPSocket:(*core.TCPSocketAction)(0xc011915170)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:03:55 StatefulSet test-cluster 1282:	create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc012d54270)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc012035560), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc012035530), HTTPGet:(*core.HTTPGetAction)(0xc01163dd50), TCPSocket:(*core.TCPSocketAction)(0xc0118baa20)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc012035548), HTTPGet:(*core.HTTPGetAction)(0xc01163ddc0), TCPSocket:(*core.TCPSocketAction)(0xc0118baa50)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc012035650), HTTPGet:(*core.HTTPGetAction)(0xc01163dea0), TCPSocket:(*core.TCPSocketAction)(0xc0118baae0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:03:55 StatefulSet test-cluster 1282:	create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc0098ea5e0)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00c6b01c8), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00c6b0198), HTTPGet:(*core.HTTPGetAction)(0xc0082b41c0), TCPSocket:(*core.TCPSocketAction)(0xc0115129f0)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00c6b01b0), HTTPGet:(*core.HTTPGetAction)(0xc0082b4230), TCPSocket:(*core.TCPSocketAction)(0xc011512a20)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00c6b02a0), HTTPGet:(*core.HTTPGetAction)(0xc0082b4380), TCPSocket:(*core.TCPSocketAction)(0xc011512ab0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:03:55 StatefulSet test-cluster 1282:	create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc009226790)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc011f122d0), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc011f122a0), HTTPGet:(*core.HTTPGetAction)(0xc0113d02a0), TCPSocket:(*core.TCPSocketAction)(0xc009be7740)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc011f122b8), HTTPGet:(*core.HTTPGetAction)(0xc0113d0310), TCPSocket:(*core.TCPSocketAction)(0xc009be7770)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc011f123a8), HTTPGet:(*core.HTTPGetAction)(0xc0113d03f0), TCPSocket:(*core.TCPSocketAction)(0xc009be7800)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:03:56 StatefulSet test-cluster 1282:	create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc0129426d0)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc009fd0450), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009fd0420), HTTPGet:(*core.HTTPGetAction)(0xc00f7ec380), TCPSocket:(*core.TCPSocketAction)(0xc011692f30)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009fd0438), HTTPGet:(*core.HTTPGetAction)(0xc00f7ec3f0), TCPSocket:(*core.TCPSocketAction)(0xc011692f60)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc009fd0558), HTTPGet:(*core.HTTPGetAction)(0xc00f7ec4d0), TCPSocket:(*core.TCPSocketAction)(0xc011692ff0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:03:56 StatefulSet test-cluster 1282:	create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc012320a90)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc01241e4e0), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01241e4b0), HTTPGet:(*core.HTTPGetAction)(0xc0117f03f0), TCPSocket:(*core.TCPSocketAction)(0xc011889110)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01241e4c8), HTTPGet:(*core.HTTPGetAction)(0xc0117f0460), TCPSocket:(*core.TCPSocketAction)(0xc011889140)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc01241e5b8), HTTPGet:(*core.HTTPGetAction)(0xc0117f0690), TCPSocket:(*core.TCPSocketAction)(0xc011889200)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:03:56 StatefulSet test-cluster 1282:	create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc009ef3660)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00acc8be8), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00acc8bb8), HTTPGet:(*core.HTTPGetAction)(0xc0078b6540), TCPSocket:(*core.TCPSocketAction)(0xc009423da0)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00acc8bd0), HTTPGet:(*core.HTTPGetAction)(0xc0078b65b0), TCPSocket:(*core.TCPSocketAction)(0xc009423dd0)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00acc8cd8), HTTPGet:(*core.HTTPGetAction)(0xc0078b6690), TCPSocket:(*core.TCPSocketAction)(0xc009423e60)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:03:56 StatefulSet test-cluster 1282:	create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc012b297a0)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00c6b1f38), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00c6b1f08), HTTPGet:(*core.HTTPGetAction)(0xc0082b5340), TCPSocket:(*core.TCPSocketAction)(0xc011b2d800)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00c6b1f20), HTTPGet:(*core.HTTPGetAction)(0xc0082b53b0), TCPSocket:(*core.TCPSocketAction)(0xc011b2d830)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc012490030), HTTPGet:(*core.HTTPGetAction)(0xc0082b5490), TCPSocket:(*core.TCPSocketAction)(0xc011b2d8c0)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:03:57 StatefulSet test-cluster 1282:	create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01163bd10)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc012491518), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0124914e8), HTTPGet:(*core.HTTPGetAction)(0xc0082b5ab0), TCPSocket:(*core.TCPSocketAction)(0xc00b4667b0)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc012491500), HTTPGet:(*core.HTTPGetAction)(0xc0082b5b20), TCPSocket:(*core.TCPSocketAction)(0xc00b4667e0)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc0124915f0), HTTPGet:(*core.HTTPGetAction)(0xc0082b5c00), TCPSocket:(*core.TCPSocketAction)(0xc00b466870)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:03:58 StatefulSet test-cluster 1282:	(combined from similar events): create Pod test-cluster-2 in StatefulSet test-cluster failed error: Pod "test-cluster-2" is invalid: [spec.initContainers[0].name: Invalid value: "ACTOKEY": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?'), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.initContainers[0].lifecycle.postStart.httpGet.port: Invalid value: "ACTOKEY": must contain at least one letter or number (a-z, 0-9), spec.initContainers[0].lifecycle.postStart.httpGet.scheme: Unsupported value: "ACTOKEY": supported values: "HTTP", "HTTPS", spec.initContainers[0].lifecycle.postStart.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.exec.command: Required value, spec.initContainers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].startupProbe.successThreshold: Invalid value: 3: must be 1, spec.initContainers[0].terminationMessagePolicy: Invalid value: "ACTOKEY": must be 'File' or 'FallbackToLogsOnError', spec.initContainers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].readinessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type, spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[0].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[0].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].env[1].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: field label not supported: ACTOKEY, spec.initContainers[0].env[1].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[1].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[1].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[2].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[2].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[2].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[2].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].env[3].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.initContainers[0].env[3].valueFrom.resourceFieldRef.resource: Unsupported value: "ACTOKEY": supported values: "limits.cpu", "limits.ephemeral-storage", "limits.memory", "requests.cpu", "requests.ephemeral-storage", "requests.memory", spec.initContainers[0].env[3].valueFrom.configMapKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].env[3].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[2].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].envFrom[3].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.initContainers[0].volumeMounts[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[0].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[0].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[0].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts.mountPropagation: Unsupported value: "ACTOKEY": supported values: "Bidirectional", "HostToContainer", "None", spec.initContainers[0].volumeMounts[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[1].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[1].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[1].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeMounts[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeMounts[2].name: Invalid value: "ACTOKEY": must not already exist in volumeDevices, spec.initContainers[0].volumeMounts[2].mountPath: Invalid value: "ACTOKEY": must not already exist as a path in volumeDevices, spec.initContainers[0].volumeMounts[2].subPathExpr: Invalid value: "ACTOKEY": subPathExpr and subPath are mutually exclusive, spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[0].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[0].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[1].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[1].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[2].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[2].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Not found: "ACTOKEY", spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must be unique, spec.initContainers[0].volumeDevices[3].name: Invalid value: "ACTOKEY": must not already exist in volumeMounts, spec.initContainers[0].volumeDevices[3].devicePath: Invalid value: "ACTOKEY": must not already exist as a path in volumeMounts, spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc011594690)}: can only be set when seccomp type is Localhost, spec.initContainers[0].lifecycle: Invalid value: core.Lifecycle{PostStart:(*core.Handler)(0xc00962ac00), PreStop:(*core.Handler)(nil)}: must not be set for init containers, spec.initContainers[0].livenessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00962abb8), HTTPGet:(*core.HTTPGetAction)(0xc0082b5340), TCPSocket:(*core.TCPSocketAction)(0xc009c8aa80)}, InitialDelaySeconds:2, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:1, FailureThreshold:1, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].readinessProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00962abe8), HTTPGet:(*core.HTTPGetAction)(0xc0082b53b0), TCPSocket:(*core.TCPSocketAction)(0xc009c8aab0)}, InitialDelaySeconds:0, TimeoutSeconds:4, PeriodSeconds:5, SuccessThreshold:5, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers, spec.initContainers[0].startupProbe: Invalid value: core.Probe{Handler:core.Handler{Exec:(*core.ExecAction)(0xc00962acf0), HTTPGet:(*core.HTTPGetAction)(0xc0082b5490), TCPSocket:(*core.TCPSocketAction)(0xc009c8ab40)}, InitialDelaySeconds:4, TimeoutSeconds:1, PeriodSeconds:5, SuccessThreshold:3, FailureThreshold:3, TerminationGracePeriodSeconds:(*int64)(nil)}: must not be set for init containers]
06:00:58 Pod zkapp 798:	Successfully assigned acto-namespace/zkapp to acto-cluster-7-worker
06:00:59 Pod zkapp 799:	Container image "tylergu1998/zkapp:v1" already present on machine
06:00:59 Pod zkapp 799:	Created container zkapp
06:00:59 Pod zkapp 799:	Started container zkapp
